[{"content":"If you\u0026rsquo;ve been reading the documentation in order, you should now know about all the features and configurations available in Blowfish. This page is designed to pull everything together and offer some worked examples that you might like to use in your Hugo project.\nTip: If you\u0026rsquo;re new to Hugo, be sure to check out the official docs to learn more about the concept of page bundles and resources. The examples on this page can all be adapted to different scenarios but hopefully give you some ideas about how to approach formatting a particular content item for your individual project.\nBranch pages # Branch page bundles in Hugo cover items like the homepage, section listings, and taxonomy pages. The important thing to remember about branch bundles is that the filename for this content type is _index.md.\nBlowfish will honour the front matter parameters specified in branch pages and these will override the default settings for that particular page. For example, setting the title parameter in a branch page will allow overriding the page title.\nHomepage # Layout: layouts/index.html Content: content/_index.md The homepage in Blowfish is special in that it\u0026rsquo;s overarching design is controlled by the homepage layout config parameter. You can learn more about this in the Homepage Layout section.\nIf you want to add custom content to this page, you simply need to create a content/_index.md file. Anything in this file will then be included in your homepage.\nExample:\n--- title: \u0026#34;Welcome to Blowfish!\u0026#34; description: \u0026#34;This is a demo of adding content to the homepage.\u0026#34; --- Welcome to my website! I\u0026#39;m really happy you stopped by. This example sets a custom title and adds some additional text to the body of the page. Any Markdown formatted text is acceptable, including shortcodes, images and links.\nList pages # Layout: layouts/_default/list.html Content: content/../_index.md List pages group all the pages within into a section and provide a way for visitors to reach each page. A blog or portfolio are examples of a list page as they group together posts or projects.\nCreating a list page is as simple as making a sub-directory in the content folder. For example, to create a \u0026ldquo;Projects\u0026rdquo; section, you would create content/projects/. Then create a Markdown file for each of your projects.\nA list page will be generated by default, however to customise the content, you should also create an _index.md page in this new directory.\n. └── content └── projects ├── _index.md # /projects ├── first-project.md # /projects/first-project └── another-project ├── index.md # /projects/another-project └── project.jpg Hugo will generate URLs for the pages in your projects folder accordingly.\nJust like the homepage, content in the _index.md file will be output into the generated list index. Blowfish will then list any pages in this section below the content.\nExample:\n--- title: \u0026#34;Projects\u0026#34; description: \u0026#34;Learn about some of my projects.\u0026#34; cascade: showReadingTime: false --- This section contains all my current projects. In this example, the special cascade parameter is being used to hide the reading time on any sub-pages within this section. By doing this, any project pages will not have their reading time showing. This is a great way to override default theme parameters for an entire section without having to include them in every individual page.\nThe samples section of this site is an example of a list page.\nTaxonomy pages # List layout: layouts/_default/taxonomy.html Term layout: layouts/_default/term.html Content: content/../_index.md Taxonomy pages come in two forms - taxonomy lists and taxonomy terms. Lists display a listing of each of the terms within a given taxonomy, while terms display a list of pages that are related to a given term.\nThe terminology can get a little confusing so let\u0026rsquo;s explore an example using a taxonomy named animals.\nFirstly, to use taxonomies in Hugo, they have to be configured. This is done by creating a config file at config/_default/taxonomies.toml and defining the taxonomy name.\n# config/_default/taxonomies.toml animal = \u0026#34;animals\u0026#34; Hugo expects taxonomies to be listed using their singular and plural forms, so we add the singular animal equals the plural animals to create our example taxonomy.\nNow that our animals taxonomy exists, it needs to be added to individual content items. It\u0026rsquo;s as simple as inserting it into the front matter:\n--- title: \u0026#34;Into the Lion\u0026#39;s Den\u0026#34; description: \u0026#34;This week we\u0026#39;re learning about lions.\u0026#34; animals: [\u0026#34;lion\u0026#34;, \u0026#34;cat\u0026#34;] --- This has now created two terms within our animals taxonomy - lion and cat.\nAlthough it\u0026rsquo;s not obvious at this point, Hugo will now be generating list and term pages for this new taxonomy. By default the listing can be accessed at /animals/ and the term pages can be found at /animals/lion/ and /animals/cat/.\nThe list page will list all the terms contained within the taxonomy. In this example, navigating to /animals/ will show a page that has links for \u0026ldquo;lion\u0026rdquo; and \u0026ldquo;cat\u0026rdquo; which take visitors to the individual term pages.\nThe term pages will list all the pages contained within that term. These term lists are essentially the same as normal list pages and behave in much the same way.\nIn order to add custom content to taxonomy pages, simply create _index.md files in the content folder using the taxonomy name as the sub-directory name.\n. └── content └── animals ├── _index.md # /animals └── lion └── _index.md # /animals/lion Anything in these content files will now be placed onto the generated taxonomy pages. As with other content, the front matter variables can be used to override defaults. In this way you could have a tag named lion but override the title to be \u0026ldquo;Lion\u0026rdquo;.\nTo see how this looks in reality, check out the tags taxonomy listing on this site.\nLeaf pages # Layout: layouts/_default/single.html Content (standalone): content/../page-name.md Content (bundled): content/../page-name/index.md Leaf pages in Hugo are basically standard content pages. They are defined as pages that don\u0026rsquo;t contain any sub-pages. These could be things like an about page, or an individual blog post that lives in the blog section of the website.\nThe most important thing to remember about leaf pages is that unlike branch pages, leaf pages should be named index.md without an underscore. Leaf pages are also special in that they can be grouped together at the top level of the section and named with a unique name.\n. └── content └── blog ├── first-post.md # /blog/first-post ├── second-post.md # /blog/second-post └── third-post ├── index.md # /blog/third-post └── image.jpg When including assets in a page, like an image, a page bundle should be used. Page bundles are created using a sub-directory with an index.md file. Grouping the assets with the content in its own directory is important as many of the shortcodes and other theme logic assumes that resources are bundled alongside pages.\nExample:\n--- title: \u0026#34;My First Blog Post\u0026#34; date: 2022-01-25 description: \u0026#34;Welcome to my blog!\u0026#34; summary: \u0026#34;Learn more about me and why I am starting this blog.\u0026#34; tags: [\u0026#34;welcome\u0026#34;, \u0026#34;new\u0026#34;, \u0026#34;about\u0026#34;, \u0026#34;first\u0026#34;] --- _This_ is the content of my blog post. Leaf pages have a wide variety of front matter parameters that can be used to customise how they are displayed.\nExternal links # Blowfish has a special feature that allows links to external pages to appear alongside articles in the article listings. This is useful if you have content on third party websites like Medium, or research papers that you\u0026rsquo;d like to link to, without replicating the content in your Hugo site.\nIn order to create an external link article, some special front matter needs to be set:\n--- title: \u0026#34;My Medium post\u0026#34; date: 2022-01-25 externalUrl: \u0026#34;https://medium.com/\u0026#34; summary: \u0026#34;I wrote a post on Medium.\u0026#34; showReadingTime: false build: render: \u0026#34;false\u0026#34; list: \u0026#34;local\u0026#34; --- Along with the normal front matter parameters like title and summary, the externalUrl parameter is used to tell Blowfish that this is not an ordinary article. The URL provided here will be where visitors are directed when they select this article.\nAdditionally, we use a special Hugo front matter parameter build to prevent a normal page for this content being generated - there\u0026rsquo;s no point generating a page since we\u0026rsquo;re linking to an external URL!\nThe theme includes an archetype to make generating these external link articles simple. Just specify -k external when making new content.\nhugo new -k external posts/my-post.md Simple pages # Layout: layouts/_default/simple.html Front Matter: layout: \u0026quot;simple\u0026quot; Blowfish also includes a special layout for simple pages. The simple layout is a full-width template that just places Markdown content into the page without any special theme features.\nThe only features available in the simple layout are breadcrumbs and sharing links. However, the behaviour of these can still be controlled using the normal page front matter variables.\nTo enable the simple layout on a particular page, add the layout front matter variable with a value of \u0026quot;simple\u0026quot;:\n--- title: \u0026#34;My landing page\u0026#34; date: 2022-03-08 layout: \u0026#34;simple\u0026#34; --- This page content is now full-width. Custom layouts # One of the benefits of Hugo is that it makes it easy to create custom layouts for the whole site, individual sections or pages.\nLayouts follow all the normal Hugo templating rules and more information is available in the official Hugo docs.\nOverriding default layouts # Each of the content types discussed above lists the layout file that is used to generate each type of page. If this file is created in your local project it will override the theme template and thus can be used to customise the default style of the website.\nFor example, creating a layouts/_default/single.html file will allow the layout of leaf pages to be completely customised.\nCustom section layouts # It is also simple to create custom layouts for individual content sections. This is useful when you want to make a section that lists a certain type of content using a particular style.\nLet\u0026rsquo;s step through an example that creates a custom \u0026ldquo;Projects\u0026rdquo; page that lists projects using a special layout.\nIn order to do this, structure your content using the normal Hugo content rules and create a section for your projects. Additionally, create a new layout for the projects section by using the same directory name as the content and adding a list.html file.\n. └── content │ └── projects │ ├── _index.md │ ├── first-project.md │ └── second-project.md └── layouts └── projects └── list.html This list.html file will now override the default list template, but only for the projects section. Before we look at this file, lets first look at the individual project files.\n--- title: \u0026#34;Blowfish\u0026#34; date: 2021-08-11 icon: \u0026#34;github\u0026#34; description: \u0026#34;A theme for Hugo built with Tailwind CSS.\u0026#34; topics: [\u0026#34;Hugo\u0026#34;, \u0026#34;Web\u0026#34;, \u0026#34;Tailwind\u0026#34;] externalUrl: \u0026#34;https://github.com/nunocoracao/blowfish/\u0026#34; --- In this example we are assigning some metadata for each project that we can then use in our list template. There\u0026rsquo;s no page content, but there\u0026rsquo;s nothing stopping you from including it. It\u0026rsquo;s your own custom template after all!\nWith the projects defined, now we can create a list template that outputs the details of each project.\n{{ define \u0026#34;main\u0026#34; }} \u0026lt;section class=\u0026#34;mt-8\u0026#34;\u0026gt; {{ range .Pages }} \u0026lt;article class=\u0026#34;pb-6\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;flex\u0026#34; href=\u0026#34;{{ .Params.externalUrl }}\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mr-3 text-3xl text-neutral-300\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;relative inline-block align-text-bottom\u0026#34;\u0026gt; {{ partial \u0026#34;icon.html\u0026#34; .Params.icon }} \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h3 class=\u0026#34;flex text-xl font-semibold\u0026#34;\u0026gt; {{ .Title }} \u0026lt;/h3\u0026gt; \u0026lt;p class=\u0026#34;text-sm text-neutral-400\u0026#34;\u0026gt; {{ .Description }} \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/article\u0026gt; {{ end }} \u0026lt;/section\u0026gt; {{ end }} Although this is quite a straightforward example, you can see that it steps through each of the pages in this section (ie. each project), and then outputs HTML links to each project alongside an icon. The metadata in the front matter for each project is used to determine which information is displayed.\nKeep in mind that you\u0026rsquo;ll need to ensure the relevant styles and classes are available, which may require the Tailwind CSS to be recompiled. This is discussed in more detail in the Advanced Customisation section.\nWhen making custom templates like this one, it\u0026rsquo;s always easiest to take a look at how the default Blowfish template works and then use that as a guide. Remember, the Hugo docs are a great resource to learn more about creating templates too.\n","externalUrl":null,"permalink":"/courses/machine-learning/content-examples/","section":"Kursus","summary":"\u003cp\u003eIf you\u0026rsquo;ve been reading the documentation in order, you should now know about all the features and configurations available in Blowfish. This page is designed to pull everything together and offer some worked examples that you might like to use in your Hugo project.\u003c/p\u003e\n\n  \n\n\n\n\u003cdiv\n  \n    class=\"flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900\"\n  \n  \u003e\n  \u003cspan\n    \n      class=\"text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center\"\n    \n    \u003e\n    \u003cspan class=\"relative block icon\"\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\u003e\u003cpath fill=\"currentColor\" d=\"M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z\"/\u003e\u003c/svg\u003e\n\u003c/span\u003e\n  \u003c/span\u003e\n\n  \u003cspan\n    \n      class=\"dark:text-neutral-300\"\n    \n    \u003e\u003cstrong\u003eTip:\u003c/strong\u003e If you\u0026rsquo;re new to Hugo, be sure to check out the \u003ca\n  href=\"https://gohugo.io/content-management/page-bundles/\"\n    target=\"_blank\"\n  \u003eofficial docs\u003c/a\u003e to learn more about the concept of page bundles and resources.\u003c/span\u003e\n\u003c/div\u003e\n\n\u003cp\u003eThe examples on this page can all be adapted to different scenarios but hopefully give you some ideas about how to approach formatting a particular content item for your individual project.\u003c/p\u003e","title":"Era Perkembangan Artificial Intelligence: Machine Learning dan Computer Vision","type":"courses"},{"content":"","externalUrl":"https://n9o.xyz","permalink":"/users/e8b2eb823290677fbba3390d5cef2c35/","section":"Users","summary":"","title":"n9o.xyz","type":"users"},{"content":" Apa itu Pemrograman Web? # Pemrograman web adalah proses pembuatan dan pengembangan situs web atau aplikasi berbasis web menggunakan bahasa pemrograman. Dalam dunia digital yang serba terhubung ini, hampir setiap aktivitas manusia, mulai dari belanja online hingga berkomunikasi, dilakukan melalui aplikasi web. Materi yang sedang kamu baca pada kursus ini juga merupakan contoh pemanfaatan web. Pemrograman web tidak hanya mencakup pembuatan tampilan yang menarik, tetapi juga pengelolaan interaksi pengguna, pengolahan data, dan memastikan aplikasi dapat berjalan dengan baik di berbagai perangkat.\nSecara umum, pemrograman web terbagi menjadi dua bagian utama yaitu front-end dan back-end.\nFront-end berfokus pada segala sesuatu yang dilihat dan digunakan oleh pengguna, seperti desain, layout, dan interaktivitas situs web. Ini melibatkan penggunaan HTML, CSS, dan JavaScript. Back-end berhubungan dengan server, database, dan logika aplikasi yang berjalan di belakang layar untuk mendukung fungsionalitas situs web. Dengan menguasai pemrograman web, kita dapat membangun situs web yang responsif, menarik, dan fungsional yang dapat diakses oleh siapa saja di seluruh dunia. Pemrograman web membuka banyak peluang karir, mulai dari pengembangan situs e-commerce hingga aplikasi mobile yang terhubung dengan internet.\nContoh Web Populer Berdasarkan Kategori # Search Engine # Search engine atau mesin pencari adalah platform yang memungkinkan pengguna untuk mencari informasi di internet. Mesin pencari bekerja dengan cara mengindeks halaman web dan memberikan hasil pencarian berdasarkan relevansi terhadap kata kunci yang dimasukkan.\nGoogle - Mesin pencari terbesar dan paling populer di dunia. DuckDuckGo - Mesin pencari yang mengutamakan privasi pengguna. Yahoo - Mesin pencari dan portal berita. Bing - Mesin pencari milik Microsoft. Media Sosial # Media sosial adalah platform online yang memungkinkan pengguna untuk berinteraksi, berbagi konten, dan terhubung dengan orang lain. Setiap platform memiliki ciri khas dan tujuan berbeda, mulai dari berbagi foto, video, hingga update status.\nFacebook - Platform media sosial untuk berinteraksi dan berbagi konten. Instagram - Platform berbagi foto dan video. X (sebelumnya Twitter) - Platform untuk berbagi pesan singkat dan berita terkini. TikTok - Platform berbagi video pendek yang viral. E-commerce # E-commerce atau perdagangan elektronik adalah platform online untuk membeli dan menjual barang atau jasa. E-commerce telah mengubah cara kita berbelanja, memungkinkan transaksi jual beli dilakukan secara online dengan mudah.\nAmazon - E-commerce global yang menawarkan berbagai produk, dari elektronik hingga pakaian. Etsy - Marketplace yang fokus pada produk kerajinan tangan, barang unik, dan vintage. Gumroad - Platform untuk menjual produk digital seperti ebook, musik, dan software langsung ke pelanggan. Shopee - Platform e-commerce untuk belanja online di Asia Tenggara termasuk di Indonesia. Tokopedia - Marketplace di Indonesia untuk membeli dan menjual produk. Tools AI # Tools AI adalah aplikasi berbasis kecerdasan buatan yang dirancang untuk mempermudah berbagai tugas, mulai dari percakapan otomatis hingga analisis data. AI ini digunakan di berbagai sektor seperti pelayanan pelanggan, pencarian informasi, dan banyak lagi. Beberapa tools AI dibuat berbasis website.\nChatGPT - Platform AI untuk percakapan dan penyelesaian masalah berbasis teks dan gambar, memungkinkan pengguna untuk mendapatkan jawaban dan bantuan secara interaktif. Gemini - Platform AI dari Google yang menyediakan kemampuan percakapan dan penyelesaian masalah berbasis teks, gambar, dan video untuk berbagai aplikasi dan industri. Claude AI - Model AI yang berfokus pada percakapan dan analisis, memungkinkan interaksi manusia dengan kecerdasan buatan secara alami dan efisien. Grok - Tools AI untuk menyelesaikan berbagai masalah teknis dan non-teknis, dengan kemampuan percakapan yang dapat digunakan untuk berbagai tujuan praktis. DeepSeek - Platform AI yang digunakan untuk pencarian dan analisis data berbasis kecerdasan buatan, memfasilitasi pencarian informasi yang lebih cerdas dan cepat. Client Side vs Server Side # Dalam pengembangan web, client-side dan server-side merujuk pada istilah di mana proses pengolahan data dilakukan, yaitu di sisi pengguna (client) atau di sisi server. Kedua konsep ini sangat penting untuk memahami cara kerja web dan bagaimana website dapat dibuat interaktif dan dinamis.\nClient Side # Client-side merujuk pada segala sesuatu yang terjadi di browser pengguna. Semua proses atau pemrosesan yang dilakukan oleh browser disebut sebagai client-side processing. Contoh utama dari teknologi client-side adalah HTML, CSS, dan JavaScript. Ketika pengguna mengakses sebuah website, browser akan mengambil file HTML, CSS, dan JavaScript yang dikirimkan oleh server dan merendernya untuk ditampilkan kepada pengguna.\nCiri-ciri client-side:\nProses dilakukan di browser pengguna. Website bisa bersifat statis (tidak berubah-ubah) jika hanya mengandalkan HTML dan CSS tanpa interaksi dinamis. Front-end adalah istilah yang digunakan untuk menyebut bagian website yang dapat dilihat dan diinteraksikan langsung oleh pengguna, dan sebagian besar pengolahan client-side dilakukan di sini. Server Side # Server-side merujuk pada segala sesuatu yang terjadi di server. Proses server-side melibatkan pemrosesan data, penyimpanan, dan pengambilan data dari database, serta pengolahan logika bisnis yang tidak dapat dilakukan di browser. Setelah data diproses di server, server mengirimkan hasilnya (seperti halaman HTML yang telah diproses atau data dalam format JSON) ke browser pengguna.\nCiri-ciri server-side:\nProses dilakukan di server, bukan di browser. Website bisa bersifat dinamis, karena server dapat mengubah konten berdasarkan permintaan pengguna (misalnya, hasil pencarian atau data yang diperbarui). Back-end adalah istilah yang digunakan untuk bagian server, database, dan logika aplikasi yang tidak terlihat oleh pengguna, dan sebagian besar pengolahan server-side dilakukan di sini. Web Statis vs Dinamis # Web Statis: Situs web statis adalah situs yang isinya tetap dan tidak berubah kecuali diperbarui secara manual oleh pengembang. Pengolahan sebagian besar dilakukan di client-side, dan setiap kali pengguna mengakses halaman, server hanya mengirimkan halaman yang sudah ada tanpa ada pemrosesan lebih lanjut. Contohnya adalah website portofolio atau blog sederhana. Web Dinamis: Situs web dinamis adalah situs yang kontennya dapat berubah berdasarkan interaksi pengguna atau data yang diambil dari server. Pengolahan dilakukan di server-side, dan halaman dapat diperbarui atau ditambah dengan data baru setiap kali pengguna berinteraksi dengan website, seperti pada e-commerce atau aplikasi web interaktif. Perbedaan Front-end dan Back-end # Front-end adalah bagian dari website yang terlihat oleh pengguna dan berhubungan langsung dengan interaksi pengguna. Ini termasuk HTML, CSS, dan JavaScript, serta elemen-elemen desain dan interaktivitas yang dijalankan di client-side. Back-end adalah bagian yang tidak terlihat oleh pengguna dan menangani logika aplikasi, penyimpanan data, serta komunikasi dengan database dan server. Ini mencakup pemrograman server-side dan database yang mengelola data dinamis dan interaksi dengan pengguna. Kesimpulan # Client-side berfokus pada apa yang terjadi di browser dan digunakan untuk membuat web statis atau memberikan interaktivitas dasar menggunakan front-end. Server-side berfokus pada pemrosesan data dan logika bisnis di server, memungkinkan pembuatan web dinamis yang mengandalkan back-end untuk pengolahan dan penyimpanan data. Cara Kerja Web # Website terdiri dari beberapa elemen yang bekerja bersama untuk menghasilkan tampilan dan interaksi yang kita lihat di browser. Berikut adalah langkah-langkah umum yang menggambarkan cara kerja web:\ngraph TD A[\"Permintaan Pengguna\"] B[\"Proses di Server\"] --\u003e C[\"Pengiriman Data ke Browser\"] D[\"Rendering di Browser\"] E[\"Interaksi Pengguna\"] F[\"Respons Server\"] G[\"Keamanan dan Protokol\"] A --\u003e|URL| B C --\u003e|HTTP Response| D D --\u003e|HTML, CSS, JS| E E --\u003e|Pengiriman Formulir/Tautan| F F --\u003e|Pembaruan Data| G G --\u003e|HTTPS| A %%{ init: {'themeVariables': {'nodeTextAlign': 'center'}} }%% 1. Permintaan Pengguna (Request) # Ketika kita mengetikkan alamat website di browser atau mengklik tautan, browser mengirimkan permintaan (request) ke server yang menyimpan situs tersebut. Permintaan ini berupa URL yang menunjukkan lokasi sumber daya yang diminta (misalnya, halaman HTML, gambar, atau file lainnya).\n2. Proses di Server # Server adalah komputer yang menyimpan data website, termasuk file HTML, CSS, JavaScript, dan konten lainnya. Setelah menerima permintaan, server akan memprosesnya dan mencari sumber daya yang diminta. Jika ditemukan, server mengirimkan kembali file yang sesuai ke browser pengguna. Jika tidak ditemukan, server akan mengirimkan pesan error (misalnya 404 Not Found).\n3. Pengiriman Data ke Browser # Setelah server memproses permintaan, data (biasanya dalam bentuk HTML, CSS, dan JavaScript) dikirimkan ke browser pengguna. Data ini diterima oleh browser dalam bentuk HTTP response.\n4. Rendering di Browser # Browser kemudian membaca dan menampilkan data yang diterima. Proses ini melibatkan beberapa langkah:\nHTML: Struktur dasar halaman website yang membentuk konten dan elemen-elemen dasar. CSS: Menata tampilan elemen-elemen HTML seperti warna, ukuran, dan layout. JavaScript: Menambahkan interaktivitas, animasi, dan pemrosesan dinamis. 5. Interaksi Pengguna # Setelah halaman dimuat, pengguna dapat berinteraksi dengan website. Ini bisa termasuk mengklik tombol, mengisi formulir, atau melakukan pencarian. Interaksi ini sering kali melibatkan pengiriman permintaan ke server lagi (misalnya, pengiriman formulir atau klik tautan).\n6. Respons Server # Jika interaksi memerlukan data baru atau perubahan (misalnya, pembaruan database atau pengambilan informasi baru), server akan memprosesnya dan mengirimkan kembali respons baru. Browser kemudian akan memperbarui tampilan sesuai dengan respons yang diterima.\n7. Keamanan dan Protokol # Proses ini juga melibatkan protokol keamanan, seperti HTTPS, untuk mengenkripsi data antara browser dan server, memastikan komunikasi yang aman.\nDengan memahami cara kerja web, kita dapat lebih mudah merancang dan membangun situs web yang efisien dan aman.\nStruktur Dasar Website # Struktur dasar website terdiri dari beberapa elemen yang saling terhubung untuk membentuk halaman yang bisa diakses oleh pengguna. Pada umumnya, sebuah website secara minimal terdiri dari dua bagian utama yaitu HTML yang merupakan kerangka dasar halaman dan CSS yang menentukan tampilan. Selain itu, kita dapat mengintegrasikan JavaScript untuk memberikan interaktivitas pada halaman tersebut.\nSebagai analogi, bayangkan sebuah rumah yang memiliki kerangka kokoh dengan dinding, jendela, dan pintu yang tertata rapi. Itu adalah HTML yang merupakan struktur dasar yang membentuk fondasi rumah. Sekarang, bayangkan rumah tersebut dicat dengan warna-warna indah, dihiasi dengan furnitur yang rapi, dan pencahayaannya ditata dengan cantik. Itu adalah CSS yang membuat rumah menjadi lebih menarik dan nyaman dilihat. Lalu, bayangkan penghuni rumah bisa menyalakan lampu, membuka dan menutup jendela, atau mengubah suhu ruangan sesuai keinginan. Itu adalah JavaScript yang memberikan interaksi dan dinamika, menjadikan rumah lebih hidup dan menyenangkan untuk dihuni. Semua elemen ini bekerja bersama untuk menciptakan rumah yang tidak hanya kokoh, tetapi juga indah dan fungsional.\nHTML sebagai kerangka untuk membuat struktur halaman dapat memuat berbagai elemen di halaman website (seperti teks, gambar, tabel, dan form) yang akan ditulis menggunakan Tag HTML. Berikut adalah Tag penyusun bagian-bagian utama pada struktur HTML:\n\u0026lt;html\u0026gt;: Tag pembuka dan penutup untuk seluruh halaman. \u0026lt;head\u0026gt;: Berisi informasi tentang halaman seperti judul, pengaturan meta, dan link ke file CSS. \u0026lt;meta\u0026gt;: Menyediakan metadata tentang halaman, seperti karakter encoding dan deskripsi. \u0026lt;title\u0026gt;: Menentukan judul halaman yang tampil di tab browser. \u0026lt;link\u0026gt;: Digunakan untuk menghubungkan file CSS atau favicon. \u0026lt;body\u0026gt;: Berisi konten yang ditampilkan di halaman website, seperti teks, gambar, dan elemen lainnya. Contoh struktur dasar HTML:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Halaman Web Saya\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;styles.css\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Selamat datang di Website Saya!\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Ini adalah paragraf pertama di halaman web.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;\u0026amp;copy; 2025 Website Saya\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Tools yang Digunakan untuk Memulai Pemrograman Web (Frontend) # Pada awal perjalanan pembelajaran pemrograman web dalam kursus ini, terutama untuk bagian frontend, ada beberapa tools dan perangkat lunak yang perlu disiapkan. Frontend berfokus pada pembuatan antarmuka pengguna (user interface) yang dapat berinteraksi langsung dengan pengguna. Berikut adalah tools yang direkomendasikan untuk memulai pemrograman web di sisi frontend:\n1. Editor: Visual Studio Code (VSCode) # Visual Studio Code (VSCode) adalah editor kode sumber yang sangat populer di kalangan pengembang web, terutama untuk pemrograman frontend. VSCode memiliki berbagai fitur yang mendukung produktivitas dalam pengembangan web, antara lain:\nEditor Kode yang Ringan dan Cepat: VSCode menawarkan pengalaman pengeditan yang cepat dan responsif, cocok untuk menulis kode HTML, CSS, dan JavaScript. Ekstensi yang Banyak: VSCode memiliki berbagai ekstensi yang dapat membantu meningkatkan produktivitas. Beberapa ekstensi yang sangat berguna untuk pemrograman frontend antara lain: Prettier: Untuk otomatis memperindah kode (auto-formatting). Live Server: Untuk melihat perubahan yang langsung muncul di browser saat kita mengedit file HTML atau CSS. ESLint: Untuk memeriksa kualitas dan kesalahan sintaksis dalam kode JavaScript. Auto Close Tag: Untuk secara otomatis menutup tag HTML dan XML saat mengetik. Integrasi Git: VSCode menyediakan integrasi langsung dengan Git, memudahkan pengelolaan versi proyek frontend Anda. Silahkan unduh visual studio code melalui halaman resmi di https://code.visualstudio.com/download. 2. Browser yang Direkomendasikan # Untuk mengembangkan aplikasi web yang dapat diakses oleh berbagai pengguna, penting untuk memilih browser yang memiliki kompatibilitas tinggi dengan standar web. Beberapa browser yang direkomendasikan untuk pengembangan frontend adalah:\nGoogle Chrome: Dikenal dengan DevTools yang sangat kuat untuk debugging. Mozilla Firefox: Menawarkan alat pengembangan yang kaya fitur dan responsif. Microsoft Edge: Browser terbaru dari Microsoft yang juga mendukung DevTools yang canggih. 3. Browser Developer Tools # Selain editor kode, browser developer tools (DevTools) adalah alat yang sangat penting untuk pengembangan frontend. Browser seperti Google Chrome atau Mozilla Firefox dilengkapi dengan alat pengembang yang memungkinkan kita untuk:\nMemeriksa dan memodifikasi elemen HTML dan CSS secara langsung. Melihat dan menganalisis JavaScript yang berjalan di halaman. Melakukan debugging untuk memperbaiki masalah tampilan atau interaktivitas. Memantau kinerja halaman dan mengidentifikasi potensi masalah kecepatan. Pada Google Chrome, Developer Tools dapat ditampilkan dengan cara menggunakan kombinasi tombol CMD+SHIFT+I pada Mac atau CTRL+SHIFT+I pada Windows. Dapat juga dilakukan dengan cara klik kanan pada halaman lalu pilih inspect.\n","externalUrl":null,"permalink":"/courses/web-programming/introduction/","section":"Kursus","summary":"\u003ch2 class=\"relative group\"\u003eApa itu Pemrograman Web? \n    \u003cdiv id=\"apa-itu-pemrograman-web\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#apa-itu-pemrograman-web\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003ePemrograman web adalah proses pembuatan dan pengembangan situs web atau aplikasi berbasis web menggunakan bahasa pemrograman. Dalam dunia digital yang serba terhubung ini, hampir setiap aktivitas manusia, mulai dari belanja online hingga berkomunikasi, dilakukan melalui aplikasi web. Materi yang sedang kamu baca pada kursus ini juga merupakan contoh pemanfaatan web. Pemrograman web tidak hanya mencakup pembuatan tampilan yang menarik, tetapi juga pengelolaan interaksi pengguna, pengolahan data, dan memastikan aplikasi dapat berjalan dengan baik di berbagai perangkat.\u003c/p\u003e","title":"Pengantar Pemrograman Web","type":"courses"},{"content":" Blowfish is packed with tons of features. The original aim of Blowfish was to develop a theme that was simple and lightweight. The theme is a fork of Congo and expands its initial vision.\nTailwind CSS 3.0 # Tailwind CSS is at the heart of Blowfish and this release contains the very latest Tailwind CSS version 3. It brings with it performance optimisations and support for some great new CSS features.\nMultilingual support # A highly requested feature, Blowfish is now multilingual! If you publish your content in multiple languages, the site will be built with all the translations available.\n🇬🇧 🇩🇪 🇫🇷 🇪🇸 🇨🇳 🇧🇷 🇹🇷 🇧🇩 Thanks to submissions from the community, Blowfish has already been translated into thirty languages with more to be added over time. By the way, pull requests for new languages are always welcome!\nRTL language support # One of the benefits of the new Tailwind and Multilingual features is the ability to add RTL language support. When enabled, the entire site will reflow content from right-to-left. Every element in the theme has been restyled to ensure it looks great in this mode which aids authors who wish to generate content in RTL languages.\nRTL is controlled on a per-language basis so you can mix and match both RTL and LTR content in your projects and the theme will respond accordingly.\nAutomatic image resizing # A big change in Blowfish 2.0 is the addition of automatic image resizing. Using the power of Hugo Pipes, images in Markdown content are now automatically scaled to different output sizes. These are then presented using HTML srcset attributes enabling optimised file sizes to be served to your site visitors.\n\u0026lt;!-- Markdown: ![My image](image.jpg) --\u0026gt; \u0026lt;img srcset=\u0026#34; /image_320x0_resize_q75_box.jpg 320w, /image_635x0_resize_q75_box.jpg 635w, /image_1024x0_resize_q75_box.jpg 1024w\u0026#34; src=\u0026#34;/image_635x0_resize_q75_box.jpg\u0026#34; alt=\u0026#34;My image\u0026#34; /\u0026gt; Best of all there\u0026rsquo;s nothing you need to change! Simply insert standard Markdown image syntax and let the theme do the rest. If you want a little more control, the figure shortcode has been completely rewritten to provide the same resizing benefits.\nSite search # Powered by Fuse.js, site search allows visitors to quickly and easily find your content. All searches are performed client-side meaning there\u0026rsquo;s nothing to configure on the server and queries are performed super fast. Simply enable the feature in your site configuration and you\u0026rsquo;re all set. Oh, and it also supports full keyboard navigation!\nTables of contents # A highly requested feature, Blowfish now supports tables of contents on article pages. You can see it in action on this page. The contents are fully responsive and will adjust to take advantage of the space available at different screen resolutions.\nAvailable on a global or per article basis, the table of contents can be fully customised using standard Hugo configuration values, allowing you to adjust the behaviour to suit your project.\nAccessibility improvements # From adding ARIA descriptions to more items or simply adjusting the contrast of certain text elements, this release is the most accessible yet.\nVersion 2 also introduces \u0026ldquo;skip to content\u0026rdquo; and \u0026ldquo;scroll to top\u0026rdquo; links that enable quick navigation. There\u0026rsquo;s also keyboard shortcuts for enabling items like search without reaching for the mouse.\nThe new image resizing features also provide full control over alt and title elements enabling an accessible experience for all visitors.\nA whole lot more # There\u0026rsquo;s countless other features to explore. From being able to display taxonomies on articles and list pages, to using the new headline author parameter to customise your homepage. There\u0026rsquo;s also improved JSON-LD structured data which further optimises SEO performance.\n","externalUrl":null,"permalink":"/docs/welcome/","section":"Documentation","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  Blowfish is packed with tons of features.\n\u003c/div\u003e\n\n\u003cp\u003eThe original aim of Blowfish was to develop a theme that was simple and lightweight. The theme is a fork of \u003ca target=\"_blank\" href=\"https://github.com/nunocoracao/congo\"\u003eCongo\u003c/a\u003e and expands its initial vision.\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003eTailwind CSS 3.0 \n    \u003cdiv id=\"tailwind-css-30\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#tailwind-css-30\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eTailwind CSS is at the heart of Blowfish and this release contains the very latest \u003ca\n  href=\"https://tailwindcss.com/blog/tailwindcss-v3\"\n    target=\"_blank\"\n  \u003eTailwind CSS version 3\u003c/a\u003e. It brings with it performance optimisations and support for some great new CSS features.\u003c/p\u003e","title":"Welcome to Blowfish","type":"docs"},{"content":"In order to be able to support dynamic data across your website we\u0026rsquo;ve added the support to integrate Firebase. This will allow you to use the views feature across lists and posts.\nGo to Firebase website and create an account for free Create a new project Select analytics location Setup firebase in Blowfish by getting the variables for your project and setting them inside params.toml file. More details can be found in this page. You can find an example of the file Firebase will provide below, notice the parameters within the FirebaseConfig object. // Import the functions you need from the SDKs you need import { initializeApp } from \u0026#34;firebase/app\u0026#34;; import { getAnalytics } from \u0026#34;firebase/analytics\u0026#34;; // TODO: Add SDKs for Firebase products that you want to use // https://firebase.google.com/docs/web/setup#available-libraries // Your web app\u0026#39;s Firebase configuration // For Firebase JS SDK v7.20.0 and later, measurementId is optional const firebaseConfig = { apiKey: \u0026#34;AIzaSyB5tqlqDky77Vb4Tc4apiHV4hRZI18KGiY\u0026#34;, authDomain: \u0026#34;blowfish-21fff.firebaseapp.com\u0026#34;, projectId: \u0026#34;blowfish-21fff\u0026#34;, storageBucket: \u0026#34;blowfish-21fff.appspot.com\u0026#34;, messagingSenderId: \u0026#34;60108104191\u0026#34;, appId: \u0026#34;1:60108104191:web:039842ebe1370698b487ca\u0026#34;, measurementId: \u0026#34;G-PEDMYR1V0K\u0026#34; }; // Initialize Firebase const app = initializeApp(firebaseConfig); const analytics = getAnalytics(app); Setup Firestore - Select Build and open Firestore. Create a new database and choose to start in production mode. Select server location and wait. Once that is started you need to configure the rules. Just copy and paste the file below and press publish. rules_version = \u0026#39;2\u0026#39;; service cloud.firestore { match /databases/{database}/documents { match /{document=**} { allow read, write: if request.auth != null; } } } Enable anonymous authorization - Select Build and open Authentication. Select get started, click Anonymous and turn it on, save. Enjoy - you can now activate views and likes on Blowfish for all (or specific) articles. ","externalUrl":null,"permalink":"/courses/machine-learning/firebase-views/","section":"Kursus","summary":"\u003cp\u003eIn order to be able to support dynamic data across your website we\u0026rsquo;ve added the support to integrate Firebase. This will allow you to use the views feature across lists and posts.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eGo to \u003ca target=\"_blank\" href=\"https://firebase.com\"\u003eFirebase website\u003c/a\u003e and create an account for free\u003c/li\u003e\n\u003cli\u003eCreate a new project\u003c/li\u003e\n\u003cli\u003eSelect analytics location\u003c/li\u003e\n\u003cli\u003eSetup firebase in Blowfish by getting the variables for your project and setting them inside \u003ccode\u003eparams.toml\u003c/code\u003e file. More details can be found in \u003ca target=\"_blank\" href=\"https://muhammadfajarb.github.io/docs/configuration/#theme-parameters\"\u003ethis page\u003c/a\u003e. You can find an example of the file Firebase will provide below, notice the parameters within the FirebaseConfig object.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Import the functions you need from the SDKs you need\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003einitializeApp\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;firebase/app\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003egetAnalytics\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;firebase/analytics\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// TODO: Add SDKs for Firebase products that you want to use\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// https://firebase.google.com/docs/web/setup#available-libraries\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Your web app\u0026#39;s Firebase configuration\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efirebaseConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eapiKey\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;AIzaSyB5tqlqDky77Vb4Tc4apiHV4hRZI18KGiY\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eauthDomain\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;blowfish-21fff.firebaseapp.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eprojectId\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;blowfish-21fff\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003estorageBucket\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;blowfish-21fff.appspot.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003emessagingSenderId\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;60108104191\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eappId\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;1:60108104191:web:039842ebe1370698b487ca\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003emeasurementId\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;G-PEDMYR1V0K\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Initialize Firebase\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitializeApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efirebaseConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eanalytics\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003egetAnalytics\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"5\"\u003e\n\u003cli\u003eSetup Firestore - Select Build and open Firestore. Create a new database and choose to start in production mode. Select server location and wait. Once that is started you need to configure the rules. Just copy and paste the file below and press publish.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003erules_version = \u0026#39;2\u0026#39;;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eservice cloud.firestore {\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  match /databases/{database}/documents {\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    match /{document=**} {\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      allow read, write: if request.auth != null;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  }\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"6\"\u003e\n\u003cli\u003eEnable anonymous authorization - Select Build and open Authentication. Select get started, click Anonymous and turn it on, save.\u003c/li\u003e\n\u003cli\u003eEnjoy - you can now activate views and likes on Blowfish for all (or specific) articles.\u003c/li\u003e\n\u003c/ol\u003e","title":"Firebase: Views \u0026 Likes","type":"courses"},{"content":" Apa itu HTML? # HTML adalah singkatan dari Hyper Text Markup Language. HTML adalah bahasa markup standar untuk membuat halaman web. HTML menggambarkan struktur dari sebuah halaman web. HTML terdiri dari serangkaian elemen. Elemen-elemen HTML memberi tahu browser bagaimana cara menampilkan konten. Elemen-elemen HTML memberi label pada bagian-bagian konten seperti \u0026ldquo;ini adalah judul\u0026rdquo;, \u0026ldquo;ini adalah paragraf\u0026rdquo;, \u0026ldquo;ini adalah tautan\u0026rdquo;, dan sebagainya. Dokumen HTML Sederhana # \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Page Title\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Heading Pertamaku\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Paragraf Pertamaku\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Penjelasan Kode # Deklarasi \u0026lt;!DOCTYPE html\u0026gt; mendefinisikan bahwa dokumen ini adalah dokumen HTML5. Elemen \u0026lt;html\u0026gt; adalah elemen akar dari halaman HTML. Elemen \u0026lt;head\u0026gt; berisi informasi meta tentang halaman HTML. Elemen \u0026lt;title\u0026gt; menentukan judul untuk halaman HTML (yang ditampilkan di tab judul browser atau di tab halaman). Elemen \u0026lt;body\u0026gt; mendefinisikan tubuh dokumen, dan merupakan wadah untuk semua konten yang terlihat, seperti judul, paragraf, gambar, tautan, tabel, daftar, dll. Elemen \u0026lt;h1\u0026gt; mendefinisikan sebuah judul besar. Elemen \u0026lt;p\u0026gt; mendefinisikan sebuah paragraf. Elemen HTML # Elemen HTML adalah komponen dasar yang membentuk struktur sebuah halaman web. Setiap elemen HTML terdiri dari tag pembuka, konten, dan tag penutup. Tag pembuka biasanya dimulai dengan tanda kurung sudut (\u0026lt; dan \u0026gt;) diikuti dengan nama elemen, sementara tag penutup memiliki tanda miring di awal (\u0026lt;/\u0026gt;). Elemen-elemen HTML digunakan untuk memberi tahu browser bagaimana menampilkan konten di halaman web, seperti teks, gambar, video, atau tabel. Contohnya, elemen \u0026lt;h1\u0026gt; digunakan untuk membuat judul besar, sedangkan \u0026lt;p\u0026gt; digunakan untuk membuat paragraf. Elemen-elemen ini juga bisa memiliki atribut, yang memberikan informasi tambahan tentang elemen tersebut, seperti class, id, atau style. Dengan menggunakan elemen-elemen HTML, pengembang web dapat menyusun dan menyajikan konten secara terstruktur di halaman web.\n\u0026lt;nama-tag\u0026gt; Konten dituliskan di sini... \u0026lt;/nama-tag\u0026gt; Contoh: \u0026lt;h1\u0026gt;Heading Pertamaku\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Ini adalah paragraf pertamaku.\u0026lt;/p\u0026gt; \u0026lt;br\u0026gt; Start tag Element content End tag \u0026lt;h1\u0026gt; Heading Pertamaku \u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; Ini adalah paragraf pertamaku. \u0026lt;/p\u0026gt; \u0026lt;br\u0026gt; - tidak ada - - tidak ada - Catatan: Beberapa elemen HTML tidak memiliki konten seperti elemen \u0026lt;br\u0026gt;. Elemen-elemen ini disebut sebagai elemen kosong. Elemen kosong tidak memiliki tag penutup. Sejarah HTML # Sejak awal munculnya World Wide Web, telah ada banyak versi HTML.\nTahun Versi 1989 Tim Berners-Lee invented www 1991 Tim Berners-Lee invented HTML 1993 Dave Raggett drafted HTML+ 1995 HTML Working Group defined HTML 2.0 1997 W3C Recommendation: HTML 3.2 1999 W3C Recommendation: HTML 4.01 2000 W3C Recommendation: XHTML 1.0 2008 WHATWG HTML5 First Public Draft 2012 WHATWG HTML5 Living Standard 2014 W3C Recommendation: HTML5 2016 W3C Candidate Recommendation: HTML 5.1 2017 W3C Recommendation: HTML5.1 2nd Edition 2017 W3C Recommendation: HTML5.2 Percobaan 1: Struktur HTML # Pada bagian ini, kita akan memulai membuat halaman HTML menggunakan editor yang telah dipilih. Silahkan jalankan file teks editor yaitu Visual Studio Code yang telah di-install sebelumnya. Jika ingin menggunakan teks editor lain juga boleh misalnya Notepad, Notepad++, Sublime Text, dan sejenisnya.\nSilahkan buat terlebih dahulu folder yang akan digunakan untuk menyimpan seluruh file latihan praktikum. Misalnya folder yang dibuat terletak pada document/belajar_html/, lalu di dalam folder tersebut buat file dengan nama percobaan1.html.\ndocument/belajar_html/ └─ percobaan1.html Selanjutnya ketikkan kode berikut, lalu simpan.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Halo Dunia\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Selamat datang di website pertamaku :)\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Buka file percobaan1.html menggunakan browser misalnya Google Chrome. Klik dua kali pada file tersebut untuk mengaksesnya pada browser.\nBerikut adalah hasil yang ditampilkan pada browser.\nPercobaan 2: # ","externalUrl":null,"permalink":"/courses/web-programming/html/","section":"Kursus","summary":"\u003ch2 class=\"relative group\"\u003eApa itu HTML? \n    \u003cdiv id=\"apa-itu-html\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#apa-itu-html\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eHTML adalah singkatan dari Hyper Text Markup Language.\u003c/li\u003e\n\u003cli\u003eHTML adalah bahasa markup standar untuk membuat halaman web.\u003c/li\u003e\n\u003cli\u003eHTML menggambarkan struktur dari sebuah halaman web.\u003c/li\u003e\n\u003cli\u003eHTML terdiri dari serangkaian elemen.\u003c/li\u003e\n\u003cli\u003eElemen-elemen HTML memberi tahu browser bagaimana cara menampilkan konten.\u003c/li\u003e\n\u003cli\u003eElemen-elemen HTML memberi label pada bagian-bagian konten seperti \u0026ldquo;ini adalah judul\u0026rdquo;, \u0026ldquo;ini adalah paragraf\u0026rdquo;, \u0026ldquo;ini adalah tautan\u0026rdquo;, dan sebagainya.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 class=\"relative group\"\u003eDokumen HTML Sederhana \n    \u003cdiv id=\"dokumen-html-sederhana\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#dokumen-html-sederhana\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003ePage Title\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eHeading Pertamaku\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eParagraf Pertamaku\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\u003ch3 class=\"relative group\"\u003ePenjelasan Kode \n    \u003cdiv id=\"penjelasan-kode\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#penjelasan-kode\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eDeklarasi \u003ccode\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/code\u003e mendefinisikan bahwa dokumen ini adalah dokumen HTML5.\u003c/li\u003e\n\u003cli\u003eElemen \u003ccode\u003e\u0026lt;html\u0026gt;\u003c/code\u003e adalah elemen akar dari halaman HTML.\u003c/li\u003e\n\u003cli\u003eElemen \u003ccode\u003e\u0026lt;head\u0026gt;\u003c/code\u003e berisi informasi meta tentang halaman HTML.\u003c/li\u003e\n\u003cli\u003eElemen \u003ccode\u003e\u0026lt;title\u0026gt;\u003c/code\u003e menentukan judul untuk halaman HTML (yang ditampilkan di tab judul browser atau di tab halaman).\u003c/li\u003e\n\u003cli\u003eElemen \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e mendefinisikan tubuh dokumen, dan merupakan wadah untuk semua konten yang terlihat, seperti judul, paragraf, gambar, tautan, tabel, daftar, dll.\u003c/li\u003e\n\u003cli\u003eElemen \u003ccode\u003e\u0026lt;h1\u0026gt;\u003c/code\u003e mendefinisikan sebuah judul besar.\u003c/li\u003e\n\u003cli\u003eElemen \u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e mendefinisikan sebuah paragraf.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 class=\"relative group\"\u003eElemen HTML \n    \u003cdiv id=\"elemen-html\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#elemen-html\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eElemen HTML adalah komponen dasar yang membentuk struktur sebuah halaman web. Setiap elemen HTML terdiri dari tag pembuka, konten, dan tag penutup. Tag pembuka biasanya dimulai dengan tanda kurung sudut (\u003ccode\u003e\u0026lt;\u003c/code\u003e dan \u003ccode\u003e\u0026gt;\u003c/code\u003e) diikuti dengan nama elemen, sementara tag penutup memiliki tanda miring di awal (\u003ccode\u003e\u0026lt;/\u0026gt;\u003c/code\u003e). Elemen-elemen HTML digunakan untuk memberi tahu browser bagaimana menampilkan konten di halaman web, seperti teks, gambar, video, atau tabel. Contohnya, elemen \u003ccode\u003e\u0026lt;h1\u0026gt;\u003c/code\u003e digunakan untuk membuat judul besar, sedangkan \u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e digunakan untuk membuat paragraf. Elemen-elemen ini juga bisa memiliki atribut, yang memberikan informasi tambahan tentang elemen tersebut, seperti \u003ccode\u003eclass\u003c/code\u003e, \u003ccode\u003eid\u003c/code\u003e, atau \u003ccode\u003estyle\u003c/code\u003e. Dengan menggunakan elemen-elemen HTML, pengembang web dapat menyusun dan menyajikan konten secara terstruktur di halaman web.\u003c/p\u003e","title":"HTML (Hyper Text Markup Language)","type":"courses"},{"content":"Simply follow the standard Hugo Quick Start procedure to get up and running quickly.\nDetailed installation instructions can be found below. Instructions for updating the theme are also available.\nInstallation # These instructions will get you up and running using Hugo and Blowfish from a completely blank state. Most of the dependencies mentioned in this guide can be installed using the package manager of choice for your platform.\nInstall Hugo # If you haven\u0026rsquo;t used Hugo before, you will need to install it onto your local machine. You can check if it\u0026rsquo;s already installed by running the command hugo version.\nMake sure you are using Hugo version 0.87.0 or later as the theme takes advantage of some of the latest Hugo features. You can find detailed installation instructions for your platform in the Hugo docs.\nBlowfish Tools (recommended) # We just launched a new CLI tool to help you get started with Blowfish. It will create a new Hugo project, install the theme and set up the theme configuration files for you. It\u0026rsquo;s still in beta so please report any issues you find.\nInstall the CLI tool globally using npm (or other package manager):\nnpx blowfish-tools or\nnpm i -g blowfish-tools Then run the command blowfish-tools to start an interactive run which will guide you through creation and configuration use-cases.\nblowfish-tools You can also run the command blowfish-tools new to create a new Hugo project and install the theme in one go. Check the CLI help for more information.\nblowfish-tools new mynewsite Here\u0026rsquo;s a quick video of how fast it is to get started with Blowfish using the CLI tool:\nInstall without CLI # Create a new site # Run the command hugo new site mywebsite to create a new Hugo site in a directory named mywebsite.\nNote that you can name the project directory whatever you choose, but the instructions below will assume it\u0026rsquo;s named mywebsite. If you use a different name, be sure to substitute it accordingly.\nDownload the Blowfish theme # There several different ways to install the Blowfish theme into your Hugo website. From easiest to most difficult to install and maintain, they are:\nGit submodule (recommended) Hugo module Manual file copy If you\u0026rsquo;re unsure, choose the Git submodule method.\nInstall using git # This method is the quickest and easiest for keeping the theme up-to-date. Besides Hugo and Go, you\u0026rsquo;ll also need to ensure you have Git installed on your local machine.\nChange into the directory for your Hugo website (that you created above), initialise a new git repository and add Blowfish as a submodule.\ncd mywebsite git init git submodule add -b main https://github.com/nunocoracao/blowfish.git themes/blowfish Then continue to set up the theme configuration files.\nInstall using Hugo # For this method you\u0026rsquo;ll use Hugo to manage your themes. Hugo uses Go to initialise and manage modules so you need to ensure you have go installed before proceeding.\nDownload and install Go. You can check if it\u0026rsquo;s already installed by using the command go version.\nMake sure you are using Go version 1.12 or later as Hugo requires this for modules to work correctly. From your Hugo project directory (that you created above), initialise modules for your website:\n# If you\u0026#39;re managing your project on GitHub hugo mod init github.com/\u0026lt;username\u0026gt;/\u0026lt;repo-name\u0026gt; # If you\u0026#39;re managing your project locally hugo mod init my-project Add the theme to your configuration by creating a new file config/_default/module.toml and adding the following:\n[[imports]] disable = false path = \u0026#34;github.com/nunocoracao/blowfish/v2\u0026#34; Start your server using hugo server and the theme will be downloaded automatically.\nContinue to set up the theme configuration files.\nInstall manually # Download the latest release of the theme source code.\nDownload from Github Extract the archive, rename the folder to blowfish and move it to the themes/ directory inside your Hugo project\u0026rsquo;s root folder.\nContinue to set up the theme configuration files.\nSet up theme configuration files # In the root folder of your website, delete the hugo.toml file that was generated by Hugo. Copy the *.toml config files from the theme into your config/_default/ folder. This will ensure you have all the correct theme settings and will enable you to easily customise the theme to your needs.\nNote: You should not overwrite the module.toml file if one already exists in your project! Depending on how you installed the theme you will find the theme config files in different places:\nHugo Modules: In the Hugo cache directory, or download a copy from GitHub Git submodule or Manual install: themes/blowfish/config/_default Once you\u0026rsquo;ve copied the files, your config folder should look like this:\nconfig/_default/ ├─ hugo.toml ├─ languages.en.toml ├─ markup.toml ├─ menus.en.toml ├─ module.toml # if you installed using Hugo Modules └─ params.toml Important: If you didn\u0026rsquo;t use Hugo Modules to install Blowfish, you must add the line theme = \u0026quot;blowfish\u0026quot; to the top of your hugo.toml file. Next steps # The basic Blowfish installation is now complete. Continue to the Getting Started section to learn more about configuring the theme.\nInstalling updates # From time to time there will be new releases posted that apply fixes and add new functionality to the theme. In order to take advantage of these changes, you will need to update the theme files on your website.\nHow you go about this will depend on the installation method you chose when the theme was originally installed. Instructions for each method can be found below.\nGit submodule Hugo module Manual file copy Update using git # Git submodules can be updated using the git command. Simply execute the following command and the latest version of the theme will be downloaded into your local repository:\ngit submodule update --remote --merge Once the submodule has been updated, rebuild your site and check everything works as expected.\nUpdate using Hugo # Hugo makes updating modules super easy. Simply change into your project directory and execute the following command:\nhugo mod get -u Hugo will automatically update any modules that are required for your project. It does this by inspecting your module.toml and go.mod files. If you have any issues with the update, check to ensure these files are still configured correctly.\nThen simply rebuild your site and check everything works as expected.\nUpdate manually # Updating Blowfish manually requires you to download the latest copy of the theme and replace the old version in your project.\nNote that any local customisations you have made to the theme files will be lost during this process. Download the latest release of the theme source code.\nDownload from Github Extract the archive, rename the folder to blowfish and move it to the themes/ directory inside your Hugo project\u0026rsquo;s root folder. You will need to overwrite the existing directory to replace all the theme files.\nRebuild your site and check everything works as expected.\n","externalUrl":null,"permalink":"/docs/installation/","section":"Documentation","summary":"\u003cp\u003eSimply follow the standard Hugo \u003ca\n  href=\"https://gohugo.io/getting-started/quick-start/\"\n    target=\"_blank\"\n  \u003eQuick Start\u003c/a\u003e procedure to get up and running quickly.\u003c/p\u003e\n\u003cp\u003eDetailed installation instructions can be found below. Instructions for \u003ca\n  href=\"#installing-updates\"\u003eupdating the theme\u003c/a\u003e are also available.\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003eInstallation \n    \u003cdiv id=\"installation\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#installation\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eThese instructions will get you up and running using Hugo and Blowfish from a completely blank state. Most of the dependencies mentioned in this guide can be installed using the package manager of choice for your platform.\u003c/p\u003e","title":"Installation","type":"docs"},{"content":"","externalUrl":"https://madoke.org/","permalink":"/users/96d3e57dcc931de55cc23a825d40be2c/","section":"Users","summary":"","title":"madoke.org","type":"users"},{"content":" Selamat datang di kursus Pemrograman Web. Kursus ini dirancang untuk membantu pembaca memahami dan menguasai pemrograman web mulai dari konsep dasar hingga pengembangan aplikasi modern yang responsif dan interaktif. Materi disusun secara bertahap, dimulai dari pengenalan HTML, CSS, JavaScript, hingga pemrograman backend menggunakan bahasa populer. Disertai studi kasus nyata dan contoh kode yang dapat langsung dijalankan. Dengan pendekatan yang sistematis, pembaca tidak hanya memahami teori, tetapi juga mampu membuat produk web yang fungsional, aman, dan siap digunakan.\n","externalUrl":null,"permalink":"/courses/web-programming/","section":"Kursus","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  Selamat datang di kursus Pemrograman Web.\n\u003c/div\u003e\n\n\u003cp\u003eKursus ini dirancang untuk membantu pembaca memahami dan menguasai pemrograman web mulai dari konsep dasar hingga pengembangan aplikasi modern yang responsif dan interaktif. Materi disusun secara bertahap, dimulai dari pengenalan HTML, CSS, JavaScript, hingga pemrograman backend menggunakan bahasa populer. Disertai studi kasus nyata dan contoh kode yang dapat langsung dijalankan. Dengan pendekatan yang sistematis, pembaca tidak hanya memahami teori, tetapi juga mampu membuat produk web yang fungsional, aman, dan siap digunakan.\u003c/p\u003e","title":"Pemrograman Web","type":"courses"},{"content":"","externalUrl":"https://code-chimp.com","permalink":"/users/4bc0917e04c4859cedb32a48bff27846/","section":"Users","summary":"","title":"code-chimp.com","type":"users"},{"content":"In order to be able to support dynamic data across your website we\u0026rsquo;ve added the support to integrate Firebase. This will allow you to use the views feature across lists and posts.\nGo to Firebase website and create an account for free Create a new project Select analytics location Setup firebase in Blowfish by getting the variables for your project and setting them inside params.toml file. More details can be found in this page. You can find an example of the file Firebase will provide below, notice the parameters within the FirebaseConfig object. // Import the functions you need from the SDKs you need import { initializeApp } from \u0026#34;firebase/app\u0026#34;; import { getAnalytics } from \u0026#34;firebase/analytics\u0026#34;; // TODO: Add SDKs for Firebase products that you want to use // https://firebase.google.com/docs/web/setup#available-libraries // Your web app\u0026#39;s Firebase configuration // For Firebase JS SDK v7.20.0 and later, measurementId is optional const firebaseConfig = { apiKey: \u0026#34;AIzaSyB5tqlqDky77Vb4Tc4apiHV4hRZI18KGiY\u0026#34;, authDomain: \u0026#34;blowfish-21fff.firebaseapp.com\u0026#34;, projectId: \u0026#34;blowfish-21fff\u0026#34;, storageBucket: \u0026#34;blowfish-21fff.appspot.com\u0026#34;, messagingSenderId: \u0026#34;60108104191\u0026#34;, appId: \u0026#34;1:60108104191:web:039842ebe1370698b487ca\u0026#34;, measurementId: \u0026#34;G-PEDMYR1V0K\u0026#34; }; // Initialize Firebase const app = initializeApp(firebaseConfig); const analytics = getAnalytics(app); Setup Firestore - Select Build and open Firestore. Create a new database and choose to start in production mode. Select server location and wait. Once that is started you need to configure the rules. Just copy and paste the file below and press publish. rules_version = \u0026#39;2\u0026#39;; service cloud.firestore { match /databases/{database}/documents { match /{document=**} { allow read, write: if request.auth != null; } } } Enable anonymous authorization - Select Build and open Authentication. Select get started, click Anonymous and turn it on, save. Enjoy - you can now activate views and likes on Blowfish for all (or specific) articles. ","externalUrl":null,"permalink":"/courses/machine-learning/third-part/","section":"Kursus","summary":"\u003cp\u003eIn order to be able to support dynamic data across your website we\u0026rsquo;ve added the support to integrate Firebase. This will allow you to use the views feature across lists and posts.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eGo to \u003ca target=\"_blank\" href=\"https://firebase.com\"\u003eFirebase website\u003c/a\u003e and create an account for free\u003c/li\u003e\n\u003cli\u003eCreate a new project\u003c/li\u003e\n\u003cli\u003eSelect analytics location\u003c/li\u003e\n\u003cli\u003eSetup firebase in Blowfish by getting the variables for your project and setting them inside \u003ccode\u003eparams.toml\u003c/code\u003e file. More details can be found in \u003ca target=\"_blank\" href=\"https://muhammadfajarb.github.io/docs/configuration/#theme-parameters\"\u003ethis page\u003c/a\u003e. You can find an example of the file Firebase will provide below, notice the parameters within the FirebaseConfig object.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Import the functions you need from the SDKs you need\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003einitializeApp\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;firebase/app\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003egetAnalytics\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;firebase/analytics\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// TODO: Add SDKs for Firebase products that you want to use\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// https://firebase.google.com/docs/web/setup#available-libraries\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Your web app\u0026#39;s Firebase configuration\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efirebaseConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eapiKey\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;AIzaSyB5tqlqDky77Vb4Tc4apiHV4hRZI18KGiY\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eauthDomain\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;blowfish-21fff.firebaseapp.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eprojectId\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;blowfish-21fff\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003estorageBucket\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;blowfish-21fff.appspot.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003emessagingSenderId\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;60108104191\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eappId\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;1:60108104191:web:039842ebe1370698b487ca\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003emeasurementId\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;G-PEDMYR1V0K\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Initialize Firebase\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitializeApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efirebaseConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eanalytics\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003egetAnalytics\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"5\"\u003e\n\u003cli\u003eSetup Firestore - Select Build and open Firestore. Create a new database and choose to start in production mode. Select server location and wait. Once that is started you need to configure the rules. Just copy and paste the file below and press publish.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003erules_version = \u0026#39;2\u0026#39;;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eservice cloud.firestore {\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  match /databases/{database}/documents {\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    match /{document=**} {\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      allow read, write: if request.auth != null;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  }\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"6\"\u003e\n\u003cli\u003eEnable anonymous authorization - Select Build and open Authentication. Select get started, click Anonymous and turn it on, save.\u003c/li\u003e\n\u003cli\u003eEnjoy - you can now activate views and likes on Blowfish for all (or specific) articles.\u003c/li\u003e\n\u003c/ol\u003e","title":"Firebase: Views \u0026 Likes","type":"courses"},{"content":" This section assumes you have already installed the Blowfish theme. We just launched a CLI tool to help you get started with Blowfish. It will help you with installation and configuration. Install the CLI tool globally using:\nnpx blowfish-tools The config files that ship with Blowfish contain all of the possible settings that the theme recognises. By default, many of these are commented out but you can simply uncomment them to activate or change a specific feature.\nBasic configuration # Before creating any content, there are a few things you should set for a new installation. Starting in the hugo.toml file, set the baseURL and languageCode parameters. The languageCode should be set to the main language that you will be using to author your content.\n# config/_default/hugo.toml baseURL = \u0026#34;https://your_domain.com/\u0026#34; languageCode = \u0026#34;en\u0026#34; The next step is to configure the language settings. Although Blowfish supports multilingual setups, for now, just configure the main language.\nLocate the languages.en.toml file in the config folder. If your main language is English you can use this file as is. Otherwise, rename it so that it includes the correct language code in the filename. For example, for French, rename the file to languages.fr.toml.\nNote that the language code in the language config filename should match the languageCode setting in hugo.toml. # config/_default/languages.en.toml title = \u0026#34;My awesome website\u0026#34; [params.author] name = \u0026#34;My name\u0026#34; image = \u0026#34;img/author.jpg\u0026#34; headline = \u0026#34;A generally awesome human\u0026#34; bio = \u0026#34;A little bit about me\u0026#34; links = [ { twitter = \u0026#34;https://twitter.com/username\u0026#34; } ] The [params.author] configuration determines how the author information is displayed on the website. The image should be placed in the site\u0026rsquo;s assets/ folder. Links will be displayed in the order they are listed.\nIf you need extra detail, further information about each of these configuration options, is covered in the Configuration section.\nColour schemes # Blowfish ships with a number of colour schemes out of the box. To change the scheme, simply set the colorScheme theme parameter. Valid options are blowfish (default), avocado, fire, ocean, forest, princess, neon, bloody, terminal, marvel, noir, autumn, congo, andslate.\n# config/_default/params.toml colorScheme = \u0026#34;blowfish\u0026#34; Blowfish defines a three-colour palette that is used throughout the theme. Each main colour contains ten shades which are based upon the colours that are included in Tailwind. The three main colours are used for the header, footer, and accent colours. Here are the colors for each scheme:\nBlowfish (default) # Avocado # Fire # Ocean # Forest # Princess # Neon # Bloody # Terminal # Marvel # Noir # Autumn # Congo # Slate # Although these are the default schemes, you can also create your own. Refer to the Advanced Customisation section for details.\nOrganising content # By default, Blowfish doesn\u0026rsquo;t force you to use a particular content type. In doing so you are free to define your content as you wish. You might prefer pages for a static site, posts for a blog, or projects for a portfolio.\nHere\u0026rsquo;s a quick overview of a basic Blowfish project. All content is placed within the content folder:\n. ├── assets │ └── img │ └── author.jpg ├── config │ └── _default ├── content │ ├── _index.md │ ├── about.md │ └── posts │ ├── _index.md │ ├── first-post.md │ └── another-post │ ├── aardvark.jpg │ └── index.md └── themes └── blowfish It\u0026rsquo;s important to have a firm grasp of how Hugo expects content to be organised as the theme is designed to take full advantage of Hugo page bundles. Be sure to read the official Hugo docs for more information.\nBlowfish is also flexible when it comes to taxonomies. Some people prefer to use tags and categories to group their content, others prefer to use topics.\nHugo defaults to using posts, tags and categories out of the box and this will work fine if that\u0026rsquo;s what you want. If you wish to customise this, however, you can do so by creating a taxonomies.toml configuration file:\n# config/_default/taxonomies.toml topic = \u0026#34;topics\u0026#34; This will replace the default tags and categories with topics. Refer to the Hugo Taxonomy docs for more information on naming taxonomies.\nWhen you create a new taxonomy, you will need to adjust the navigation links on the website to point to the correct sections, which is covered below.\nMenus # Blowfish has two menus that can be customised to suit the content and layout of your site. The main menu appears in the site header and the footer menu appears at the bottom of the page just above the copyright notice.\nBoth menus are configured in the menus.en.toml file. Similarly to the languages config file, if you wish to use another language, rename this file and replace en with the language code you wish to use.\n# config/_default/menus.toml [[main]] name = \u0026#34;Blog\u0026#34; pageRef = \u0026#34;posts\u0026#34; weight = 10 [[main]] name = \u0026#34;Topics\u0026#34; pageRef = \u0026#34;topics\u0026#34; weight = 20 [[main]] pre = \u0026#34;github\u0026#34; name = \u0026#34;GitHub\u0026#34; url = \u0026#34;https://github.com/nunocoracao/blowfish\u0026#34; weight = 30 [[main]] identifier = \u0026#34;github2\u0026#34; pre = \u0026#34;github\u0026#34; url = \u0026#34;https://github.com/nunocoracao/blowfish\u0026#34; weight = 40 [[footer]] name = \u0026#34;Privacy\u0026#34; url = \u0026#34;https://external-link\u0026#34; The name parameter specifies the text that is used in the menu link. You can also optionally provide a title which fills the HTML title attribute for the link.\nThe pageRef parameter allows you to easily reference Hugo content pages and taxonomies. It is the quickest way to configure the menu as you can simply refer to any Hugo content item and it will automatically build the correct link. To link to external URLs, the url parameter can be used.\nThe pre parameter allows you to place an icon from Blowfish\u0026rsquo;s icon set on the menu entry. This parameter can be used with name parameter or by itself. If you want to use multiple menu entries with just icons please set the identifierparameter otherwise Hugo will default to the naming tag as the id and probably not display all the menu entries.\nMenu links will be sorted from lowest to highest weight, and then alphabetically by name.\nBoth menus are completely optional and can be commented out if not required. Use the template provided in the file as a guide.\nNested menus # The theme also supports nested menus. In order to use them you just need to define a parent entry in menu.toml and its sub-menus using the parent parameter to reference the parent. All properties can be used for sub-menus. pageRef and url can also be used in the parent entry. Nested menus are only available in the main menu not for the footer.\n# config/_default/menus.toml [[main]] name = \u0026#34;Parent\u0026#34; weight = 20 [[main]] name = \u0026#34;sub-menu 1\u0026#34; parent = \u0026#34;Parent\u0026#34; pageRef = \u0026#34;samples\u0026#34; weight = 20 [[main]] name = \u0026#34;sub-menu 2\u0026#34; parent = \u0026#34;Parent\u0026#34; pageRef = \u0026#34;samples\u0026#34; weight = 20 [[main]] name = \u0026#34;sub-menu 3\u0026#34; parent = \u0026#34;Parent\u0026#34; pre = \u0026#34;github\u0026#34; pageRef = \u0026#34;samples\u0026#34; weight = 20 Sub-Navigation menu # Additionally, you can also configure a sub-navigation menu. Just define new menu entries as subnavigation in menus.toml. This will render a second line with sub-categories below the main header menu.\n# config/_default/menus.toml [[subnavigation]] name = \u0026#34;An interesting topic\u0026#34; pageRef = \u0026#34;tags/interesting-topic\u0026#34; weight = 10 [[subnavigation]] name = \u0026#34;My Awesome Category\u0026#34; pageRef = \u0026#34;categories/awesome\u0026#34; weight = 20 The default name is the pageRef title cased.\nThumbnails \u0026amp; Backgrounds # Blowfish was built so it would be easy to add visual support to your articles. If your familiar with Hugo article structure, you just need to place an image file (almost all formats are supported but we recommend .png or .jpg) that starts with feature* inside your article folder. And that\u0026rsquo;s it, Blowfish will then be able to both use the image as a thumbnail within your website as well as for oEmbed cards across social platforms.\nHere is also a guide with more info and a sample if you want to see how you can do it.\nAdditionally, Blowfish also supports background hero images in articles and lists. In order to use a different image than the featured one, add an image file in which the name starts with background*.\nDetailed configuration # The steps above are the bare minimum configuration. If you now run hugo server you will be presented with a blank Blowfish website. Detailed configuration is covered in the Configuration section.\n","externalUrl":null,"permalink":"/docs/getting-started/","section":"Documentation","summary":"\u003cdiv\n  \n    class=\"flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900\"\n  \n  \u003e\n  \u003cspan\n    \n      class=\"text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center\"\n    \n    \u003e\n    \u003cspan class=\"relative block icon\"\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\u003e\u003cpath fill=\"currentColor\" d=\"M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z\"/\u003e\u003c/svg\u003e\n\u003c/span\u003e\n  \u003c/span\u003e\n\n  \u003cspan\n    \n      class=\"dark:text-neutral-300\"\n    \n    \u003eThis section assumes you have already \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/installation/\"\n    target=\"_blank\"\n  \u003einstalled the Blowfish theme\u003c/a\u003e.\u003c/span\u003e\n\u003c/div\u003e\n\n\u003c/br\u003e\n\n  \n\n\n\n\u003cdiv\n  \n    class=\"flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900\"\n  \n  \u003e\n  \u003cspan\n    \n      class=\"text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center\"\n    \n    \u003e\n    \u003cspan class=\"relative block icon\"\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"\u003e\n\u003cpath fill=\"currentColor\"  d=\"M159.3 5.4c7.8-7.3 19.9-7.2 27.7 .1c27.6 25.9 53.5 53.8 77.7 84c11-14.4 23.5-30.1 37-42.9c7.9-7.4 20.1-7.4 28 .1c34.6 33 63.9 76.6 84.5 118c20.3 40.8 33.8 82.5 33.8 111.9C448 404.2 348.2 512 224 512C98.4 512 0 404.1 0 276.5c0-38.4 17.8-85.3 45.4-131.7C73.3 97.7 112.7 48.6 159.3 5.4zM225.7 416c25.3 0 47.7-7 68.8-21c42.1-29.4 53.4-88.2 28.1-134.4c-2.8-5.6-5.6-11.2-9.8-16.8l-50.6 58.8s-81.4-103.6-87.1-110.6C133.1 243.8 112 273.2 112 306.8C112 375.4 162.6 416 225.7 416z\"/\u003e\u003c/svg\u003e\u003c/span\u003e\n  \u003c/span\u003e\n\n  \u003cspan\n    \n      class=\"dark:text-neutral-300\"\n    \n    \u003e\u003cp\u003eWe just launched a CLI tool to help you get started with Blowfish. It will help you with installation and configuration. Install the CLI tool globally using:\u003c/p\u003e","title":"Getting Started","type":"docs"},{"content":"Blowfish is a highly customisable theme and uses some of the latest Hugo features to simplify how it is configured.\nThe theme ships with a default configuration that gets you up and running with a basic blog or static website.\nWe just launched a CLI tool to help you get started with Blowfish. It will help you with installation and configuration. Install the CLI tool globally using:\nnpx blowfish-tools Configuration files bundled with the theme are provided in TOML format as this is the default Hugo syntax. Feel free to convert your config to YAML or JSON if you wish.\nThe default theme configuration is documented in each file so you can freely adjust the settings to meet your needs.\nAs outlined in the installation instructions, you should adjust your theme configuration by modifying the files in the config/_default/ folder of your Hugo project and delete the config.toml file in your project root. Site configuration # Standard Hugo configuration variables are respected throughout the theme, however there are some specific things that should be configured for the best experience.\nThe site configuration is managed through the config/_default/config.toml file. The table below outlines all the settings that the Blowfish takes advantage of.\nNote that the variable names provided in this table use dot notation to simplify the TOML data structure (ie. outputs.home refers to [outputs] home).\nName Default Description theme \u0026quot;blowfish\u0026quot; When using Hugo Modules this config value should be removed. For all other installation types, this must be set to blowfish for the theme to function. baseURL Not set The URL to the root of the website. defaultContentLanguage \u0026quot;en\u0026quot; This value determines the default language of theme components and content. Refer to the language and i18n section below for supported language codes. enableRobotsTXT true When enabled, a robots.txt file will be created in the site root that allows search engines to crawl the entire site. If you prefer to provide your own pre-made robots.txt, set to false and place your file in the static directory. For complete control, you may provide a custom layout to generate this file. pagination.pagerSize 10 The number of articles listed on each page of the article listing. summaryLength 0 The number of words that are used to generate the article summary when one is not provided in the front matter. A value of 0 will use the first sentence. This value has no effect when summaries are hidden. outputs.home [\u0026quot;HTML\u0026quot;, \u0026quot;RSS\u0026quot;, \u0026quot;JSON\u0026quot;] The output formats that are generated for the site. Blowfish requires HTML, RSS and JSON for all theme components to work correctly. permalinks Not set Refer to the Hugo docs for permalink configuration. taxonomies Not set Refer to the Organising content section for taxonomy configuration. Thumbnails # Blowfish was built so it would be easy to add visual support to your articles. If your familiar with Hugo article structure, you just need to place an image file (almost all formats are supported but we recommend .png or .jpg) that starts with feature* inside your article folder. And that\u0026rsquo;s it, Blowfish will then able to both use the image as a thumbnail within your website as well as for oEmbed cards across social platforms.\nHere is also a guide with more info and a sample if you want to see how you can do it.\nLanguage and i18n # Blowfish is optimised for full multilingual websites and theme assets are translated into several languages out of the box. The language configuration allows you to generate multiple versions of your content to provide a customised experience to your visitors in their native language.\nThe theme currently supports the following languages by default:\nLanguage Code Arabic ar Bulgarian bg Bengali bn Catalan ca Czech cs German de English en Esperanto eo Spanish (Spain) es Finnish fi French fr Galician gl Hebrew he Croatian hr Hungarian hu Indonesian id Italian it Japanese ja Korean ko Dutch nl Persian fa Polish pl Portuguese (Brazil) pt-br Portuguese (Portugal) pt-pt Romanian ro Russian ru Thai th Turkish tr Vietnamese vi Simplified Chinese (China) zh-cn Traditional Chinese (Taiwan) zh-tw The default translations can be overridden by creating a custom file in i18n/[code].yaml that contains the translation strings. You can also use this method to add new languages. If you\u0026rsquo;d like to share a new translation with the community, please open a pull request.\nConfiguration # In order to be as flexible as possible, a language configuration file needs to be created for each language on the website. By default Blowfish includes an English language configuration at config/_default/languages.en.toml.\nThe default file can be used as a template to create additional languages, or renamed if you wish to author your website in a language other than English. Simply name the file using the format languages.[language-code].toml.\nNote: Ensure the defaultContentLanguage parameter in the site configuration matches the language code in your language config filename. Global # Name Default Description languageCode \u0026quot;en\u0026quot; The Hugo language code for this file. It can be a top-level language (ie. en) or a sub-variant (ie. en-au) and should match the language code in the filename. Hugo expects this value to always be in lowercase. For proper HTML compliance, set the isoCode parameter which is case-sensitive. languageName \u0026quot;English\u0026quot; The name of the language. weight 1 The weight determines the order of languages when building multilingual sites. title \u0026quot;Blowfish\u0026quot; The title of the website. This will be displayed in the site header and footer. Params # Name Default Description params.displayName \u0026quot;EN\u0026quot; The name used when the language appears on the website. params.isoCode \u0026quot;en\u0026quot; The ISO language code for HTML metadata purposes. It can be a top-level language (ie. en) or a sub-variant (ie. en-AU). params.rtl false Whether or not this is a RTL language. Set to true to reflow content from right-to-left. Blowfish fully supports using RTL and LTR languages at the same time and will dynamically adjust to both. params.dateFormat \u0026quot;2 January 2006\u0026quot; How dates are formatted in this language. Refer to the Hugo docs for acceptable formats. params.logo Not set The relative path to the site logo file within the assets/ folder. The logo file should be provided at 2x resolution and supports any image dimensions. params.secondaryLogo Not set The relative path to the secondary site logo file within the assets/ folder. The logo file should be provided at 2x resolution and supports any image dimensions. This should have an inverted/contrasting colour scheme to logo. If set, this logo will be shown when users toggle from the defaultAppearance mode. params.description Not set The website description. This will be used in the site metadata. params.copyright Not set A Markdown string for the site footer copyright message can include the placeholder { year } to dynamically insert the current year. If none is provided, Blowfish will automatically generate a copyright string using the site title. Author # Name Default Description params.author.name Not set The author\u0026rsquo;s name. This will be displayed in article footers, and on the homepage when the profile layout is used. params.author.email Not set The author\u0026rsquo;s email. This will be used if the reply-via-email functionality is enabled. params.author.image Not set Path to the image file of the author. The image should be a 1:1 aspect ratio. The image can be placed in the site\u0026rsquo;s assets/ folder or can be external url. params.author.imageQuality 96 The author\u0026rsquo;s image file will be treated as a \u0026ldquo;high quality\u0026rdquo; image to minimize artifacts on the front page. Value range 1-100. params.author.headline Not set A Markdown string containing the author\u0026rsquo;s headline. It will be displayed on the profile homepage under the author\u0026rsquo;s name. params.author.bio Not set A Markdown string containing the author\u0026rsquo;s bio. It will be displayed in article footers. params.author.links Not set The links to display alongside the author\u0026rsquo;s details. The config file contains example links which can simply be uncommented to enable. The order that the links are displayed is determined by the order they appear in the array. Custom links can be added by providing corresponding SVG icon assets in assets/icons/. Menus # Blowfish also supports language-specific menu configurations. Menu config files follow the same naming format as the languages file. Simply provide the language code in the file name to tell Hugo which language the file relates to.\nMenu config files are named with the format menus.[language-code].toml. Always ensure that the language code used in the menus configuration matches the languages configuration.\nThe Getting Started section explains more about the structure of this file. You can also refer to the Hugo menu docs for more configuration examples.\nTheme parameters # Blowfish provides a large number of configuration parameters that control how the theme functions. The table below outlines every available parameter in the config/_default/params.toml file.\nMany of the article defaults here can be overridden on a per article basis by specifying it in the front matter. Refer to the Front Matter section for further details.\nGlobal # Name Default Description colorScheme \u0026quot;blowfish\u0026quot; The theme colour scheme to use. Valid values are blowfish (default), avocado, fire, ocean, forest, princess, neon, bloody, terminal, marvel, noir, autumn, congo, andslate. Refer to the Colour Schemes section for more details. defaultAppearance \u0026quot;light\u0026quot; The default theme appearance, either light or dark. autoSwitchAppearance true Whether the theme appearance automatically switches based upon the visitor\u0026rsquo;s operating system preference. Set to false to force the site to always use the defaultAppearance. enableA11y false Whether to enable the accessibility toggle button. enableSearch false Whether site search is enabled. Set to true to enable search functionality. Note that the search feature depends on the outputs.home setting in the site configuration being set correctly. enableCodeCopy false Whether copy-to-clipboard buttons are enabled for \u0026lt;code\u0026gt; blocks. The highlight.noClasses parameter must be set to false for code copy to function correctly. Read more about other configuration files below. replyByEmail false Whether the reply-by-email link is enabled after post. The params.author.email parameter in config/_default/languages.en.toml must be set. forgejoDefaultServer Not set The default server parameter for the forgejo shortcode. giteaDefaultServer Not set The default server parameter for the gitea shortcode. mainSections Not set The sections that should be displayed in the recent articles list. If not provided the section with the greatest number of articles is used. showViews Not set Whether or not articles and list views are displayed. This requires firebase integrations to be enabled, look below. showLikes Not set Whether or not articles and list likes are displayed. This requires firebase integrations to be enabled, look below. robots Not set String that indicates how robots should handle your site. If set, it will be output in the page head. Refer to Google\u0026rsquo;s docs for valid values. disableImageZoom false Disables image zoom feature across all the images in the site. disableImageOptimization false Disables image resize and optimization features across all the images in the site, except images using markdown syntax (![](image.jpg)) disableImageOptimizationMD false Disables image resize and optimization features only for images using markdown syntax (![](image.jpg)). backgroundImageWidth 1200 Width (in pixels) to scale background images to. disableTextInHeader false Disables text in header, useful for logo based headers. defaultBackgroundImage Not set Default background image for both background homepage layout and background hero style defaultFeaturedImage Not set Default background image for all featured images across articles, will be overridden by a local featured image. defaultSocialImage Not set Default image for social media sharing (Open Graph and Twitter). Will be overridden by a local feature image. highlightCurrentMenuArea Not set Marks menu entries in the main menu when selected smartTOC Not set Activate smart Table of Contents, items in view will be highlighted. smartTOCHideUnfocusedChildren Not set When smart Table of Contents is turned on, this will hide deeper levels of the table when they are not in focus. fingerprintAlgorithm \u0026quot;sha512\u0026quot; This configures the fingerprint or resources.Fingerprint used in .Data.Integrity for files provided by the theme. Valid values are sha512 (default), sha384, sha256 Header # Name Default Description header.layout \u0026quot;basic\u0026quot; Defines the header for the entire site, supported values are basic, fixed, fixed-fill, and fixed-fill-blur. Footer # Name Default Description footer.showMenu true Show/hide the footer menu, which can be configured in the [[footer]] section of the config/_default/menus.en.toml file. footer.showCopyright true Whether or not to show the copyright string in the site footer. Note that the string itself can be customised using the copyright parameter in the languages configuration. footer.showThemeAttribution true Whether or not to show the \u0026ldquo;powered by\u0026rdquo; theme attribution in the site footer. If you choose to disable this message, please consider attributing the theme somewhere else on your site (for example, on your about page). footer.showAppearanceSwitcher false Whether or not to show the appearance switcher in the site footer. The browser\u0026rsquo;s local storage is used to persist the visitor\u0026rsquo;s preference. footer.showScrollToTop true When set to true the scroll to top arrow is displayed. Homepage # Name Default Description homepage.layout \u0026quot;profile\u0026quot; The layout of the homepage. Valid values are page, profile, hero, card, background, or custom. When set to custom, you must provide your own layout by creating a /layouts/partials/home/custom.html file. Refer to the Homepage Layout section for more details. homepage.homepageImage Not set Image to be used in hero and card layouts. Can be set as local image from asset directory or external image url. Refer to the Homepage Layout section for more details. homepage.showRecent false Whether or not to display the recent articles list on the homepage. homepage.showRecentItems 5 How many articles to display if showRecent is true. If variable is set to 0 or if it isn\u0026rsquo;t defined the system will default to 5 articles. homepage.showMoreLink false Whether or not to display a show more link at the end of your posts that takes the user to a predefined place. homepage.showMoreLinkDest /posts The destination of the show more button. homepage.cardView false Display recent articles as a gallery of cards. homepage.cardViewScreenWidth false Enhance the width of the recent articles card gallery to take the full width available. homepage.layoutBackgroundBlur false Makes the background image in the homepage layout blur with the scroll homepage.disableHeroImageFilter false Whether to apply an image filter on the homepage background. Article # Name Default Description article.showDate true Whether or not article dates are displayed. article.showViews false Whether or not article views are displayed. This requires firebase integrations to be enabled, look below. article.showLikes false Whether or not article likes are displayed. This requires firebase integrations to be enabled, look below. article.showDateOnlyInArticle false Show date within article even if not displayed in article listings/cards. article.showDateUpdated false Whether or not the dates articles were updated are displayed. article.showAuthor true Whether or not the author box is displayed in the article footer. article.showAuthorBottom false Author boxes are displayed at the bottom of each page instead of the top. article.showHero false Whether the thumbnail image will be shown as a hero image within each article page. article.heroStyle Not set Style to display the hero image, valid options are: basic, big, background, thumbAndBackground. article.layoutBackgroundBlur true Makes the background image in the background article heroStyle blur with the scroll article.layoutBackgroundHeaderSpace true Add space between the header and the body. article.showBreadcrumbs false Whether or not breadcrumbs are displayed in the article header. article.showDraftLabel true Whether or not the draft indicator is shown next to articles when site is built with --buildDrafts. article.showEdit false Whether or not the link to edit the article content should be displayed. article.editURL Not set When article.showEdit is active, the URL for the edit link. article.editAppendPath true When article.showEdit is active, whether or not the path to the current article should be appended to the URL set at article.editURL. article.seriesOpened false Whether or not the series module will be displayed open by default or not. article.showHeadingAnchors true Whether or not heading anchor links are displayed alongside headings within articles. article.showPagination true Whether or not the next/previous article links are displayed in the article footer. article.invertPagination false Whether or not to flip the direction of the next/previous article links. article.showReadingTime true Whether or not article reading times are displayed. article.showTableOfContents false Whether or not the table of contents is displayed on articles. article.showRelatedContent false Display related content for each post. Might required additional configuration to your config.toml. Please check the theme config.toml if you want to enable this feature and copy all the relevant related entries. Also check Hugo\u0026rsquo;s docs on related content. article.relatedContentLimit 3 Limit of related articles to display if showRelatedContent is turned on. article.showTaxonomies false Whether or not all the taxonomies related to this article are displayed. article.showCategoryOnly false Whether or not the \u0026ldquo;category\u0026rdquo; taxonomy is displayed. showTaxonomies should be false when this param is used, otherwise duplicates will appear. article.showAuthorsBadges false Whether the authors taxonomies are are displayed in the article or list header. This requires the setup of multiple authors and the authors taxonomy. Check this page for more details on how to configure that feature. article.showWordCount false Whether or not article word counts are displayed. article.showComments false Whether or not the comments partial is included after the article footer. article.sharingLinks Not set Which sharing links to display at the end of each article. When not provided, or set to false no links will be displayed. Available values are: \u0026ldquo;bluesky\u0026rdquo;, \u0026ldquo;email\u0026rdquo;, \u0026ldquo;facebook\u0026rdquo;, \u0026ldquo;line\u0026rdquo;, \u0026ldquo;linkedin\u0026rdquo;, \u0026ldquo;mastodon\u0026rdquo;, \u0026ldquo;pinterest\u0026rdquo;, \u0026ldquo;reddit\u0026rdquo;, \u0026ldquo;telegram\u0026rdquo;, \u0026ldquo;twitter\u0026rdquo;, and \u0026ldquo;whatsapp\u0026rdquo; article.showZenMode false Flag to activate Zen Mode reading feature for articles. List # Name Default Description list.showHero false Whether the thumbnail image will be shown as a hero image within each list page. list.heroStyle Not set Style to display the hero image, valid options are: basic, big, background, thumbAndBackground. list.showBreadcrumbs false Whether or not breadcrumbs are displayed in the header on list pages. list.layoutBackgroundBlur true Makes the background image in the background list heroStyle blur with the scroll list.layoutBackgroundHeaderSpace true Add space between the header and the body. list.showTableOfContents false Whether or not the table of contents is displayed on list pages. list.showSummary false Whether or not article summaries are displayed on list pages. If a summary is not provided in the front matter, one will be auto generated using the summaryLength parameter in the site configuration. list.showViews false Whether or not list views are displayed. This requires firebase integrations to be enabled, look below. list.showLikes false Whether or not list likes are displayed. This requires firebase integrations to be enabled, look below. list.showCards false Whether or not each article is displayed as a card or as simple inline text. list.orderByWeight false Whether or not articles are sorted by weights. list.groupByYear true Whether or not articles are grouped by year on list pages. list.cardView false Display lists as a gallery of cards. list.cardViewScreenWidth false Enhance the width of card galleries in lists to take the full width available. list.constrainItemsWidth false Limit item width to prose to increase readability. Useful when no feature images are available. list.showTableOfContents false Whether or not the table of contents is displayed on articles. Sitemap # Name Default Description sitemap.excludedKinds [\u0026quot;taxonomy\u0026quot;, \u0026quot;term\u0026quot;] Kinds of content that should be excluded from the generated /sitemap.xml file. Refer to the Hugo docs for acceptable values. Taxonomy # Name Default Description taxonomy.showTermCount true Whether or not the number of articles within a taxonomy term is displayed on the taxonomy listing. taxonomy.showHero false Whether the thumbnail image will be shown as a hero image within each taxonomy page. taxonomy.heroStyle Not set Style to display the hero image, valid options are: basic, big, background, thumbAndBackground. taxonomy.showBreadcrumbs false Whether or not breadcrumbs are displayed in the taxonomy header. taxonomy.showViews false Whether or not article views are displayed. This requires firebase integrations to be enabled, look below. taxonomy.showLikes false Whether or not article likes are displayed. This requires firebase integrations to be enabled, look below. taxonomy.showTableOfContents false Whether or not the table of contents is displayed on taxonomies. taxonomy.cardView false Display lists as a gallery of cards. Term # Name Default Description term.showHero false Whether the thumbnail image will be shown as a hero image within each term page. term.heroStyle Not set Style to display the hero image, valid options are: basic, big, background, thumbAndBackground. term.showBreadcrumbs false Whether or not breadcrumbs are displayed in the term header. term.showViews false Whether or not article views are displayed. This requires firebase integrations to be enabled, look below. term.showLikes false Whether or not article likes are displayed. This requires firebase integrations to be enabled, look below. term.showTableOfContents false Whether or not the table of contents is displayed on terms. term.groupByYear false Whether or not articles are grouped by year on term pages. term.cardView false Display lists as a gallery of cards. term.cardViewScreenWidth false Enhance the width of card galleries in lists to take the full width available. Firebase # Name Default Description firebase.apiKey Not set Firebase apiKey, required to integrate against Firebase. Check this page for a guide on how to integrate Firebase into Blowfish. firebase.authDomain Not set Firebase authDomain, required to integrate against Firebase. Check this page for a guide on how to integrate Firebase into Blowfish. firebase.projectId Not set Firebase projectId, required to integrate against Firebase. Check this page for a guide on how to integrate Firebase into Blowfish. firebase.storageBucket Not set Firebase storageBucket, required to integrate against Firebase. Check this page for a guide on how to integrate Firebase into Blowfish. firebase.messagingSenderId Not set Firebase messagingSenderId, required to integrate against Firebase. Check this page for a guide on how to integrate Firebase into Blowfish. firebase.appId Not set Firebase appId, required to integrate against Firebase. Check this page for a guide on how to integrate Firebase into Blowfish. firebase.measurementId Not set Firebase measurementId, required to integrate against Firebase. Check this page for a guide on how to integrate Firebase into Blowfish. Fathom Analytics # Name Default Description fathomAnalytics.site Not set The site code generated by Fathom Analytics for the website. Refer to the Analytics docs for more details. fathomAnalytics.domain Not set If using a custom domain with Fathom Analytics, provide it here to serve script.js from the custom domain. Umami Analytics # Name Default Description umamiAnalytics.websiteid Not set The site code generated by Umami Analytics for the website. Refer to the Analytics docs for more details. umamiAnalytics.domain Not set If using a custom domain with Umami Analytics, provide it here to serve script.js from the custom domain. umamiAnalytics.dataDomains Not set If you want the tracker to only run on specific domains, provide it for your tracker script. This is a comma delimited list of domain names. Such as \u0026ldquo;yoursite.com,yoursite2.com\u0026rdquo;. umamiAnalytics.scriptName script.js The name of the script.js used for anti-ad-blocking is configured by the environment variable TRACKER_SCRIPT_NAME umamiAnalytics.enableTrackEvent true When set to true track event will add automatically. If you do not want to add track event, set it to false. Seline Analytics # Name Default Description selineAnalytics.token Not set The token generated by Seline Analytics for the website. Refer to the Analytics docs for more details. selineAnalytics.enableTrackEvent true When set to true track event will add automatically. If you do not want to add track event, set it to false. BuyMeACoffee # Name Default Description buymeacoffee.identifier Not set The identifier to the target buymeacoffee account. buymeacoffee.globalWidget Not set Activate the global buymeacoffee widget. buymeacoffee.globalWidgetMessage Not set Message what will be displayed the first time a new user lands on the site. buymeacoffee.globalWidgetColor Not set Widget color in hex format. buymeacoffee.globalWidgetPosition Not set Position of the widget, i.e. \u0026ldquo;Left\u0026rdquo; or \u0026ldquo;Right\u0026rdquo; Verifications # Name Default Description verification.google Not set The site verification string provided by Google to be included in the site metadata. verification.bing Not set The site verification string provided by Bing to be included in the site metadata. verification.pinterest Not set The site verification string provided by Pinterest to be included in the site metadata. verification.yandex Not set The site verification string provided by Yandex to be included in the site metadata. verification.fediverse Not set The fediverse handle to include in the site metadata. Include the server domain in the username, e.g. @you@instanceaddress.tld. RSSNext # Name Default Description rssnext.feedId Not set The rss feedId string provided by RSSNext/Follow to be included in the rss.xml, which can helps to claim rss feed as your own. rssnext.userId Not set The rss userId string provided by RSSNext/Follow to be included in the rss.xml, which can helps to claim rss feed as your own. Advertisement # Name Default Description advertisement.adsense Not set Your Google AdSense Publisher ID (e.g. ca-pub-1234567890abcdef). Set this parameter to enable AdSense ads on your site. Other configuration files # The theme also includes a markup.toml configuration file. This file contains some important parameters that ensure that Hugo is correctly configured to generate sites built with Blowfish.\nAlways ensure this file is present in the config directory and that the required values are set. Failure to do so may cause certain features to function incorrectly and could result in unintended behaviour.\n","externalUrl":null,"permalink":"/docs/configuration/","section":"Documentation","summary":"\u003cp\u003eBlowfish is a highly customisable theme and uses some of the latest Hugo features to simplify how it is configured.\u003c/p\u003e\n\u003cp\u003eThe theme ships with a default configuration that gets you up and running with a basic blog or static website.\u003c/p\u003e\n\n  \n\n\n\n\u003cdiv\n  \n    class=\"flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900\"\n  \n  \u003e\n  \u003cspan\n    \n      class=\"text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center\"\n    \n    \u003e\n    \u003cspan class=\"relative block icon\"\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"\u003e\n\u003cpath fill=\"currentColor\"  d=\"M159.3 5.4c7.8-7.3 19.9-7.2 27.7 .1c27.6 25.9 53.5 53.8 77.7 84c11-14.4 23.5-30.1 37-42.9c7.9-7.4 20.1-7.4 28 .1c34.6 33 63.9 76.6 84.5 118c20.3 40.8 33.8 82.5 33.8 111.9C448 404.2 348.2 512 224 512C98.4 512 0 404.1 0 276.5c0-38.4 17.8-85.3 45.4-131.7C73.3 97.7 112.7 48.6 159.3 5.4zM225.7 416c25.3 0 47.7-7 68.8-21c42.1-29.4 53.4-88.2 28.1-134.4c-2.8-5.6-5.6-11.2-9.8-16.8l-50.6 58.8s-81.4-103.6-87.1-110.6C133.1 243.8 112 273.2 112 306.8C112 375.4 162.6 416 225.7 416z\"/\u003e\u003c/svg\u003e\u003c/span\u003e\n  \u003c/span\u003e\n\n  \u003cspan\n    \n      class=\"dark:text-neutral-300\"\n    \n    \u003e\u003cp\u003eWe just launched a CLI tool to help you get started with Blowfish. It will help you with installation and configuration. Install the CLI tool globally using:\u003c/p\u003e","title":"Configuration","type":"docs"},{"content":"","externalUrl":"https://mucahitkurtlar.github.io","permalink":"/users/9d028495840ad385e6cb3ccf051dca22/","section":"Users","summary":"","title":"mucahitkurtlar.github.io","type":"users"},{"content":"","externalUrl":"https://brendanwallace.github.io","permalink":"/users/64ef36564d497eed256b9f4c56b1184e/","section":"Users","summary":"","title":"brendanwallace.github.io","type":"users"},{"content":"Blowfish provides a fully flexible homepage layout. There are two main templates to choose from with additional settings to adjust the design. Alternatively, you can also provide your own template and have complete control over the homepage content.\nThe layout of the homepage is controlled by the homepage.layout setting in the params.toml configuration file. Additionally, all layouts have the option to include a listing of recent articles.\nProfile layout # The default layout is the profile layout, which is great for personal websites and blogs. It puts the author\u0026rsquo;s details front and centre by providing an image and links to social profiles.\nThe author information is provided in the languages configuration file. Refer to the Getting Started and Language Configuration sections for parameter details.\nAdditionally, any Markdown content that is provided in the homepage content will be placed below the author profile. This allows extra flexibility for displaying a bio or other custom content using shortcodes.\nTo enable the Profile layout, set homepage.layout = \u0026quot;profile\u0026quot; in the params.toml configuration file.\nPage layout # The page layout is simply a normal content page that displays your Markdown content. It\u0026rsquo;s great for static websites and provides a lot of flexibility.\nTo enable the Page layout, set homepage.layout = \u0026quot;page\u0026quot; in the params.toml configuration file.\nHero layout # The hero layout brings together ideas from the profile and card layouts. This one not only displays information on the author of the site but it also loads your markdown beneath it.\nTo enable the Hero layout, set homepage.layout = \u0026quot;hero\u0026quot; and homepage.homepageImage in the params.toml configuration file.\nBackground layout # The background layout is a more smooth version of the hero layout. As in the Hero layout, this one also displays both information on the author of the site and loads your markdown beneath it.\nTo enable the Background layout, set homepage.layout = \u0026quot;background\u0026quot; and homepage.homepageImage in the params.toml configuration file.\nCard layout # The card layout is an extension of the page layout. It provides the same level of flexibility by also displaying your markdown content and adds a card image to display visual content.\nTo enable the Card layout, set homepage.layout = \u0026quot;card\u0026quot; and homepage.homepageImage in the params.toml configuration file.\nCustom layout # If the built-in homepage layouts aren\u0026rsquo;t sufficient for your needs, you have the option to provide your own custom layout. This allows you to have total control over the page content and essentially gives you a blank slate to work with.\nTo enable the Custom layout, set homepage.layout = \u0026quot;custom\u0026quot; in the params.toml configuration file.\nWith the configuration value set, create a new custom.html file and place it in layouts/partials/home/custom.html. Now whatever is in the custom.html file will be placed in the content area of the site homepage. You may use whatever HTML, Tailwind, or Hugo templating functions you wish to define your layout.\nTo include recent articles on the custom layout, use the recent-articles/main.html partial.\nAs an example, the homepage on this site uses the custom layout to allow toggling between the profile and page layouts. Visit the GitHub repo to see how it works.\nRecent articles # All homepage layouts have the option of displaying recent articles below the main page content. To enable this, simply set the homepage.showRecent setting to true in the params.toml configuration file.\nThe articles listed in this section are derived from the mainSections setting which allows for whatever content types you are using on your website. For instance, if you had content sections for posts and projects you could set this setting to [\u0026quot;posts\u0026quot;, \u0026quot;projects\u0026quot;] and all the articles in these two sections would be used to populate the recent list. The theme expects this setting to be an array so if you only use one section for all your content, you should set this accordingly: [\u0026quot;blog\u0026quot;].\nThumbnails # Blowfish was built so it would be easy to add visual support to your articles. If your familiar with Hugo article structure, you just need to place an image file (almost all formats are supported bue we recommend .png or .jpg) that starts with feature* inside your article folder. And that\u0026rsquo;s it, Blowfish will then able to both use the image as a thumbnail within your website as well as for oEmbed cards across social platforms.\nHere is a guide with more info and a sample if you want to see an example.\nCard Gallery # Blowfish also supports displaying the standard lists of articles as card galleries. You can config this both for the recent section in the homepage and for lists of articles across your website. For homepage you can use homepage.cardView and homepage.cardViewScreenWidth; and for lists use list.cardView and list.cardViewScreenWidth. Check the Configuration docs for more details, and the homepage for a live demo.\n","externalUrl":null,"permalink":"/docs/homepage-layout/","section":"Documentation","summary":"\u003cp\u003eBlowfish provides a fully flexible homepage layout. There are two main templates to choose from with additional settings to adjust the design. Alternatively, you can also provide your own template and have complete control over the homepage content.\u003c/p\u003e\n\u003cp\u003eThe layout of the homepage is controlled by the \u003ccode\u003ehomepage.layout\u003c/code\u003e setting in the \u003ccode\u003eparams.toml\u003c/code\u003e configuration file. Additionally, all layouts have the option to include a listing of \u003ca\n  href=\"#recent-articles\"\u003erecent articles\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003eProfile layout \n    \u003cdiv id=\"profile-layout\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#profile-layout\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eThe default layout is the profile layout, which is great for personal websites and blogs. It puts the author\u0026rsquo;s details front and centre by providing an image and links to social profiles.\u003c/p\u003e","title":"Homepage Layout","type":"docs"},{"content":"","externalUrl":"https://pmnxis.github.io","permalink":"/users/5bf94b5c1e0c4a40d81816df85e1444f/","section":"Users","summary":"","title":"pmnxis.github.io","type":"users"},{"content":"In addition to all the default Hugo shortcodes, Blowfish adds a few extras for additional functionality.\nAlert # alert outputs its contents as a stylised message box within your article. It\u0026rsquo;s useful for drawing attention to important information that you don\u0026rsquo;t want the reader to miss.\nParameter Description icon Optional. the icon to display on the left side.\nDefault: triangle-exclamation (Check out the icon shortcode for more details on using icons.) iconColor Optional. the color for the icon in basic CSS style.\nCan be either hex values (#FFFFFF) or color names (white)\nBy default chosen based on the current color theme . cardColor Optional. the color for the card background in basic CSS style.\nCan be either hex values (#FFFFFF) or color names (white)\nBy default chosen based on the current color theme . textColor Optional. the color for the text in basic CSS style.\nCan be either hex values (#FFFFFF) or color names (white)\nBy default chosen based on the current color theme . The input is written in Markdown so you can format it however you please.\nExample 1: No params\n{{\u0026lt; alert \u0026gt;}} **Warning!** This action is destructive! {{\u0026lt; /alert \u0026gt;}} Warning! This action is destructive! Example 2: Unnamed param\n{{\u0026lt; alert \u0026#34;twitter\u0026#34; \u0026gt;}} Don\u0026#39;t forget to [follow me](https://twitter.com/nunocoracao) on Twitter. {{\u0026lt; /alert \u0026gt;}} Don\u0026rsquo;t forget to follow me on Twitter. Example 3: Named params\n{{\u0026lt; alert icon=\u0026#34;fire\u0026#34; cardColor=\u0026#34;#e63946\u0026#34; iconColor=\u0026#34;#1d3557\u0026#34; textColor=\u0026#34;#f1faee\u0026#34; \u0026gt;}} This is an error! {{\u0026lt; /alert \u0026gt;}} This is an error! Article # Article will embed a single article into a markdown file. The link to the file should be the .RelPermalink of the file to be embedded. Note that the shortcode will not display anything if it\u0026rsquo;s referencing it\u0026rsquo;s parent. Note: if you are running your website in a subfolder like Blowfish (i.e. /blowfish/) please include that path in the link.\nParameter Description link Required. the .RelPermalink to the target article. showSummary Optional. A boolean value indicating whether to show the article summary. If not set, the site\u0026rsquo;s default configuration will be used. compactSummary Optional. A boolean value indicating whether to display the summary in compact mode. Default to false. Example:\n{{\u0026lt; article link=\u0026#34;/docs/welcome/\u0026#34; showSummary=true compactSummary=true \u0026gt;}} Welcome to Blowfish 3 menit\u0026middot; loading \u0026middot; loading New Docs Blowfish is packed with tons of features. The original aim of Blowfish was to develop a theme that was simple and lightweight. The theme is a fork of Congo and expands its initial vision. Tailwind CSS 3.0 # Tailwind CSS is at the heart of Blowfish and this release contains the very latest Tailwind CSS version 3. It brings with it performance optimisations and support for some great new CSS features. Badge # badge outputs a styled badge component which is useful for displaying metadata.\nExample:\n{{\u0026lt; badge \u0026gt;}} New article! {{\u0026lt; /badge \u0026gt;}} New article! Button # button outputs a styled button component which can be used to highlight a primary action. It has three optional variables href, target and rel which can be used to specify the URL, target and relation of the link.\nExample:\n{{\u0026lt; button href=\u0026#34;#button\u0026#34; target=\u0026#34;_self\u0026#34; \u0026gt;}} Call to action {{\u0026lt; /button \u0026gt;}} Call to action Carousel # carousel is used to showcase multiple images in an interactive and visually appealing way. This allows a user to slide through multiple images while only taking up the vertical space of a single one. All images are displayed using the full width of the parent component and using one of the predefined aspect ratios of 16:9, 21:9 or 32:9.\nParameter Description images Required. A regex string to match image names or URLs. aspectRatio Optional. The aspect ratio for the carousel. Either 16-9, 21-9 or 32-9. It is set to 16-9 by default. interval Optional. The interval for the auto-scrooling, specified in milliseconds. Defaults to 2000 (2s) Example 1: 16:9 aspect ratio and verbose list of images\n{{\u0026lt; carousel images=\u0026#34;{https://cdn.pixabay.com/photo/2016/12/11/12/02/mountains-1899264_960_720.jpg, gallery/03.jpg, gallery/01.jpg, gallery/02.jpg, gallery/04.jpg}\u0026#34; \u0026gt;}} Previous Next Example 2: 21:9 aspect ratio and regex-ed list of images\n{{\u0026lt; carousel images=\u0026#34;gallery/*\u0026#34; aspectRatio=\u0026#34;21-9\u0026#34; interval=\u0026#34;2500\u0026#34; \u0026gt;}} Previous Next Chart # chart uses the Chart.js library to embed charts into articles using simple structured data. It supports a number of different chart styles and everything can be configured from within the shortcode. Simply provide the chart parameters between the shortcode tags and Chart.js will do the rest.\nRefer to the official Chart.js docs for details on syntax and supported chart types.\nExample:\n{{\u0026lt; chart \u0026gt;}} type: \u0026#39;bar\u0026#39;, data: { labels: [\u0026#39;Tomato\u0026#39;, \u0026#39;Blueberry\u0026#39;, \u0026#39;Banana\u0026#39;, \u0026#39;Lime\u0026#39;, \u0026#39;Orange\u0026#39;], datasets: [{ label: \u0026#39;# of votes\u0026#39;, data: [12, 19, 3, 5, 3], }] } {{\u0026lt; /chart \u0026gt;}} You can see some additional Chart.js examples on the charts samples page.\nCode Importer # This shortcode is for importing code from external sources easily without copying and pasting.\nParameter Description url Required URL to an externally hosted code file. type Code type used for syntax highlighting. startLine Optional The line number to start the import from. endLine Optional The line number to end the import at. Example:\n{{\u0026lt; codeimporter url=\u0026#34;https://raw.githubusercontent.com/nunocoracao/blowfish/main/layouts/shortcodes/mdimporter.html\u0026#34; type=\u0026#34;go\u0026#34; \u0026gt;}} {{ $url := .Get \u0026#34;url\u0026#34; }} {{ with resources.GetRemote (urls.Parse $url) }} {{ .Content | markdownify }} {{ else }} {{ warnf \u0026#34;mdimporter shortcode: unable to fetch %q: %s\u0026#34; $url .Position }} {{ end }} {{\u0026lt; codeimporter url=\u0026#34;https://raw.githubusercontent.com/nunocoracao/blowfish/main/config/_default/hugo.toml\u0026#34; type=\u0026#34;toml\u0026#34; startLine=\u0026#34;11\u0026#34; endLine=\u0026#34;18\u0026#34; \u0026gt;}} enableRobotsTXT = true summaryLength = 0 buildDrafts = false buildFuture = false enableEmoji = true Codeberg Card # codeberg allows you to quickly link a Codeberg repository via the Codeberg API, providing real-time updates on stats such as stars and forks.\nParameter Description repo [String] codeberg repo in the format of username/repo Example 1:\n{{\u0026lt; codeberg repo=\u0026#34;forgejo/forgejo\u0026#34; \u0026gt;}} \u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e forgejo/forgejo Beyond coding. We forge. Go 2676 456 Figure # Blowfish includes a figure shortcode for adding images to content. The shortcode replaces the base Hugo functionality in order to provide additional performance benefits.\nWhen a provided image is a page resource, it will be optimised using Hugo Pipes and scaled in order to provide images appropriate to different device resolutions. If a static asset or URL to an external image is provided, it will be included as-is without any image processing by Hugo.\nThe figure shortcode accepts six parameters:\nParameter Description src Required. The local path/filename or URL of the image. When providing a path and filename, the theme will attempt to locate the image using the following lookup order: Firstly, as a page resource bundled with the page; then an asset in the assets/ directory; then finally, a static image in the static/ directory. alt Alternative text description for the image. caption Markdown for the image caption, which will be displayed below the image. class Additional CSS classes to apply to the image. href URL that the image should be linked to. target The target attribute for the href URL. nozoom nozoom=true disables the image \u0026ldquo;zoom\u0026rdquo; functionality. This is most useful in combination with a href link. default Special parameter to revert to default Hugo figure behaviour. Simply provide default=true and then use normal Hugo shortcode syntax. Blowfish also supports automatic conversion of images included using standard Markdown syntax. Simply use the following format and the theme will handle the rest:\n![Alt text](image.jpg \u0026#34;Image caption\u0026#34;) Example:\n{{\u0026lt; figure src=\u0026#34;abstract.jpg\u0026#34; alt=\u0026#34;Abstract purple artwork\u0026#34; caption=\u0026#34;Photo by [Jr Korpa](https://unsplash.com/@jrkorpa) on [Unsplash](https://unsplash.com/)\u0026#34; \u0026gt;}} \u0026lt;!-- OR --\u0026gt; ![Abstract purple artwork](abstract.jpg \u0026#34;Photo by [Jr Korpa](https://unsplash.com/@jrkorpa) on [Unsplash](https://unsplash.com/)\u0026#34;) Photo by Jr Korpa on Unsplash Forgejo Card # forgejo allows you to quickly link a Forgejo repository via the forgejo API, providing real-time updates on stats such as stars and forks.\nParameter Description repo [String] forgejo repo in the format of username/repo server [String] server URL like https://v11.next.forgejo.org Example 1:\n{{\u0026lt; forgejo server=\u0026#34;https://v11.next.forgejo.org\u0026#34; repo=\u0026#34;a/mastodon\u0026#34; \u0026gt;}} a/mastodon Your self-hosted, globally interconnected microblogging community Ruby 0 0 Gallery # gallery allows you to showcase multiple images at once, in a responsive manner with more varied and interesting layouts.\nIn order to add images to the gallery, use img tags for each image and add class=\u0026quot;grid-wXX\u0026quot; in order for the gallery to be able to identify the column width for each image. The widths available by default start at 10% and go all the way to 100% in 5% increments. For example, to set the width to 65%, set the class to grid-w65. Additionally, widths for 33% and 66% are also available in order to build galleries with 3 cols. You can also leverage tailwind\u0026rsquo;s responsive indicators to have a reponsive grid.\nExample 1: normal gallery\n{{\u0026lt; gallery \u0026gt;}} \u0026lt;img src=\u0026#34;gallery/01.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/02.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/03.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/04.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/05.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/06.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/07.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; {{\u0026lt; /gallery \u0026gt;}} Example 2: responsive gallery\n{{\u0026lt; gallery \u0026gt;}} \u0026lt;img src=\u0026#34;gallery/01.jpg\u0026#34; class=\u0026#34;grid-w50 md:grid-w33 xl:grid-w25\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/02.jpg\u0026#34; class=\u0026#34;grid-w50 md:grid-w33 xl:grid-w25\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/03.jpg\u0026#34; class=\u0026#34;grid-w50 md:grid-w33 xl:grid-w25\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/04.jpg\u0026#34; class=\u0026#34;grid-w50 md:grid-w33 xl:grid-w25\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/05.jpg\u0026#34; class=\u0026#34;grid-w50 md:grid-w33 xl:grid-w25\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/06.jpg\u0026#34; class=\u0026#34;grid-w50 md:grid-w33 xl:grid-w25\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/07.jpg\u0026#34; class=\u0026#34;grid-w50 md:grid-w33 xl:grid-w25\u0026#34; /\u0026gt; {{\u0026lt; /gallery \u0026gt;}} Gist # gist shortcode allows you to embed a GitHub Gist directly into your content by specifying the Gist user, ID, and optionally a specific file.\nParameter Description [0] [String] GitHub username [1] [String] Gist ID [2] (optional) [String] Filename within the Gist to embed (optional) Example 1: Embed entire Gist\n{{\u0026lt; gist \u0026#34;octocat\u0026#34; \u0026#34;6cad326836d38bd3a7ae\u0026#34; \u0026gt;}} Example 2: Embed specific file from Gist\n{{\u0026lt; gist \u0026#34;rauchg\u0026#34; \u0026#34;2052694\u0026#34; \u0026#34;README.md\u0026#34; \u0026gt;}} Gitea Card # gitea allows you to quickly link a Gitea repository via the gitea API, providing real-time updates on stats such as stars and forks.\nParameter Description repo [String] gitea repo in the format of username/repo server [String] server URL like https://git.fsfe.org Example 1:\n{{\u0026lt; gitea server=\u0026#34;https://git.fsfe.org\u0026#34; repo=\u0026#34;FSFE/fsfe-website\u0026#34; \u0026gt;}} FSFE/fsfe-website Source files of fsfe.org, pdfreaders.org, freeyourandroid.org, ilovefs.org, drm.info, and test.fsfe.org. Contribute: https://fsfe.org/contribute/web/ HTML 32 92 GitHub Card # github allows you to quickly link a github repository, all while showing and updating in realtime stats about it, such as the number of stars and forks it has.\nParameter Description repo [String] github repo in the format of username/repo showThumbnail Optional [boolean] display a thumbnail for the repository Example 1:\n{{\u0026lt; github repo=\u0026#34;nunocoracao/blowfish\u0026#34; showThumbnail=true \u0026gt;}} nunocoracao/blowfish Personal Website \u0026amp; Blog Theme for Hugo HTML 2231 582 GitLab Card # gitlab allows you to quickly link a GitLab Project (GitLab\u0026rsquo;s jargon for repo). It displays realtime stats about it, such as the number of stars and forks it has. Unlike github it can\u0026rsquo;t display the main programming language of a project. Finally, custom GitLab instance URL can be provided, as long as the api/v4/projects/ endpoint is available, making this shortcode compatible with most self-hosted / enterprise deployments.\nParameter Description projectID [String] gitlab numeric ProjectID baseURL [String] optional gitlab instance URL, default is https://gitlab.com/ Example 1:\n{{\u0026lt; gitlab projectID=\u0026#34;278964\u0026#34; \u0026gt;}} GitLab.org / GitLab GitLab is an open source end-to-end software development platform with built-in version control, issue tracking, code review, CI/CD, and more. Self-host GitLab on your own servers, in a container, or on a cloud provider. 5692 11335 Hugging Face Card # huggingface allows you to quickly link a Hugging Face model or dataset, displaying real-time information such as the number of likes and downloads, along with type and description.\nParameter Description model [String] Hugging Face model in the format of username/model dataset [String] Hugging Face dataset in the format of username/dataset Note: Use either model or dataset parameter, not both.\nExample 1 (Model):\n{{\u0026lt; huggingface model=\u0026#34;google-bert/bert-base-uncased\u0026#34; \u0026gt;}} google-bert/bert-base-uncased fill-mask 2386 5.2870511e\u0026#43;07 Example 2 (Dataset):\n{{\u0026lt; huggingface dataset=\u0026#34;stanfordnlp/imdb\u0026#34; \u0026gt;}} stanfordnlp/imdb Large Movie Review Dataset. This is a dataset for binary sentiment classification containing substantially more data than previous benchmark datasets. We provide a set of 25,000 highly polar movie reviews for training, and 25,000 for testing. There is additional unlabeled data for use as well. Supported Tasks and Leaderboards More Information Needed Languages More Information Needed Dataset Structure… See the full description on the dataset page: https://huggingface.co/datasets/stanfordnlp/imdb. dataset 335 78548 Icon # icon outputs an SVG icon and takes the icon name as its only parameter. The icon is scaled to match the current text size.\nExample:\n{{\u0026lt; icon \u0026#34;github\u0026#34; \u0026gt;}} Output: Icons are populated using Hugo pipelines which makes them very flexible. Blowfish includes a number of built-in icons for social, links and other purposes. Check the icon samples page for a full list of supported icons.\nCustom icons can be added by providing your own icon assets in the assets/icons/ directory of your project. The icon can then be referenced in the shortcode by using the SVG filename without the .svg extension.\nIcons can also be used in partials by calling the icon partial.\nKaTeX # The katex shortcode can be used to add mathematical expressions to article content using the KaTeX package. Refer to the online reference of supported TeX functions for the available syntax.\nTo include mathematical expressions in an article, simply place the shortcode anywhere with the content. It only needs to be included once per article and KaTeX will automatically render any markup on that page. Both inline and block notation are supported.\nInline notation can be generated by wrapping the expression in \\( and \\) delimiters. Alternatively, block notation can be generated using $$ delimiters.\nExample:\n{{\u0026lt; katex \u0026gt;}} \\(f(a,b,c) = (a^2+b^2+c^2)^3\\) \\(f(a,b,c) = (a^2+b^2+c^2)^3\\)\nCheck out the mathematical notation samples page for more examples.\nKeyword # The keyword component can be used to visually highlight certain important words or phrases, e.g. professional skills etc. The keywordList shortcode can be used to group together multiple keyword items. Each item can have the following properties.\nParameter Description icon Optional icon to be used in the keyword The input is written in Markdown so you can format it however you please.\nExample1 :\n{{\u0026lt; keyword \u0026gt;}} *Super* skill {{\u0026lt; /keyword \u0026gt;}} Super skill Example2 :\n{{\u0026lt; keywordList \u0026gt;}} {{\u0026lt; keyword icon=\u0026#34;github\u0026#34; \u0026gt;}} Lorem ipsum dolor. {{\u0026lt; /keyword \u0026gt;}} {{\u0026lt; keyword icon=\u0026#34;code\u0026#34; \u0026gt;}} **Important** skill {{\u0026lt; /keyword \u0026gt;}} {{\u0026lt; /keywordList \u0026gt;}} {{\u0026lt; keyword \u0026gt;}} *Standalone* skill {{\u0026lt; /keyword \u0026gt;}} Lorem ipsum dolor Important skill Standalone skill Lead # lead is used to bring emphasis to the start of an article. It can be used to style an introduction, or to call out an important piece of information. Simply wrap any Markdown content in the lead shortcode.\nExample:\n{{\u0026lt; lead \u0026gt;}} When life gives you lemons, make lemonade. {{\u0026lt; /lead \u0026gt;}} When life gives you lemons, make lemonade. List # List will display a list of recent articles. This shortcode requires a limit value to constraint the list. Additionally, it supports a where and a value in order to filter articles by their parameters. Note that this shortcode will not display its parent page but it will count for the limit value.\nParameter Description limit Required. the number of recent articles to display. title Optional title for the list, default is Recent cardView Optional card view enabled for the list, default is false where The variable to be used for the query of articles e.g. Type value The value that will need to match the parameter defined in where for the query of articles e.g. for where == Type a valid value could be sample The where and value values are used in the following query where .Site.RegularPages $where $value in the code of the shortcode. Check Hugo docs to learn more about which parameters are available to use. Example #1:\n{{\u0026lt; list limit=2 \u0026gt;}} Terbaru Era Perkembangan Artificial Intelligence: Machine Learning dan Computer Vision 10 menit\u0026middot; loading \u0026middot; loading Content Example n9o.xyz \u0026#8599; \u0026#8598; Personal Site Theme Author Example #2:\n{{\u0026lt; list title=\u0026#34;Samples\u0026#34; cardView=true limit=6 where=\u0026#34;Type\u0026#34; value=\u0026#34;sample\u0026#34; \u0026gt;}} Samples Multiple Authors 12 Oktober 2022\u0026middot;1 menit\u0026middot; loading \u0026middot; loading Authors Sample Thumbnails 26 September 2022\u0026middot;1 menit\u0026middot; loading \u0026middot; loading Thumbnail Sample Icons 14 Agustus 2020\u0026middot;2 menit\u0026middot; loading \u0026middot; loading Icons Sample Shortcodes Markdown 11 Maret 2019\u0026middot;3 menit\u0026middot; loading \u0026middot; loading Markdown Css Html Sample Rich Content 10 Maret 2019\u0026middot;1 menit\u0026middot; loading \u0026middot; loading Shortcodes Privacy Sample Gist Twitter Youtube Vimeo Placeholder Text 9 Maret 2019\u0026middot;Diperbarui: 24 Januari 2022\u0026middot;2 menit\u0026middot; loading \u0026middot; loading Markdown Text Sample Latin LTR/RTL # ltr and rtl allows you to mix your contents. Many RTL language users want to include parts of the content in LTR. Using this shortcode will let you do so, and by leveraging % as the outer-most dilemeter in the shortcode Hugo shortcodes, any markdown inside will be rendered normally.\nExample:\n- This is an markdown list. - Its per default a LTR direction {{% rtl %}} - هذه القائمة باللغة العربية - من اليمين الى اليسار {{% /rtl %}} This is an markdown list. Its per default a LTR direction هذه القائمة باللغة العربية من اليمين الى اليسار Markdown Importer # This shortcode allows you to import markdown files from external sources. This is useful for including content from other repositories or websites without having to copy and paste the content.\nParameter Description url Required URL to an externally hosted markdown file. Example:\n{{\u0026lt; mdimporter url=\u0026#34;https://raw.githubusercontent.com/nunocoracao/nunocoracao/master/README.md\u0026#34; \u0026gt;}} Hi there 👋 # 🧠 Principal PM @ Docker (AI, agents, infra) · Creator of Blowfish · Ex-founder · Mentor \u0026amp; advisor\n🐳 Principal Product Manager @ Docker 🐡 Creator and maintainer of Blowfish @ Blowfish page 🚀 Personal blog - n9o.xyz 📚 mentoring @ mentorcruise Mermaid # mermaid allows you to draw detailed diagrams and visualisations using text. It uses Mermaid under the hood and supports a wide variety of diagrams, charts and other output formats.\nSimply write your Mermaid syntax within the mermaid shortcode and let the plugin do the rest.\nRefer to the official Mermaid docs for details on syntax and supported diagram types.\nExample:\n{{\u0026lt; mermaid \u0026gt;}} graph LR; A[Lemons]--\u0026gt;B[Lemonade]; B--\u0026gt;C[Profit] {{\u0026lt; /mermaid \u0026gt;}} graph LR; A[Lemons]--\u003eB[Lemonade]; B--\u003eC[Profit] You can see some additional Mermaid examples on the diagrams and flowcharts samples page.\nSwatches # swatches outputs a set of up to three different colors to showcase color elements like a color palette. This shortcode takes the HEX codes of each color and creates the visual elements for each.\nExample\n{{\u0026lt; swatches \u0026#34;#64748b\u0026#34; \u0026#34;#3b82f6\u0026#34; \u0026#34;#06b6d4\u0026#34; \u0026gt;}} Output Timeline # The timeline creates a visual timeline that can be used in different use-cases, e.g. professional experience, a project\u0026rsquo;s achievements, etc. The timeline shortcode relies on the timelineItem sub-shortcode to define each item within the main timeline. Each item can have the following properties.\nParameter Description icon the icon to be used in the timeline visuals. header header for each entry badge text to place within the top right badge subheader entry\u0026rsquo;s subheader Example:\n{{\u0026lt; timeline \u0026gt;}} {{\u0026lt; timelineItem icon=\u0026#34;github\u0026#34; header=\u0026#34;header\u0026#34; badge=\u0026#34;badge test\u0026#34; subheader=\u0026#34;subheader\u0026#34; \u0026gt;}} Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus non magna ex. Donec sollicitudin ut lorem quis lobortis. Nam ac ipsum libero. Sed a ex eget ipsum tincidunt venenatis quis sed nisl. Pellentesque sed urna vel odio consequat tincidunt id ut purus. Nam sollicitudin est sed dui interdum rhoncus. {{\u0026lt; /timelineItem \u0026gt;}} {{\u0026lt; timelineItem icon=\u0026#34;code\u0026#34; header=\u0026#34;Another Awesome Header\u0026#34; badge=\u0026#34;date - present\u0026#34; subheader=\u0026#34;Awesome Subheader\u0026#34; \u0026gt;}} With html code \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Coffee\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tea\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Milk\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; {{\u0026lt; /timelineItem \u0026gt;}} {{\u0026lt; timelineItem icon=\u0026#34;star\u0026#34; header=\u0026#34;Shortcodes\u0026#34; badge=\u0026#34;AWESOME\u0026#34; \u0026gt;}} With other shortcodes {{\u0026lt; gallery \u0026gt;}} \u0026lt;img src=\u0026#34;gallery/01.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/02.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/03.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/04.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/05.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/06.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/07.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; {{\u0026lt; /gallery \u0026gt;}} {{\u0026lt; /timelineItem \u0026gt;}} {{\u0026lt; timelineItem icon=\u0026#34;code\u0026#34; header=\u0026#34;Another Awesome Header\u0026#34;\u0026gt;}} {{\u0026lt; github repo=\u0026#34;nunocoracao/blowfish\u0026#34; \u0026gt;}} {{\u0026lt; /timelineItem \u0026gt;}} {{\u0026lt; /timeline \u0026gt;}} header badge test subheader Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus non magna ex. Donec sollicitudin ut lorem quis lobortis. Nam ac ipsum libero. Sed a ex eget ipsum tincidunt venenatis quis sed nisl. Pellentesque sed urna vel odio consequat tincidunt id ut purus. Nam sollicitudin est sed dui interdum rhoncus. Another Awesome Header date - present Awesome Subheader With html code Coffee Tea Milk Shortcodes AWESOME With other shortcodes Another Awesome Header nunocoracao/blowfish Personal Website \u0026amp; Blog Theme for Hugo HTML 2231 582 TypeIt # TypeIt is the most versatile JavaScript tool for creating typewriter effects on the planet. With a straightforward configuration, it allows you to type single or multiple strings that break lines, delete \u0026amp; replace each other, and it even handles strings that contain complex HTML.\nBlowfish implements a sub-set of TypeIt features using a shortcode. Write your text within the typeit shortcode and use the following parameters to configure the behavior you want.\nParameter Description tag [String] html tag that will be used to render the strings. classList [String] List of css classes to apply to the html element. initialString [String] Initial string that will appear written and will be replaced. speed [number] Typing speed, measured in milliseconds between each step. lifeLike [boolean] Makes the typing pace irregular, as if a real person is doing it. startDelay [number] The amount of time before the plugin begins typing after being initialized. breakLines [boolean] Whether multiple strings are printed on top of each other (true), or if they\u0026rsquo;re deleted and replaced by each other (false). waitUntilVisible [boolean] Determines if the instance will begin when loaded or only when the target element becomes visible in the viewport. The default is true loop [boolean] Whether your strings will continuously loop after completing Example 1:\n{{\u0026lt; typeit \u0026gt;}} Lorem ipsum dolor sit amet {{\u0026lt; /typeit \u0026gt;}} Example 2:\n{{\u0026lt; typeit tag=h1 lifeLike=true \u0026gt;}} Lorem ipsum dolor sit amet, consectetur adipiscing elit. {{\u0026lt; /typeit \u0026gt;}} Example 3:\n{{\u0026lt; typeit tag=h3 speed=50 breakLines=false loop=true \u0026gt;}} \u0026#34;Frankly, my dear, I don\u0026#39;t give a damn.\u0026#34; Gone with the Wind (1939) \u0026#34;I\u0026#39;m gonna make him an offer he can\u0026#39;t refuse.\u0026#34; The Godfather (1972) \u0026#34;Toto, I\u0026#39;ve a feeling we\u0026#39;re not in Kansas anymore.\u0026#34; The Wizard of Oz (1939) {{\u0026lt; /typeit \u0026gt;}} Youtube Lite # A shortcut to embed youtube videos using the lite-youtube-embed library. This library is a lightweight alternative to the standard youtube embeds, and it\u0026rsquo;s designed to be faster and more efficient.\nParameter Description id [String] Youtube video id to embed. label [String] Label for the video params [String] Extras parameters for video playing Example 1:\n{{\u0026lt; youtubeLite id=\u0026#34;SgXhGb-7QbU\u0026#34; label=\u0026#34;Blowfish-tools demo\u0026#34; \u0026gt;}} Example 2:\nYou can use all of Youtube\u0026rsquo;s player parameters for the params variable, as demonstrated below:\nThis video will start after 130 seconds (2m10)\n{{\u0026lt; youtubeLite id=\u0026#34;SgXhGb-7QbU\u0026#34; label=\u0026#34;Blowfish-tools demo\u0026#34; params=\u0026#34;start=130\u0026#34; \u0026gt;}} This video will not have UI controls, will start playing at 130 seconds and will stop 10 seconds later.\nTo concatenate multiple options as shown below, you need to add the \u0026amp; character between them.\n{{\u0026lt; youtubeLite id=\u0026#34;SgXhGb-7QbU\u0026#34; label=\u0026#34;Blowfish-tools demo\u0026#34; params=\u0026#34;start=130\u0026amp;end=10\u0026amp;controls=0\u0026#34; \u0026gt;}} More informations can be found on the youtubeLite GitHub repo and Youtube\u0026rsquo;s player parameters page.\n","externalUrl":null,"permalink":"/docs/shortcodes/","section":"Documentation","summary":"\u003cp\u003eIn addition to all the \u003ca\n  href=\"https://gohugo.io/content-management/shortcodes/\"\n    target=\"_blank\"\n  \u003edefault Hugo shortcodes\u003c/a\u003e, Blowfish adds a few extras for additional functionality.\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003eAlert \n    \u003cdiv id=\"alert\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#alert\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003ealert\u003c/code\u003e outputs its contents as a stylised message box within your article. It\u0026rsquo;s useful for drawing attention to important information that you don\u0026rsquo;t want the reader to miss.\u003c/p\u003e\n\u003c!-- prettier-ignore-start --\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eParameter\u003c/th\u003e\n          \u003cth\u003eDescription\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eicon\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003eOptional.\u003c/strong\u003e the icon to display on the left side.\u003cbr\u003e\u003cstrong\u003eDefault:\u003c/strong\u003e \u003ccode\u003etriangle-exclamation\u003c/code\u003e (Check out the \u003ca\n  href=\"#icon\"\u003eicon shortcode\u003c/a\u003e for more details on using icons.)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eiconColor\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003eOptional.\u003c/strong\u003e the color for the icon in basic CSS style.\u003cbr\u003eCan be either hex values (\u003ccode\u003e#FFFFFF\u003c/code\u003e) or color names (\u003ccode\u003ewhite\u003c/code\u003e)\u003cbr\u003eBy default chosen based on the current color theme .\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003ecardColor\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003eOptional.\u003c/strong\u003e the color for the card background in basic CSS style.\u003cbr\u003eCan be either hex values (\u003ccode\u003e#FFFFFF\u003c/code\u003e) or color names (\u003ccode\u003ewhite\u003c/code\u003e)\u003cbr\u003eBy default chosen based on the current color theme .\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003etextColor\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003eOptional.\u003c/strong\u003e the color for the text in basic CSS style.\u003cbr\u003eCan be either hex values (\u003ccode\u003e#FFFFFF\u003c/code\u003e) or color names (\u003ccode\u003ewhite\u003c/code\u003e)\u003cbr\u003eBy default chosen based on the current color theme .\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c!-- prettier-ignore-end --\u003e\n\u003cp\u003eThe input is written in Markdown so you can format it however you please.\u003c/p\u003e","title":"Shortcodes","type":"docs"},{"content":"","externalUrl":"https://ciicadalab.github.io","permalink":"/users/ef51c7b9654a4f2d13525eb80ee46cdf/","section":"Users","summary":"","title":"ciicadalab.github.io","type":"users"},{"content":"In addition to the default Hugo front matter parameters, Blowfish adds a number of additional options to customise the presentation of individual articles. All the available theme front matter parameters are listed below.\nFront matter parameter default values are inherited from the theme\u0026rsquo;s base configuration, so you only need to specify these parameters in your front matter when you want to override the default.\nName Default Description title Not set The name of the article. description Not set The text description for the article. It is used in the HTML metadata. externalUrl Not set If this article is published on a third-party website, the URL to this article. Providing a URL will prevent a content page being generated and any references to this article will link directly to the third-party website. editURL article.editURL When showEdit is active, the URL for the edit link. editAppendPath article.editAppendPath When showEdit is active, whether or not the path to the current article should be appended to the URL set at editURL. groupByYear list.groupByYear Whether or not articles are grouped by year on list pages. menu Not set When a value is provided, a link to this article will appear in the named menus. Valid values are main or footer. robots Not set String that indicates how robots should handle this article. If set, it will be output in the page head. Refer to Google\u0026rsquo;s docs for valid values. sharingLinks article.sharingLinks Which sharing links to display at the end of this article. When not provided, or set to false no links will be displayed. showAuthor article.showAuthor Whether or not the author box for the default author is displayed in the article footer. showAuthorBottom article.showAuthorBottom Author boxes are displayed at the bottom of each page instead of the top. authors Not set Array of values for authors, if set it overrides showAuthor settings for page or site. Used on the multiple authors feature, check this page for more details on how to configure that feature. showAuthorsBadges article.showAuthorsBadges Whether the authors taxonomies are are displayed in the article or list header. This requires the setup of multiple authors and the authors taxonomy. Check this page for more details on how to configure that feature. featureimage Not set External URL for feature image featureimagecaption Not set Caption for feature image. Only displayed in heroStyle big showHero article.showHero Whether the thumbnail image will be shown as a hero image within the article page. heroStyle article.heroStyle Style to display the hero image, valid options are: basic, big, background, thumbAndBackground. showBreadcrumbs article.showBreadcrumbs or list.showBreadcrumbs Whether the breadcrumbs are displayed in the article or list header. showDate article.showDate Whether or not the article date is displayed. The date is set using the date parameter. showDateUpdated article.showDateUpdated Whether or not the date the article was updated is displayed. The date is set using the lastmod parameter. showEdit article.showEdit Whether or not the link to edit the article content should be displayed. showHeadingAnchors article.showHeadingAnchors Whether or not heading anchor links are displayed alongside headings within this article. showPagination article.showPagination Whether or not the next/previous article links are displayed in the article footer. invertPagination article.invertPagination Whether or not to flip the direction of the next/previous article links. showReadingTime article.showReadingTime Whether or not the article reading time is displayed. showTaxonomies article.showTaxonomies Whether or not the taxonomies that relate to this article are displayed. showTableOfContents article.showTableOfContents Whether or not the table of contents is displayed on this article. showWordCount article.showWordCount Whether or not the article word count is displayed. showComments article.showComments Whether or not the comments partial is included after the article footer. showSummary list.showSummary Whether or not the article summary should be displayed on list pages. showViews article.showViews Whether or not the article views should be displayed in lists and detailed view. This requires a firebase integration. Check this page for a guide on how to integrate Firebase into Blowfish showLikes article.showLikes Whether or not the article likes should be displayed in lists and detailed view. This requires a firebase integration. Check this page for a guide on how to integrate Firebase into Blowfish seriesOpened article.seriesOpened Whether or not the series module will be displayed open by default or not. series Not set Array of series the article belongs to, we recommend using only one series per article. series_order Not set Number of the article within the series. summary Auto generated using summaryLength (see site configuration) When showSummary is enabled, this is the Markdown string to be used as the summary for this article. xml true unless excluded by sitemap.excludedKinds Whether or not this article is included in the generated /sitemap.xml file. layoutBackgroundBlur true Makes the background image in the background heroStyle blur with the scroll layoutBackgroundHeaderSpace true Add space between the header and the body. ","externalUrl":null,"permalink":"/docs/front-matter/","section":"Documentation","summary":"\u003cp\u003eIn addition to the \u003ca\n  href=\"https://gohugo.io/content-management/front-matter/#front-matter-variables\"\n    target=\"_blank\"\n  \u003edefault Hugo front matter parameters\u003c/a\u003e, Blowfish adds a number of additional options to customise the presentation of individual articles. All the available theme front matter parameters are listed below.\u003c/p\u003e\n\u003cp\u003eFront matter parameter default values are inherited from the theme\u0026rsquo;s \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/configuration/\"\u003ebase configuration\u003c/a\u003e, so you only need to specify these parameters in your front matter when you want to override the default.\u003c/p\u003e\n\u003c!-- prettier-ignore-start --\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eDefault\u003c/th\u003e\n          \u003cth\u003eDescription\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003etitle\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cem\u003eNot set\u003c/em\u003e\u003c/td\u003e\n          \u003ctd\u003eThe name of the article.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003edescription\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cem\u003eNot set\u003c/em\u003e\u003c/td\u003e\n          \u003ctd\u003eThe text description for the article. It is used in the HTML metadata.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eexternalUrl\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cem\u003eNot set\u003c/em\u003e\u003c/td\u003e\n          \u003ctd\u003eIf this article is published on a third-party website, the URL to this article. Providing a URL will prevent a content page being generated and any references to this article will link directly to the third-party website.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eeditURL\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.editURL\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhen \u003ccode\u003eshowEdit\u003c/code\u003e is active, the URL for the edit link.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eeditAppendPath\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.editAppendPath\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhen \u003ccode\u003eshowEdit\u003c/code\u003e is active, whether or not the path to the current article should be appended to the URL set at \u003ccode\u003eeditURL\u003c/code\u003e.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egroupByYear\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003elist.groupByYear\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not articles are grouped by year on list pages.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003emenu\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cem\u003eNot set\u003c/em\u003e\u003c/td\u003e\n          \u003ctd\u003eWhen a value is provided, a link to this article will appear in the named menus. Valid values are \u003ccode\u003emain\u003c/code\u003e or \u003ccode\u003efooter\u003c/code\u003e.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003erobots\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cem\u003eNot set\u003c/em\u003e\u003c/td\u003e\n          \u003ctd\u003eString that indicates how robots should handle this article. If set, it will be output in the page head. Refer to \u003ca\n  href=\"https://developers.google.com/search/docs/advanced/robots/robots_meta_tag#directives\"\n    target=\"_blank\"\n  \u003eGoogle\u0026rsquo;s docs\u003c/a\u003e for valid values.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003esharingLinks\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.sharingLinks\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhich sharing links to display at the end of this article. When not provided, or set to \u003ccode\u003efalse\u003c/code\u003e no links will be displayed.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowAuthor\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showAuthor\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not the author box for the default author is displayed in the article footer.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowAuthorBottom\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showAuthorBottom\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eAuthor boxes are displayed at the bottom of each page instead of the top.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eauthors\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cem\u003eNot set\u003c/em\u003e\u003c/td\u003e\n          \u003ctd\u003eArray of values for authors, if set it overrides \u003ccode\u003eshowAuthor\u003c/code\u003e settings for page or site. Used on the multiple authors feature, check \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/multi-author/\"\u003ethis page\u003c/a\u003e for more details on how to configure that feature.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowAuthorsBadges\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showAuthorsBadges\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether the \u003ccode\u003eauthors\u003c/code\u003e taxonomies are are displayed in the article or list header. This requires the setup of \u003ccode\u003emultiple authors\u003c/code\u003e and the \u003ccode\u003eauthors\u003c/code\u003e taxonomy. Check \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/multi-author/\"\u003ethis page\u003c/a\u003e for more details on how to configure that feature.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003efeatureimage\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cem\u003eNot set\u003c/em\u003e\u003c/td\u003e\n          \u003ctd\u003eExternal URL for feature image\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003efeatureimagecaption\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cem\u003eNot set\u003c/em\u003e\u003c/td\u003e\n          \u003ctd\u003eCaption for feature image. Only displayed in heroStyle \u003ccode\u003ebig\u003c/code\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowHero\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showHero\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether the thumbnail image will be shown as a hero image within the article page.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eheroStyle\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.heroStyle\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eStyle to display the hero image, valid options are: \u003ccode\u003ebasic\u003c/code\u003e, \u003ccode\u003ebig\u003c/code\u003e, \u003ccode\u003ebackground\u003c/code\u003e, \u003ccode\u003ethumbAndBackground\u003c/code\u003e.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowBreadcrumbs\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showBreadcrumbs\u003c/code\u003e or \u003ccode\u003elist.showBreadcrumbs\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether the breadcrumbs are displayed in the article or list header.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowDate\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showDate\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not the article date is displayed. The date is set using the \u003ccode\u003edate\u003c/code\u003e parameter.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowDateUpdated\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showDateUpdated\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not the date the article was updated is displayed. The date is set using the \u003ccode\u003elastmod\u003c/code\u003e parameter.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowEdit\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showEdit\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not the link to edit the article content should be displayed.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowHeadingAnchors\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showHeadingAnchors\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not heading anchor links are displayed alongside headings within this article.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowPagination\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showPagination\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not the next/previous article links are displayed in the article footer.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003einvertPagination\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.invertPagination\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not to flip the direction of the next/previous article links.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowReadingTime\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showReadingTime\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not the article reading time is displayed.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowTaxonomies\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showTaxonomies\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not the taxonomies that relate to this article are displayed.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowTableOfContents\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showTableOfContents\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not the table of contents is displayed on this article.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowWordCount\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showWordCount\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not the article word count is displayed.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowComments\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showComments\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not the \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/partials/#comments\"\u003ecomments partial\u003c/a\u003e is included after the article footer.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowSummary\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003elist.showSummary\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not the article summary should be displayed on list pages.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowViews\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showViews\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not the article views should be displayed in lists and detailed view. This requires a firebase integration. Check \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/firebase-views/\"\u003ethis page\u003c/a\u003e for a guide on how to integrate Firebase into Blowfish\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eshowLikes\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.showLikes\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not the article likes should be displayed in lists and detailed view. This requires a firebase integration. Check \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/firebase-views/\"\u003ethis page\u003c/a\u003e for a guide on how to integrate Firebase into Blowfish\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eseriesOpened\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003earticle.seriesOpened\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not the series module will be displayed open by default or not.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eseries\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cem\u003eNot set\u003c/em\u003e\u003c/td\u003e\n          \u003ctd\u003eArray of series the article belongs to, we recommend using only one series per article.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eseries_order\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cem\u003eNot set\u003c/em\u003e\u003c/td\u003e\n          \u003ctd\u003eNumber of the article within the series.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003esummary\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eAuto generated using \u003ccode\u003esummaryLength\u003c/code\u003e (see \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/configuration/#site-configuration\"\u003esite configuration\u003c/a\u003e)\u003c/td\u003e\n          \u003ctd\u003eWhen \u003ccode\u003eshowSummary\u003c/code\u003e is enabled, this is the Markdown string to be used as the summary for this article.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003exml\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e unless excluded by \u003ccode\u003esitemap.excludedKinds\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eWhether or not this article is included in the generated \u003ccode\u003e/sitemap.xml\u003c/code\u003e file.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003elayoutBackgroundBlur\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eMakes the background image in the background heroStyle blur with the scroll\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003elayoutBackgroundHeaderSpace\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eAdd space between the header and the body.\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c!-- prettier-ignore-end --\u003e","title":"Front Matter","type":"docs"},{"content":"","externalUrl":"https://georgiancodeclub.github.io","permalink":"/users/25036bf87aa99ef82e09089a1ddbb9eb/","section":"Users","summary":"","title":"georgiancodeclub.github.io","type":"users"},{"content":"Some websites have more than one author contributing with content and therefore require more than a single default author across the entire website. For those use-cases, Blowfish allows users to extend the list of authors using the multiple authors feature.\nTo keep everything backwards compatible, this feature only allows the definition of extra authors and does not change in any way the previous author functionality which is used via config files.\nCreate Authors # The first step to create new authors is to set up a new folder in ./data/authors. Then you can simply add new json files inside, one for each new author. The name of the file will be the key for that author when referencing it in your articles.\nAs an example, let’s create a file called nunocoracao.json within ./data/authors. The contents of the file should be similar to the ones below. name, image, bio, and social are the 4 parameters supported right for authors. They mimic the configurations available for the default author in the config files.\nNote: the key in the social object will be used to fetch one of the theme’s icons, feel free to use any of the icons available in your setup.\n{ \u0026#34;name\u0026#34;: \u0026#34;Nuno Coração\u0026#34;, \u0026#34;image\u0026#34; : \u0026#34;img/nuno_avatar.jpg\u0026#34;, \u0026#34;bio\u0026#34;: \u0026#34;Theme Creator\u0026#34;, \u0026#34;social\u0026#34;: [ { \u0026#34;linkedin\u0026#34;: \u0026#34;https://linkedin.com/in/nunocoracao\u0026#34; }, { \u0026#34;twitter\u0026#34;: \u0026#34;https://twitter.com/nunocoracao\u0026#34; }, { \u0026#34;instagram\u0026#34;: \u0026#34;https://instagram.com/nunocoracao\u0026#34; }, { \u0026#34;medium\u0026#34;: \u0026#34;https://medium.com/@nunocoracao\u0026#34; }, { \u0026#34;github\u0026#34;: \u0026#34;https://github.com/nunocoracao\u0026#34; }, { \u0026#34;goodreads\u0026#34;: \u0026#34;http://goodreads.com/nunocoracao\u0026#34; }, { \u0026#34;keybase\u0026#34;: \u0026#34;https://keybase.io/nunocoracao\u0026#34; }, { \u0026#34;reddit\u0026#34;: \u0026#34;https://reddit.com/user/nunoheart\u0026#34; } ] } Reference Authors in Articles # Now that you created one author, the next step is to reference it in one or more articles. In the example below, we reference the author created in the previous step using its key.\nThis will render an extra author using the data provided in the json file. This feature does not change in any way the default author configured for the overall site, and therefore, you can control both separately. Using the showAuthor parameter, you can configure whether to show the default author, that is the normal use-case for a single author blog. The new authors front-matter parameter allows you to define authors specifically to an article, and they will be rendered independently of the configurations for the default site author.\n--- title: \u0026#34;Multiple Authors\u0026#34; date: 2020-08-10 draft: false description: \u0026#34;Configure multiple authors for your articles.\u0026#34; slug: \u0026#34;multi-author\u0026#34; tags: [\u0026#34;authors\u0026#34;, \u0026#34;config\u0026#34;, \u0026#34;docs\u0026#34;] showAuthor: true authors: - \u0026#34;nunocoracao\u0026#34; showAuthorsBadges : false --- In the example, which matches the markdown of the current page, both the default author and the new one will be displayed. You can scroll now to see the outcome.\nCreate the Authors Taxonomy # To get lists of articles for each of your authors you can configure the authors taxonomy, which opens up some more configurations that might be interesting. This is an optional step in the process that is not required to display the authors in your articles.\nFirst step is to configure the authors taxonomy in your config.toml file, like in the example below. Even though tag and category are defined by default with Hugo, once you add a specific taxonomies section you need to add them again otherwise the site will not process them.\n[taxonomies] tag = \u0026#34;tags\u0026#34; category = \u0026#34;categories\u0026#34; author = \u0026#34;authors\u0026#34; And that’s just about it. Now you will have pages that reference your authors and, for each, show the respective list of articles where they participate. You can also use the article.showAuthorsBadges on the config file, or showAuthorsBadges on each article to chose whether to display the authors taxonomy as badges in each post item. As an example, this doc is configured to not display authors but if you look at the sample referenced below you will see the authors displayed as badges.\nLastly, you can add more detail to each author page so that it displays a little bio, links, or whatever information fits your use-case. To achieve that, create a folder with the key to each author inside ./content/authors and inside each folder place a _index.md file. For the example above, we would end up with a .content/authors/nunocoracao/_index.md file. Inside, you can configure the actual name of the author and the contents of their page. Authors in this documentation website are configured like this, so you can have a look by playing around with the site.\n--- title: \u0026#34;Nuno Coração\u0026#34; --- Nuno\u0026#39;s awesome dummy bio. Sample # This sample sample below shows an example where the default site author is turned off and the article has multiple authors.\nMultiple Authors 12 Oktober 2022\u0026middot;1 menit\u0026middot; loading \u0026middot; loading Authors Sample ","externalUrl":null,"permalink":"/docs/multi-author/","section":"Documentation","summary":"\u003cp\u003eSome websites have more than one author contributing with content and therefore require more than a single default author across the entire website. For those use-cases, Blowfish allows users to extend the list of authors using the multiple authors feature.\u003c/p\u003e\n\u003cp\u003eTo keep everything backwards compatible, this feature only allows the definition of extra authors and does not change in any way the previous author functionality which is used via config files.\u003c/p\u003e","title":"Multiple Authors","type":"docs"},{"content":"","externalUrl":"https://www.fahru.my.id","permalink":"/users/5440c85ea880d93157088032515962d3/","section":"Users","summary":"","title":"fahru.my.id","type":"users"},{"content":" Analytics # Blowfish provides built-in support for Fathom Analytics, Google Analytics and Umami Analytics. Fathom is a paid alternative to Google Analytics that respects user privacy.\nFathom Analytics # To enable Fathom Analytics support, simply provide your Fathom site code in the config/_default/params.toml file. If you also use the custom domain feature of Fathom and would like to serve their script from your domain, you can also additionally provide the domain configuration value. If you don\u0026rsquo;t provide a domain value, the script will load directly from Fathom DNS.\n# config/_default/params.toml [fathomAnalytics] site = \u0026#34;ABC12345\u0026#34; domain = \u0026#34;llama.yoursite.com\u0026#34; Google Analytics # Google Analytics support is provided through the internal Hugo partial. Simply provide the googleAnalytics key in the config/_default/config.toml file and the script will be added automatically.\nBoth version 3 (analytics.js) and version 4 (gtag.js) are supported, based on the configuration value provided:\n# config/_default/config.toml # version 3 googleAnalytics = \u0026#34;UA-PROPERTY_ID\u0026#34; # version 4 googleAnalytics = \u0026#34;G-MEASUREMENT_ID\u0026#34; Umami Analytics # To enable Umami Analytics support, simply provide your Umami tracking code in the config/_default/params.toml file. If you also use the custom domain feature of Umami and would like to serve their script from your domain, you can also additionally provide the domain configuration value. If you don\u0026rsquo;t provide a domain value, the script will load directly from Umami DNS (analytics.umami.is). If you want the tracker to only run on specific domains, you can provide the dataDomains configuration value. If you don\u0026rsquo;t provide a dataDomains value, the script will run on any website where the domain andwebsiteid match. If the environment variable TRACKER_SCRIPT_NAME is configured, you can specify a custom script name scriptName. If it is not configured, either comment it out or use the default script.js.\nNote: If you enable Umami Analytics, Blowfish will support Umami Track Event automatically. If you do not want to support Track Event, the param enableTrackEvent must set to false. # config/_default/params.toml [umamiAnalytics] websiteid = \u0026#34;ABC12345\u0026#34; domain = \u0026#34;llama.yoursite.com\u0026#34; dataDomains = \u0026#34;yoursite.com,yoursite2.com\u0026#34; scriptName = \u0026#34;TRACKER_SCRIPT_NAME\u0026#34; enableTrackEvent = true Seline Analytics # To enable Seline Analytics support, simply provide your Seline token in the config/_default/params.toml file.\nNote: If you enable Seline Analytics, Blowfish will support Seline Track Event automatically. If you do not want to support Track Event, the param enableTrackEvent must set to false. # config/_default/params.toml [selineAnalytics] token = \u0026#34;XXXXXX\u0026#34; enableTrackEvent = true Custom analytics providers # If you wish to use a different analytics provider on your website you can also override the analytics partial and provide your own script. Simply create the file layouts/partials/extend-head.html in your project and it will automatically include it in the \u0026lt;head\u0026gt; of the website.\nComments # To add comments to your articles, Blowfish includes support for a comments partial that is included at the base of each article page. Simply provide a layouts/partials/comments.html which contains the code required to display your chosen comments.\nYou can use either the built-in Hugo Disqus template, or provide your own custom code. Refer to the Hugo docs for further information.\nOnce the partial has been provided, finer control over where comments are displayed is then managed using the showComments parameter. This value can be set at the theme level in the params.toml config file, or on a per-article basis by including it in the front matter. The parameter defaults to false so it must be set to true in one of these locations in order for comments to be displayed.\nFavicons # Blowfish provides a default set of blank favicons to get started but you can provide your own assets to override them. The easiest way to obtain new favicon assets is to generate them using a third-party provider like favicon.io.\nIcon assets should be placed directly in the static/ folder of your website and named as per the listing below. If you use favicon.io, these will be the filenames that are automatically generated for you, but you can provide your own assets if you wish.\nstatic/ ├─ android-chrome-192x192.png ├─ android-chrome-512x512.png ├─ apple-touch-icon.png ├─ favicon-16x16.png ├─ favicon-32x32.png ├─ favicon.ico └─ site.webmanifest Alternatively, you can also completely override the default favicon behaviour and provide your own favicon HTML tags and assets. Simply provide a layouts/partials/favicons.html file in your project and this will be injected into the site \u0026lt;head\u0026gt; in place of the default assets.\nIcon # Similar to the icon shortcode, you can include icons in your own templates and partials by using Blowfish\u0026rsquo;s icon.html partial. The partial takes one parameter which is the name of the icon to be included.\nExample:\n{{ partial \u0026#34;icon.html\u0026#34; \u0026#34;github\u0026#34; }} Icons are populated using Hugo pipelines which makes them very flexible. Blowfish includes a number of built-in icons for social, links and other purposes. Check the icon samples page for a full list of supported icons.\nCustom icons can be added by providing your own icon assets in the assets/icons/ directory of your project. The icon can then be referenced in the partial by using the SVG filename without the .svg extension.\nIcons can also be used in article content by calling the icon shortcode.\nExtensions # Blowfish also provides for a number of extension partials that allow for expanding upon base functionality.\nArticle link # If you wish to insert additional code after article links, create a layouts/partials/extend-article-link.html file. This is especially powerful when combined with the badge shortcode which can be used to highlight metadata for certain articles.\nHead and Footer # The theme allows for inserting additional code directly into the \u0026lt;head\u0026gt; and \u0026lt;footer\u0026gt; sections of the template. These can be useful for providing scripts or other logic that isn\u0026rsquo;t part of the theme.\nSimply create either layouts/partials/extend-head.html or layouts/partials/extend-footer.html and these will automatically be included in your website build. Both partials are injected as the last items in \u0026lt;head\u0026gt; and \u0026lt;footer\u0026gt; so they can be used to override theme defaults.\nUncached Head Extension # The extend-head.html is cached, and Blowfish also supports an uncached head extension for conditionally including scripts or metadata based on page-level properties. To use this feature, create a layouts/partials/extend-head-uncached.html file in your project. This file will be included in \u0026lt;head\u0026gt; HTML tag.\nThis is useful when you need to include dynamic elements—such as scripts or metadata—based on properties like shortcodes, front matter flags, or other page-specific data that should not be cached across builds.\nFor example, to dynamically load a CDN JavaScript file base on the appearance of a shortcode, you can use the HasShortcode method within extend-head-uncached.html.\n","externalUrl":null,"permalink":"/docs/partials/","section":"Documentation","summary":"\u003ch2 class=\"relative group\"\u003eAnalytics \n    \u003cdiv id=\"analytics\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#analytics\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eBlowfish provides built-in support for Fathom Analytics, Google Analytics and Umami Analytics. Fathom is a paid alternative to Google Analytics that respects user privacy.\u003c/p\u003e\n\n\u003ch3 class=\"relative group\"\u003eFathom Analytics \n    \u003cdiv id=\"fathom-analytics\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#fathom-analytics\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003eTo enable Fathom Analytics support, simply provide your Fathom site code in the \u003ccode\u003econfig/_default/params.toml\u003c/code\u003e file. If you also use the custom domain feature of Fathom and would like to serve their script from your domain, you can also additionally provide the \u003ccode\u003edomain\u003c/code\u003e configuration value. If you don\u0026rsquo;t provide a \u003ccode\u003edomain\u003c/code\u003e value, the script will load directly from Fathom DNS.\u003c/p\u003e","title":"Partials","type":"docs"},{"content":"","externalUrl":"https://loisvelasco.is-a.dev","permalink":"/users/6c20c1af90023ed60919801cfba0f08f/","section":"Users","summary":"","title":"loisvelasco.is-a.dev","type":"users"},{"content":" Thumbnails # Blowfish was enhanced in order to make it easy to add visual support to your posts. To do so, you just need to place an image file (almost all formats are supported but we recommend .png or .jpg) that starts with feature* inside your article\u0026rsquo;s main directory, as shown in the example below.\ncontent └── awesome_article ├── index.md └── featured.png This will tell Blowfish that this article has a feature image that can be used both as a thumbnail across your website as well as for oEmbed cards across social platforms.\nFolder Structure # If you are using single .md files for your articles and have a file structure similar to this:\ncontent └── awesome_article.md You need to change it from a single Markdown file into a folder. Create a directory with the same name of the article, inside create a index.md file. You\u0026rsquo;ll get a structure similar to what\u0026rsquo;s below.\ncontent └── awesome_article └── index.md Then you just need to add an image like explained earlier. If you want to see a sample of this, you can consult this sample.\nHero Images # Thumbnails will be used by default as hero images within each article. Use the global article.showHero or the front-matter parameter showHero to control this feature across the entire site or for each specific post. If you want to override the style of the hero image, you can create a file called hero.html in ./layouts/partials/ that will override the original partial from the theme.\n","externalUrl":null,"permalink":"/docs/thumbnails/","section":"Documentation","summary":"\u003ch2 class=\"relative group\"\u003eThumbnails \n    \u003cdiv id=\"thumbnails\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#thumbnails\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eBlowfish was enhanced in order to make it easy to add visual support to your posts. To do so, you just need to place an image file (almost all formats are supported but we recommend \u003ccode\u003e.png\u003c/code\u003e or \u003ccode\u003e.jpg\u003c/code\u003e) that starts with \u003ccode\u003efeature*\u003c/code\u003e inside your article\u0026rsquo;s main directory, as shown in the example below.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003econtent\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e└── awesome_article\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    ├── index.md\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    └── featured.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis will tell Blowfish that this article has a feature image that can be used both as a thumbnail across your website as well as for \u003ca target=\"_blank\" href=\"https://oembed.com/\"\u003eoEmbed\u003c/a\u003e cards across social platforms.\u003c/p\u003e","title":"Thumbnails","type":"docs"},{"content":"If you\u0026rsquo;ve been reading the documentation in order, you should now know about all the features and configurations available in Blowfish. This page is designed to pull everything together and offer some worked examples that you might like to use in your Hugo project.\nTip: If you\u0026rsquo;re new to Hugo, be sure to check out the official docs to learn more about the concept of page bundles and resources. The examples on this page can all be adapted to different scenarios but hopefully give you some ideas about how to approach formatting a particular content item for your individual project.\nBranch pages # Branch page bundles in Hugo cover items like the homepage, section listings, and taxonomy pages. The important thing to remember about branch bundles is that the filename for this content type is _index.md.\nBlowfish will honour the front matter parameters specified in branch pages and these will override the default settings for that particular page. For example, setting the title parameter in a branch page will allow overriding the page title.\nHomepage # Layout: layouts/index.html Content: content/_index.md The homepage in Blowfish is special in that it\u0026rsquo;s overarching design is controlled by the homepage layout config parameter. You can learn more about this in the Homepage Layout section.\nIf you want to add custom content to this page, you simply need to create a content/_index.md file. Anything in this file will then be included in your homepage.\nExample:\n--- title: \u0026#34;Welcome to Blowfish!\u0026#34; description: \u0026#34;This is a demo of adding content to the homepage.\u0026#34; --- Welcome to my website! I\u0026#39;m really happy you stopped by. This example sets a custom title and adds some additional text to the body of the page. Any Markdown formatted text is acceptable, including shortcodes, images and links.\nList pages # Layout: layouts/_default/list.html Content: content/../_index.md List pages group all the pages within into a section and provide a way for visitors to reach each page. A blog or portfolio are examples of a list page as they group together posts or projects.\nCreating a list page is as simple as making a sub-directory in the content folder. For example, to create a \u0026ldquo;Projects\u0026rdquo; section, you would create content/projects/. Then create a Markdown file for each of your projects.\nA list page will be generated by default, however to customise the content, you should also create an _index.md page in this new directory.\n. └── content └── projects ├── _index.md # /projects ├── first-project.md # /projects/first-project └── another-project ├── index.md # /projects/another-project └── project.jpg Hugo will generate URLs for the pages in your projects folder accordingly.\nJust like the homepage, content in the _index.md file will be output into the generated list index. Blowfish will then list any pages in this section below the content.\nExample:\n--- title: \u0026#34;Projects\u0026#34; description: \u0026#34;Learn about some of my projects.\u0026#34; cascade: showReadingTime: false --- This section contains all my current projects. In this example, the special cascade parameter is being used to hide the reading time on any sub-pages within this section. By doing this, any project pages will not have their reading time showing. This is a great way to override default theme parameters for an entire section without having to include them in every individual page.\nThe samples section of this site is an example of a list page.\nTaxonomy pages # List layout: layouts/_default/taxonomy.html Term layout: layouts/_default/term.html Content: content/../_index.md Taxonomy pages come in two forms - taxonomy lists and taxonomy terms. Lists display a listing of each of the terms within a given taxonomy, while terms display a list of pages that are related to a given term.\nThe terminology can get a little confusing so let\u0026rsquo;s explore an example using a taxonomy named animals.\nFirstly, to use taxonomies in Hugo, they have to be configured. This is done by creating a config file at config/_default/taxonomies.toml and defining the taxonomy name.\n# config/_default/taxonomies.toml animal = \u0026#34;animals\u0026#34; Hugo expects taxonomies to be listed using their singular and plural forms, so we add the singular animal equals the plural animals to create our example taxonomy.\nNow that our animals taxonomy exists, it needs to be added to individual content items. It\u0026rsquo;s as simple as inserting it into the front matter:\n--- title: \u0026#34;Into the Lion\u0026#39;s Den\u0026#34; description: \u0026#34;This week we\u0026#39;re learning about lions.\u0026#34; animals: [\u0026#34;lion\u0026#34;, \u0026#34;cat\u0026#34;] --- This has now created two terms within our animals taxonomy - lion and cat.\nAlthough it\u0026rsquo;s not obvious at this point, Hugo will now be generating list and term pages for this new taxonomy. By default the listing can be accessed at /animals/ and the term pages can be found at /animals/lion/ and /animals/cat/.\nThe list page will list all the terms contained within the taxonomy. In this example, navigating to /animals/ will show a page that has links for \u0026ldquo;lion\u0026rdquo; and \u0026ldquo;cat\u0026rdquo; which take visitors to the individual term pages.\nThe term pages will list all the pages contained within that term. These term lists are essentially the same as normal list pages and behave in much the same way.\nIn order to add custom content to taxonomy pages, simply create _index.md files in the content folder using the taxonomy name as the sub-directory name.\n. └── content └── animals ├── _index.md # /animals └── lion └── _index.md # /animals/lion Anything in these content files will now be placed onto the generated taxonomy pages. As with other content, the front matter variables can be used to override defaults. In this way you could have a tag named lion but override the title to be \u0026ldquo;Lion\u0026rdquo;.\nTo see how this looks in reality, check out the tags taxonomy listing on this site.\nLeaf pages # Layout: layouts/_default/single.html Content (standalone): content/../page-name.md Content (bundled): content/../page-name/index.md Leaf pages in Hugo are basically standard content pages. They are defined as pages that don\u0026rsquo;t contain any sub-pages. These could be things like an about page, or an individual blog post that lives in the blog section of the website.\nThe most important thing to remember about leaf pages is that unlike branch pages, leaf pages should be named index.md without an underscore. Leaf pages are also special in that they can be grouped together at the top level of the section and named with a unique name.\n. └── content └── blog ├── first-post.md # /blog/first-post ├── second-post.md # /blog/second-post └── third-post ├── index.md # /blog/third-post └── image.jpg When including assets in a page, like an image, a page bundle should be used. Page bundles are created using a sub-directory with an index.md file. Grouping the assets with the content in its own directory is important as many of the shortcodes and other theme logic assumes that resources are bundled alongside pages.\nExample:\n--- title: \u0026#34;My First Blog Post\u0026#34; date: 2022-01-25 description: \u0026#34;Welcome to my blog!\u0026#34; summary: \u0026#34;Learn more about me and why I am starting this blog.\u0026#34; tags: [\u0026#34;welcome\u0026#34;, \u0026#34;new\u0026#34;, \u0026#34;about\u0026#34;, \u0026#34;first\u0026#34;] --- _This_ is the content of my blog post. Leaf pages have a wide variety of front matter parameters that can be used to customise how they are displayed.\nExternal links # Blowfish has a special feature that allows links to external pages to appear alongside articles in the article listings. This is useful if you have content on third party websites like Medium, or research papers that you\u0026rsquo;d like to link to, without replicating the content in your Hugo site.\nIn order to create an external link article, some special front matter needs to be set:\n--- title: \u0026#34;My Medium post\u0026#34; date: 2022-01-25 externalUrl: \u0026#34;https://medium.com/\u0026#34; summary: \u0026#34;I wrote a post on Medium.\u0026#34; showReadingTime: false build: render: \u0026#34;false\u0026#34; list: \u0026#34;local\u0026#34; --- Along with the normal front matter parameters like title and summary, the externalUrl parameter is used to tell Blowfish that this is not an ordinary article. The URL provided here will be where visitors are directed when they select this article.\nAdditionally, we use a special Hugo front matter parameter build to prevent a normal page for this content being generated - there\u0026rsquo;s no point generating a page since we\u0026rsquo;re linking to an external URL!\nThe theme includes an archetype to make generating these external link articles simple. Just specify -k external when making new content.\nhugo new -k external posts/my-post.md Simple pages # Layout: layouts/_default/simple.html Front Matter: layout: \u0026quot;simple\u0026quot; Blowfish also includes a special layout for simple pages. The simple layout is a full-width template that just places Markdown content into the page without any special theme features.\nThe only features available in the simple layout are breadcrumbs and sharing links. However, the behaviour of these can still be controlled using the normal page front matter variables.\nTo enable the simple layout on a particular page, add the layout front matter variable with a value of \u0026quot;simple\u0026quot;:\n--- title: \u0026#34;My landing page\u0026#34; date: 2022-03-08 layout: \u0026#34;simple\u0026#34; --- This page content is now full-width. Custom layouts # One of the benefits of Hugo is that it makes it easy to create custom layouts for the whole site, individual sections or pages.\nLayouts follow all the normal Hugo templating rules and more information is available in the official Hugo docs.\nOverriding default layouts # Each of the content types discussed above lists the layout file that is used to generate each type of page. If this file is created in your local project it will override the theme template and thus can be used to customise the default style of the website.\nFor example, creating a layouts/_default/single.html file will allow the layout of leaf pages to be completely customised.\nCustom section layouts # It is also simple to create custom layouts for individual content sections. This is useful when you want to make a section that lists a certain type of content using a particular style.\nLet\u0026rsquo;s step through an example that creates a custom \u0026ldquo;Projects\u0026rdquo; page that lists projects using a special layout.\nIn order to do this, structure your content using the normal Hugo content rules and create a section for your projects. Additionally, create a new layout for the projects section by using the same directory name as the content and adding a list.html file.\n. └── content │ └── projects │ ├── _index.md │ ├── first-project.md │ └── second-project.md └── layouts └── projects └── list.html This list.html file will now override the default list template, but only for the projects section. Before we look at this file, lets first look at the individual project files.\n--- title: \u0026#34;Blowfish\u0026#34; date: 2021-08-11 icon: \u0026#34;github\u0026#34; description: \u0026#34;A theme for Hugo built with Tailwind CSS.\u0026#34; topics: [\u0026#34;Hugo\u0026#34;, \u0026#34;Web\u0026#34;, \u0026#34;Tailwind\u0026#34;] externalUrl: \u0026#34;https://github.com/nunocoracao/blowfish/\u0026#34; --- In this example we are assigning some metadata for each project that we can then use in our list template. There\u0026rsquo;s no page content, but there\u0026rsquo;s nothing stopping you from including it. It\u0026rsquo;s your own custom template after all!\nWith the projects defined, now we can create a list template that outputs the details of each project.\n{{ define \u0026#34;main\u0026#34; }} \u0026lt;section class=\u0026#34;mt-8\u0026#34;\u0026gt; {{ range .Pages }} \u0026lt;article class=\u0026#34;pb-6\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;flex\u0026#34; href=\u0026#34;{{ .Params.externalUrl }}\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mr-3 text-3xl text-neutral-300\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;relative inline-block align-text-bottom\u0026#34;\u0026gt; {{ partial \u0026#34;icon.html\u0026#34; .Params.icon }} \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h3 class=\u0026#34;flex text-xl font-semibold\u0026#34;\u0026gt; {{ .Title }} \u0026lt;/h3\u0026gt; \u0026lt;p class=\u0026#34;text-sm text-neutral-400\u0026#34;\u0026gt; {{ .Description }} \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/article\u0026gt; {{ end }} \u0026lt;/section\u0026gt; {{ end }} Although this is quite a straightforward example, you can see that it steps through each of the pages in this section (ie. each project), and then outputs HTML links to each project alongside an icon. The metadata in the front matter for each project is used to determine which information is displayed.\nKeep in mind that you\u0026rsquo;ll need to ensure the relevant styles and classes are available, which may require the Tailwind CSS to be recompiled. This is discussed in more detail in the Advanced Customisation section.\nWhen making custom templates like this one, it\u0026rsquo;s always easiest to take a look at how the default Blowfish template works and then use that as a guide. Remember, the Hugo docs are a great resource to learn more about creating templates too.\n","externalUrl":null,"permalink":"/docs/content-examples/","section":"Documentation","summary":"\u003cp\u003eIf you\u0026rsquo;ve been reading the documentation in order, you should now know about all the features and configurations available in Blowfish. This page is designed to pull everything together and offer some worked examples that you might like to use in your Hugo project.\u003c/p\u003e\n\n  \n\n\n\n\u003cdiv\n  \n    class=\"flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900\"\n  \n  \u003e\n  \u003cspan\n    \n      class=\"text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center\"\n    \n    \u003e\n    \u003cspan class=\"relative block icon\"\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\u003e\u003cpath fill=\"currentColor\" d=\"M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z\"/\u003e\u003c/svg\u003e\n\u003c/span\u003e\n  \u003c/span\u003e\n\n  \u003cspan\n    \n      class=\"dark:text-neutral-300\"\n    \n    \u003e\u003cstrong\u003eTip:\u003c/strong\u003e If you\u0026rsquo;re new to Hugo, be sure to check out the \u003ca\n  href=\"https://gohugo.io/content-management/page-bundles/\"\n    target=\"_blank\"\n  \u003eofficial docs\u003c/a\u003e to learn more about the concept of page bundles and resources.\u003c/span\u003e\n\u003c/div\u003e\n\n\u003cp\u003eThe examples on this page can all be adapted to different scenarios but hopefully give you some ideas about how to approach formatting a particular content item for your individual project.\u003c/p\u003e","title":"Content Examples","type":"docs"},{"content":"","externalUrl":"https://insidemordecai.com","permalink":"/users/7ee8520d5e9eadae8557be82f46ff18d/","section":"Users","summary":"","title":"insidemordecai.com","type":"users"},{"content":"","externalUrl":"https://blastomussa.dev","permalink":"/users/4ea7eb30d575afb5183b02f31a661c42/","section":"Users","summary":"","title":"blastomussa.dev","type":"users"},{"content":"Blowfish provides a feature to group a set of articles together under a \u0026ldquo;series\u0026rdquo;. Placing an article under a series will display the rest of the series articles in each single page and provide a quick way to navigate amongst them. You can see an example of this above.\nCreate Taxonomy # The first step to enable series is to create the series taxonomy. For doing this just add the series taxonomy to your taxonomy list in the config.toml.\n[taxonomies] tag = \u0026#34;tags\u0026#34; category = \u0026#34;categories\u0026#34; author = \u0026#34;authors\u0026#34; series = \u0026#34;series\u0026#34; Mark Articles # Then you just need to mark each article using the series parameter and the series_order. The series parameter will be the id and name of the series you are placing the article into (even though the variable is an array we recommend keeping each article to a single series.). And the series_order defines the order of that article within the series. In the example below the article is number 11 in the Documentation series.\nseries: [\u0026#34;Documentation\u0026#34;] series_order: 11 Series Behavior # Marking an article as part of a series will automatically display the series module as you see in this page for example. You can choose whether that module starts opened or not using the article.seriesOpened global variable in params.toml or the front-matter parameter seriesOpened to specify an override at the article level.\n","externalUrl":null,"permalink":"/docs/series/","section":"Documentation","summary":"\u003cp\u003eBlowfish provides a feature to group a set of articles together under a \u0026ldquo;series\u0026rdquo;. Placing an article under a series will display the rest of the series articles in each single page and provide a quick way to navigate amongst them. You can see an example of this above.\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003eCreate Taxonomy \n    \u003cdiv id=\"create-taxonomy\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#create-taxonomy\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eThe first step to enable series is to create the \u003ccode\u003eseries\u003c/code\u003e taxonomy. For doing this just add the \u003ccode\u003eseries\u003c/code\u003e taxonomy to your taxonomy list in the \u003ccode\u003econfig.toml\u003c/code\u003e.\u003c/p\u003e","title":"Series","type":"docs"},{"content":"There are many ways you can make advanced changes to Blowfish. Read below to learn more about what can be customised and the best way of achieving your desired result.\nIf you need further advice, post your questions on GitHub Discussions.\nHugo project structure # Before leaping into it, first a quick note about Hugo project structure and best practices for managing your content and theme customisations.\nIn summary: Never directly edit the theme files. Only make customisations in your Hugo project\u0026rsquo;s sub-directories, not in the themes directory itself. Blowfish is built to take advantage of all the standard Hugo practices. It is designed to allow all aspects of the theme to be customised and overridden without changing any of the core theme files. This allows for a seamless upgrade experience while giving you total control over the look and feel of your website.\nIn order to achieve this, you should never manually adjust any of the theme files directly. Whether you install using Hugo modules, as a git submodule or manually include the theme in your themes/ directory, you should always leave these files intact.\nThe correct way to adjust any theme behaviour is by overriding files using Hugo\u0026rsquo;s powerful file lookup order. In summary, the lookup order ensures any files you include in your project directory will automatically take precedence over any theme files.\nFor example, if you wanted to override the main article template in Blowfish, you can simply create your own layouts/_default/single.html file and place it in the root of your project. This file will then override the single.html from the theme without ever changing the theme itself. This works for any theme files - HTML templates, partials, shortcodes, config files, data, assets, etc.\nAs long as you follow this simple practice, you will always be able to update the theme (or test different theme versions) without worrying that you will lose any of your custom changes.\nChange image optimization settings # Hugo has various builtin methods to resize, crop and optimize images.\nAs an example - in layouts/partials/article-link/card.html, you have the following code:\n{{ with .Resize \u0026#34;600x\u0026#34; }} \u0026lt;div class=\u0026#34;w-full thumbnail_card nozoom\u0026#34; style=\u0026#34;background-image:url({{ .RelPermalink }});\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; {{ end }} The default behavior of Hugo here is to resize the image to 600px keeping the ratio.\nIt is worth noting here that default image configurations such as anchor point can also be set in your site configuration as well as in the template itself.\nSee the Hugo docs on image processing for more info.\nColour schemes # Blowfish ships with a number of colour schemes out of the box. To change the basic colour scheme, you can set the colorScheme theme parameter. Refer to the Getting Started section to learn more about the built-in schemes.\nIn addition to the default schemes, you can also create your own and re-style the entire website to your liking. Schemes are created by by placing a \u0026lt;scheme-name\u0026gt;.css file in the assets/css/schemes/ folder. Once the file is created, simply refer to it by name in the theme configuration.\nNote: generating these files manually can be hard, I\u0026rsquo;ve built a nodejs terminal tool to help with that, Fugu. In a nutshell, you pass the main three hex values of your color palette and the program will output a css file that can be imported directly into Blowfish. Blowfish defines a three-colour palette that is used throughout the theme. The three colours are defined as neutral, primary and secondary variants, each containing ten shades of colour.\nDue to the way Tailwind CSS 3.0 calculates colour values with opacity, the colours specified in the scheme need to conform to a particular format by providing the red, green and blue colour values.\n:root { --color-primary-500: 139, 92, 246; } This example defines a CSS variable for the primary-500 colour with a red value of 139, green value of 92 and blue value of 246.\nUse one of the existing theme stylesheets as a template. You are free to define your own colours, but for some inspiration, check out the official Tailwind colour palette reference.\nOverriding the stylesheet # Sometimes you need to add a custom style to style your own HTML elements. Blowfish provides for this scenario by allowing you to override the default styles in your own CSS stylesheet. Simply create a custom.css file in your project\u0026rsquo;s assets/css/ folder.\nThe custom.css file will be minified by Hugo and loaded automatically after all the other theme styles which means anything in your custom file will take precedence over the defaults.\nUsing additional fonts # Blowfish allows you to easily change the font for your site. After creating a custom.css file in your project\u0026rsquo;s assets/css/ folder, place you font file inside a fonts folder within the static root folder.\n. ├── assets │ └── css │ └── custom.css ... └─── static └── fonts └─── font.ttf This makes the font available to the website. Now, the font can just import it in your custom.css and replaced wherever you see fit. The example below shows what replacing the font for the entire html would look like.\n@font-face { font-family: font; src: url(\u0026#39;/fonts/font.ttf\u0026#39;); } html { font-family: font; } Adjusting the font size # Changing the font size of your website is one example of overriding the default stylesheet. Blowfish makes this simple as it uses scaled font sizes throughout the theme which are derived from the base HTML font size. By default, Tailwind sets the default size to 12pt, but it can be changed to whatever value you prefer.\nCreate a custom.css file using the instructions above and add the following CSS declaration:\n/* Increase the default font size */ html { font-size: 13pt; } Simply by changing this one value, all the font sizes on your website will be adjusted to match this new size. Therefore, to increase the overall font sizes used, make the value greater than 12pt. Similarly, to decrease the font sizes, make the value less than 12pt.\nBuilding the theme CSS from source # If you\u0026rsquo;d like to make a major change, you can take advantage of Tailwind CSS\u0026rsquo;s JIT compiler and rebuild the entire theme CSS from scratch. This is useful if you want to adjust the Tailwind configuration or add extra Tailwind classes to the main stylesheet.\nNote: Building the theme manually is intended for advanced users. Let\u0026rsquo;s step through how building the Tailwind CSS works.\nTailwind configuration # In order to generate a CSS file that only contains the Tailwind classes that are actually being used the JIT compiler needs to scan through all the HTML templates and Markdown content files to check which styles are present in the markup. The compiler does this by looking at the tailwind.config.js file which is included in the root of the theme directory:\n// themes/blowfish/tailwind.config.js module.exports = { content: [ \u0026#34;./layouts/**/*.html\u0026#34;, \u0026#34;./content/**/*.{html,md}\u0026#34;, \u0026#34;./themes/blowfish/layouts/**/*.html\u0026#34;, \u0026#34;./themes/blowfish/content/**/*.{html,md}\u0026#34;, ], // and more... }; This default configuration has been included with these content paths so that you can easily generate your own CSS file without needing to modify it, provided you follow a particular project structure. Namely, you have to include Blowfish in your project as a subdirectory at themes/blowfish/. This means you cannot easily use Hugo Modules to install the theme and you must go down either the git submodule (recommended) or manual install routes. The Installation docs explain how to install the theme using either of these methods.\nProject structure # In order to take advantage of the default configuration, your project should look something like this\u0026hellip;\n. ├── assets │ └── css │ └── compiled │ └── main.css # this is the file we will generate ├── config # site config │ └── _default ├── content # site content │ ├── _index.md │ ├── projects │ │ └── _index.md │ └── blog │ └── _index.md ├── layouts # custom layouts for your site │ ├── partials │ │ └── extend-article-link/simple.html │ ├── projects │ │ └── list.html │ └── shortcodes │ └── disclaimer.html └── themes └── blowfish # git submodule or manual theme install This example structure adds a new projects content type with its own custom layout along with a custom shortcode and extended partial. Provided the project follows this structure, all that\u0026rsquo;s required is to recompile the main.css file.\nInstall dependencies # In order for this to work you\u0026rsquo;ll need to change into the themes/blowfish/ directory and install the project dependencies. You\u0026rsquo;ll need npm on your local machine for this step.\ncd themes/blowfish npm install Run the Tailwind compiler # With the dependencies installed all that\u0026rsquo;s left is to use Tailwind CLI to invoke the JIT compiler. Navigate back to the root of your Hugo project and issue the following command:\ncd ../.. ./themes/blowfish/node_modules/@tailwindcss/cli/dist/index.mjs -c ./themes/blowfish/tailwind.config.js -i ./themes/blowfish/assets/css/main.css -o ./assets/css/compiled/main.css --jit It\u0026rsquo;s a bit of an ugly command due to the paths involved but essentially you\u0026rsquo;re calling Tailwind CLI and passing it the location of the Tailwind config file (the one we looked at above), where to find the theme\u0026rsquo;s main.css file and then where you want the compiled CSS file to be placed (it\u0026rsquo;s going into the assets/css/compiled/ folder of your Hugo project).\nThe config file will automatically inspect all the content and layouts in your project as well as all those in the theme and build a new CSS file that contains all the CSS required for your website. Due to the way Hugo handles file hierarchy, this file in your project will now automatically override the one that comes with the theme.\nEach time you make a change to your layouts and need new Tailwind CSS styles, you can simply re-run the command and generate the new CSS file. You can also add -w to the end of the command to run the JIT compiler in watch mode.\nMake a build script # To fully complete this solution, you can simplify this whole process by adding aliases for these commands, or do what I do and add a package.json to the root of your project which contains the necessary scripts\u0026hellip;\n// package.json { \u0026#34;name\u0026#34;: \u0026#34;my-website\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;server\u0026#34;: \u0026#34;hugo server -b http://localhost -p 8000\u0026#34;, \u0026#34;dev\u0026#34;: \u0026#34;NODE_ENV=development ./themes/blowfish/node_modules/@tailwindcss/cli/dist/index.mjs -c ./themes/blowfish/tailwind.config.js -i ./themes/blowfish/assets/css/main.css -o ./assets/css/compiled/main.css --jit -w\u0026#34;, \u0026#34;build\u0026#34;: \u0026#34;NODE_ENV=production ./themes/blowfish/node_modules/@tailwindcss/cli/dist/index.mjs -c ./themes/blowfish/tailwind.config.js -i ./themes/blowfish/assets/css/main.css -o ./assets/css/compiled/main.css --jit\u0026#34; }, // and more... } Now when you want to work on designing your site, you can invoke npm run dev and the compiler will run in watch mode. When you\u0026rsquo;re ready to deploy, run npm run build and you\u0026rsquo;ll get a clean Tailwind CSS build.\n🙋‍♀️ If you need help, feel free to ask a question on GitHub Discussions.\n","externalUrl":null,"permalink":"/docs/advanced-customisation/","section":"Documentation","summary":"\u003cp\u003eThere are many ways you can make advanced changes to Blowfish. Read below to learn more about what can be customised and the best way of achieving your desired result.\u003c/p\u003e\n\u003cp\u003eIf you need further advice, post your questions on \u003ca\n  href=\"https://github.com/nunocoracao/blowfish/discussions\"\n    target=\"_blank\"\n  \u003eGitHub Discussions\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003eHugo project structure \n    \u003cdiv id=\"hugo-project-structure\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#hugo-project-structure\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eBefore leaping into it, first a quick note about \u003ca\n  href=\"https://gohugo.io/getting-started/directory-structure/\"\n    target=\"_blank\"\n  \u003eHugo project structure\u003c/a\u003e and best practices for managing your content and theme customisations.\u003c/p\u003e","title":"Advanced Customisation","type":"docs"},{"content":"","externalUrl":"https://cdell.io","permalink":"/users/db20512c1ee8daab423ea18268cb5910/","section":"Users","summary":"","title":"cdell.io","type":"users"},{"content":"There are many ways to deploy your Hugo website built with Blowfish. The theme is designed to be flexible in almost any deployment scenario.\nBlowfish is built using relative URLs throughout the theme. This enables sites to easily be deployed to sub-folders and hosts like GitHub Pages. There\u0026rsquo;s usually no special configuration required for this to work as long as the baseURL parameter has been configured in the config.toml file.\nThe official Hugo Hosting and Deployment docs are the best place to learn how to deploy your site. The sections below contain some specific theme configuration details that can help you deploy smoothly with certain providers.\nChoose your provider:\nGitHub Pages Netlify Render Cloudflare Pages Shared hosting, VPS or private web server GitHub Pages # GitHub allows hosting on GitHub Pages using Actions. To enable this functionality, enable Pages on your repo and create a new Actions workflow to build and deploy your site.\nThe file needs to be in YAML format, placed within the .github/workflows/ directory of your GitHub repository and named with a .yml extension.\nImportant: Ensure you set the correct branch name under branches and in the deploy step if parameter to the source branch used in your project. # .github/workflows/gh-pages.yml name: GitHub Pages on: push: branches: - main jobs: build-deploy: runs-on: ubuntu-24.04 concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - name: Checkout uses: actions/checkout@v3 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#34;latest\u0026#34; - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: ${{ github.ref == \u0026#39;refs/heads/main\u0026#39; }} with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_branch: gh-pages publish_dir: ./public Push the config file to GitHub and the action should automatically run. It may fail the first time and you\u0026rsquo;ll need to visit the Settings \u0026gt; Pages section of your GitHub repo to check the source is correct. It should be set to use the gh-pages branch.\nOnce the settings are configured, re-run the action and the site should build and deploy correctly. You can consult the actions log to check everything deployed successfully.\nNetlify # To deploy to Netlify, create a new continuous deployment site and link it to your source code. The build settings can be left blank in the Netlify UI. You will only need to configure the domain you\u0026rsquo;ll be using.\nThen in the root of your site repository, create a netlify.toml file:\n# netlify.toml [build] command = \u0026#34;hugo mod get -u \u0026amp;\u0026amp; hugo --gc --minify -b $URL\u0026#34; publish = \u0026#34;public\u0026#34; [build.environment] NODE_ENV = \u0026#34;production\u0026#34; GO_VERSION = \u0026#34;1.16\u0026#34; TZ = \u0026#34;UTC\u0026#34; # Set to preferred timezone [context.production.environment] HUGO_VERSION = \u0026#34;0.104.1\u0026#34; HUGO_ENV = \u0026#34;production\u0026#34; [context.deploy-preview.environment] HUGO_VERSION = \u0026#34;0.104.1\u0026#34; This configuration assumes you are deploying Blowfish as a Hugo module. If you have installed the theme using another method, change the build command to simply hugo --gc --minify -b $URL.\nWhen you push the config file to your repo, Netlify should automatically deploy your site. You can check the deploy logs in the Netlify UI to check for any errors.\nRender # Deploying to Render is very straightforward and all configuration is via the Render UI.\nCreate a new Static Site and link it to your project\u0026rsquo;s code repository. Then simply configure the build command to be hugo --gc --minify and publish directory to be public.\nThe site will automatically build and deploy whenever you push a change to your repo.\nCloudflare Pages # Cloudflare offers the Pages service that can host Hugo blogs. It builds the site from a git repository and then hosts it on Cloudflare\u0026rsquo;s CDN. Follow their Hugo deployment guide to get started.\nThe Rocket Loader™ feature offered by Cloudflare tries to speed up rendering of web pages with JavaScript, but it breaks the appearance switcher in the theme. It can also cause an annoying light/dark screen flash when browsing your site due to scripts loading in the wrong order.\nThis problem can be fixed by disabling it:\nGo to the Cloudflare dashboard Click on your domain name in the list Click Optimization in the Speed section Scroll down to Rocket Loader™ and disable it Hugo sites built with Blowfish still load very quickly, even with this feature disabled.\nShared hosting, VPS or private web server # Using traditional web hosting, or deploying to your own web server, is as simple as building your Hugo site and transferring the files to your host.\nMake sure that the baseURL parameter in config.toml is set to the full URL to the root of your website (including any sub domains or sub-folders).\nThen build your site using hugo and copy the contents of the output directory to the root of your web server and you will be ready to go. By default, the output directory is named public.\nIf you need a hosting provider, check out Vultr or DigitalOcean. Signing up using these affiliate links will give you up to $100 in free credit so you can try the service.\n","externalUrl":null,"permalink":"/docs/hosting-deployment/","section":"Documentation","summary":"\u003cp\u003eThere are many ways to deploy your Hugo website built with Blowfish. The theme is designed to be flexible in almost any deployment scenario.\u003c/p\u003e\n\u003cp\u003eBlowfish is built using relative URLs throughout the theme. This enables sites to easily be deployed to sub-folders and hosts like GitHub Pages. There\u0026rsquo;s usually no special configuration required for this to work as long as the \u003ccode\u003ebaseURL\u003c/code\u003e parameter has been configured in the \u003ccode\u003econfig.toml\u003c/code\u003e file.\u003c/p\u003e","title":"Hosting \u0026 Deployment","type":"docs"},{"content":"","externalUrl":"https://jam.dsg.li","permalink":"/users/ee5d5eca13c3742f7a454a52424f9d73/","section":"Users","summary":"","title":"jam.dsg.li","type":"users"},{"content":"In order to be able to support dynamic data across your website we\u0026rsquo;ve added the support to integrate Firebase. This will allow you to use the views feature across lists and posts.\nGo to Firebase website and create an account for free Create a new project Select analytics location Setup firebase in Blowfish by getting the variables for your project and setting them inside params.toml file. More details can be found in this page. You can find an example of the file Firebase will provide below, notice the parameters within the FirebaseConfig object. // Import the functions you need from the SDKs you need import { initializeApp } from \u0026#34;firebase/app\u0026#34;; import { getAnalytics } from \u0026#34;firebase/analytics\u0026#34;; // TODO: Add SDKs for Firebase products that you want to use // https://firebase.google.com/docs/web/setup#available-libraries // Your web app\u0026#39;s Firebase configuration // For Firebase JS SDK v7.20.0 and later, measurementId is optional const firebaseConfig = { apiKey: \u0026#34;AIzaSyB5tqlqDky77Vb4Tc4apiHV4hRZI18KGiY\u0026#34;, authDomain: \u0026#34;blowfish-21fff.firebaseapp.com\u0026#34;, projectId: \u0026#34;blowfish-21fff\u0026#34;, storageBucket: \u0026#34;blowfish-21fff.appspot.com\u0026#34;, messagingSenderId: \u0026#34;60108104191\u0026#34;, appId: \u0026#34;1:60108104191:web:039842ebe1370698b487ca\u0026#34;, measurementId: \u0026#34;G-PEDMYR1V0K\u0026#34; }; // Initialize Firebase const app = initializeApp(firebaseConfig); const analytics = getAnalytics(app); Setup Firestore - Select Build and open Firestore. Create a new database and choose to start in production mode. Select server location and wait. Once that is started you need to configure the rules. Just copy and paste the file below and press publish. rules_version = \u0026#39;2\u0026#39;; service cloud.firestore { match /databases/{database}/documents { match /{document=**} { allow read, write: if request.auth != null; } } } Enable anonymous authorization - Select Build and open Authentication. Select get started, click Anonymous and turn it on, save. Enjoy - you can now activate views and likes on Blowfish for all (or specific) articles. ","externalUrl":null,"permalink":"/docs/firebase-views/","section":"Documentation","summary":"\u003cp\u003eIn order to be able to support dynamic data across your website we\u0026rsquo;ve added the support to integrate Firebase. This will allow you to use the views feature across lists and posts.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eGo to \u003ca target=\"_blank\" href=\"https://firebase.com\"\u003eFirebase website\u003c/a\u003e and create an account for free\u003c/li\u003e\n\u003cli\u003eCreate a new project\u003c/li\u003e\n\u003cli\u003eSelect analytics location\u003c/li\u003e\n\u003cli\u003eSetup firebase in Blowfish by getting the variables for your project and setting them inside \u003ccode\u003eparams.toml\u003c/code\u003e file. More details can be found in \u003ca target=\"_blank\" href=\"https://muhammadfajarb.github.io/docs/configuration/#theme-parameters\"\u003ethis page\u003c/a\u003e. You can find an example of the file Firebase will provide below, notice the parameters within the FirebaseConfig object.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Import the functions you need from the SDKs you need\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003einitializeApp\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;firebase/app\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003egetAnalytics\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;firebase/analytics\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// TODO: Add SDKs for Firebase products that you want to use\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// https://firebase.google.com/docs/web/setup#available-libraries\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Your web app\u0026#39;s Firebase configuration\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efirebaseConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eapiKey\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;AIzaSyB5tqlqDky77Vb4Tc4apiHV4hRZI18KGiY\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eauthDomain\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;blowfish-21fff.firebaseapp.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eprojectId\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;blowfish-21fff\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003estorageBucket\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;blowfish-21fff.appspot.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003emessagingSenderId\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;60108104191\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eappId\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;1:60108104191:web:039842ebe1370698b487ca\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003emeasurementId\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;G-PEDMYR1V0K\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Initialize Firebase\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitializeApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efirebaseConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eanalytics\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003egetAnalytics\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"5\"\u003e\n\u003cli\u003eSetup Firestore - Select Build and open Firestore. Create a new database and choose to start in production mode. Select server location and wait. Once that is started you need to configure the rules. Just copy and paste the file below and press publish.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003erules_version = \u0026#39;2\u0026#39;;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eservice cloud.firestore {\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  match /databases/{database}/documents {\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    match /{document=**} {\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      allow read, write: if request.auth != null;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  }\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"6\"\u003e\n\u003cli\u003eEnable anonymous authorization - Select Build and open Authentication. Select get started, click Anonymous and turn it on, save.\u003c/li\u003e\n\u003cli\u003eEnjoy - you can now activate views and likes on Blowfish for all (or specific) articles.\u003c/li\u003e\n\u003c/ol\u003e","title":"Firebase: Views \u0026 Likes","type":"docs"},{"content":"","externalUrl":"https://priyakdey.com","permalink":"/users/72d71e304faaa40b3d547d5357edc450/","section":"Users","summary":"","title":"priyakdey.com","type":"users"},{"content":"","externalUrl":"https://sdehm.dev","permalink":"/users/1a882ded73613252bb07c2c13f40b9e3/","section":"Users","summary":"","title":"sdehm.dev","type":"users"},{"content":"","externalUrl":"https://dizzytech.de","permalink":"/users/039ca94b0aeeb9ab4c95226615bfb840/","section":"Users","summary":"","title":"dizzytech.de","type":"users"},{"content":"","externalUrl":"https://alejandro-ao.com/","permalink":"/users/620af4c12a7ee8932fadb45ae52bba7e/","section":"Users","summary":"","title":"alejandro-ao.com","type":"users"},{"content":"","externalUrl":"https://adir1.com/","permalink":"/users/64faf41f22317a170125dd7b2cd642e2/","section":"Users","summary":"","title":"adir1.com","type":"users"},{"content":"","externalUrl":"https://blog.muffn.io/","permalink":"/users/e07582d573aa187c3c15bb042872ca4a/","section":"Users","summary":"","title":"blog.muffn.io","type":"users"},{"content":"","externalUrl":"https://nick.bouwhuis.net","permalink":"/users/fd12be5b9c01f6b6089b8b1cbff1350d/","section":"Users","summary":"","title":"nick.bouwhuis.net","type":"users"},{"content":"","externalUrl":"https://vividscc.com/","permalink":"/users/3bfa5ccb77cf79199527df4c0259d0dc/","section":"Users","summary":"","title":"vividscc.com","type":"users"},{"content":"","externalUrl":"https://mariuskimmina.com/","permalink":"/users/9327a7a2a271822354f23963b0557368/","section":"Users","summary":"","title":"mariuskimmina.com","type":"users"},{"content":"","externalUrl":"https://technicat.com/","permalink":"/users/6ed0dcb17b6e24c166f7da0bdfb0c1f5/","section":"Users","summary":"","title":"technicat.com","type":"users"},{"content":"","externalUrl":"https://fugugames.com/","permalink":"/users/e2ca3d6494c32151235beabe7567b23d/","section":"Users","summary":"","title":"fugugames.com","type":"users"},{"content":"","externalUrl":"https://hyperbowl3d.com/","permalink":"/users/129162dc71b9d40ee7948e51910d415a/","section":"Users","summary":"","title":"hyperbowl3d.com","type":"users"},{"content":"","externalUrl":"https://talkdimsum.com/","permalink":"/users/80d4420e686d5a055bab647fa03d281b/","section":"Users","summary":"","title":"talkdimsum.com","type":"users"},{"content":"","externalUrl":"https://alanctanner.com/","permalink":"/users/8168c3eeb157c9c9b1ca287393393f9c/","section":"Users","summary":"","title":"alanctanner.com","type":"users"},{"content":"","externalUrl":"https://rdgo.dev/","permalink":"/users/98f15180691d43fbfcbaf685e1b9ab06/","section":"Users","summary":"","title":"rdgo.dev","type":"users"},{"content":"","externalUrl":"https://clemsau.com/","permalink":"/users/66a61706d45b77b559869cd1247fe8fc/","section":"Users","summary":"","title":"clemsau.com","type":"users"},{"content":"","externalUrl":"https://weaxsey.org/","permalink":"/users/5801e67070cd59e592c82693a1bda773/","section":"Users","summary":"","title":"weaxsey.org","type":"users"},{"content":"","externalUrl":"https://nikarashihatsu.github.io/","permalink":"/users/c7116358255c4f5ccb306f7012306e22/","section":"Users","summary":"","title":"nikarashihatsu.github.io","type":"users"},{"content":"","externalUrl":"https://www.halcyonstraits.com/","permalink":"/users/d8ebb1396d8c7d2233b33a6b3ca0adc4/","section":"Users","summary":"","title":"halcyonstraits.com","type":"users"},{"content":"","externalUrl":"https://www.50-nuances-octets.fr/","permalink":"/users/24577d47b9474b6bc72eba9a6009dba4/","section":"Users","summary":"","title":"50-nuances-octets.fr","type":"users"},{"content":"","externalUrl":"https://marupanda.art/marucomics/","permalink":"/users/6e0c28f8b70015dd35f332d927960d06/","section":"Users","summary":"","title":"marupanda.art/marucomics","type":"users"},{"content":"","externalUrl":"https://m3upt.com","permalink":"/users/4d4fb24dca11a144122fa0bb831d9d03/","section":"Users","summary":"","title":"m3upt.com","type":"users"},{"content":"","externalUrl":"https://pacochan.net","permalink":"/users/c8eb3ba4d0e565e041ead9aabe6fc770/","section":"Users","summary":"","title":"pacochan.net","type":"users"},{"content":"","externalUrl":"https://vkmki001.github.io/","permalink":"/users/069e8f01e7ef48830ebea5239e2189b4/","section":"Users","summary":"","title":"vkmki001.github.io","type":"users"},{"content":"","externalUrl":"https://bbagwang.com","permalink":"/users/43d57d92cc54037519270a0cb07dbb83/","section":"Users","summary":"","title":"bbagwang.com","type":"users"},{"content":"","externalUrl":"https://jamiemoxon.tech","permalink":"/users/d9e559aaa0c3488012725cc4699ff9c4/","section":"Users","summary":"","title":"jamiemoxon.tech","type":"users"},{"content":"","externalUrl":"https://theindiecoder.cloud","permalink":"/users/9eed597b03512bc7b7b4b3cf81814a37/","section":"Users","summary":"","title":"theindiecoder.cloud","type":"users"},{"content":"","externalUrl":"https://gma.name","permalink":"/users/48ff442c7de299911eab10b72b02cc84/","section":"Users","summary":"","title":"gma.name","type":"users"},{"content":"","externalUrl":"https://mayer.life","permalink":"/users/1b3c507d9cd618565898e6d099c0427d/","section":"Users","summary":"","title":"mayer.life","type":"users"},{"content":"","externalUrl":"https://scottmckendry.tech","permalink":"/users/d6d2aa4cd9e351e749136df67a27c136/","section":"Users","summary":"","title":"scottmckendry.tech","type":"users"},{"content":"","externalUrl":"https://adilhyz.github.io","permalink":"/users/9901f5943260b32ac3002c1002408f19/","section":"Users","summary":"","title":"adilhyz.github.io","type":"users"},{"content":"","externalUrl":"https://ohdmire.github.io","permalink":"/users/fec44f5dd2be29e37c305696d018f99f/","section":"Users","summary":"","title":"ohdmire.github.io","type":"users"},{"content":"","externalUrl":"https://ricklan.photography","permalink":"/users/954584ca9b811d77ac600cf7c426be45/","section":"Users","summary":"","title":"ricklan.photography","type":"users"},{"content":"","externalUrl":"https://deepumohan.com/tech/","permalink":"/users/8032d46bf9c96ae4b59c419032c7ad89/","section":"Users","summary":"","title":"deepumohan.com/tech","type":"users"},{"content":"","externalUrl":"https://joush007.github.io","permalink":"/users/b66472425d53d4e270e85ba4f160e7a1/","section":"Users","summary":"","title":"joush007.github.io","type":"users"},{"content":"","externalUrl":"https://rejowski.xyz/","permalink":"/users/8fc3ba43309eb4210c5da59847dab5ac/","section":"Users","summary":"","title":"rejowski.xyz","type":"users"},{"content":"","externalUrl":"https://blog.stonegarden.dev/","permalink":"/users/3ec093539269bc4ce9498fe9c36a2b7d/","section":"Users","summary":"","title":"blog.stonegarden.dev","type":"users"},{"content":"","externalUrl":"https://renaud.warnotte.be","permalink":"/users/4f0c88168fb7a348b4393a56ede2e799/","section":"Users","summary":"","title":"renaud.warnotte.be","type":"users"},{"content":"","externalUrl":"https://boringtech.net/","permalink":"/users/82b432ad2bfc873ec725001f0b3ac495/","section":"Users","summary":"","title":"BoringTech.net","type":"users"},{"content":"","externalUrl":"https://technicaldc.github.io/","permalink":"/users/6a603c5d465ecb2422ed7a96fd55c99c/","section":"Users","summary":"","title":"technicaldc.github.io","type":"users"},{"content":"","externalUrl":"https://alxhslm.github.io/","permalink":"/users/427cec3309be77abe6f19b006b2a3dc0/","section":"Users","summary":"","title":"alxhslm.github.io","type":"users"},{"content":"","externalUrl":"https://www.the-maze.net/","permalink":"/users/e518dc969af1ea65a3d0b55630705047/","section":"Users","summary":"","title":"the-maze.net","type":"users"},{"content":"","externalUrl":"https://www.dxpetti.com/","permalink":"/users/0327ac1993f378aa2fc5bbb8a840c9cb/","section":"Users","summary":"","title":"DXPetti.com","type":"users"},{"content":"","externalUrl":"https://asterisk.lol","permalink":"/users/6e57b74d392f64f3698aee7046cc2606/","section":"Users","summary":"","title":"asterisk.lol","type":"users"},{"content":"","externalUrl":"https://ekwska.com","permalink":"/users/1314bf3d7ce70ad90f1fc7666032e147/","section":"Users","summary":"","title":"ekwska.com","type":"users"},{"content":"","externalUrl":"https://todreamr.github.io/","permalink":"/users/1f88d7c1e8e83b761f84b38daaa8016d/","section":"Users","summary":"","title":"todreamr.github.io","type":"users"},{"content":"","externalUrl":"https://aakashnand.com/","permalink":"/users/a322d57671bf49fe0f2539096f9ed57f/","section":"Users","summary":"","title":"aakashnand.com","type":"users"},{"content":"","externalUrl":"https://innerknowing.xyz/en/","permalink":"/users/1a328ae325c5da884a5b15a1b4d4a446/","section":"Users","summary":"","title":"innerknowing","type":"users"},{"content":"","externalUrl":"https://karlukle.site","permalink":"/users/7d028665dc1cf54485e6e82a7083ce69/","section":"Users","summary":"","title":"karlukle.site","type":"users"},{"content":"","externalUrl":"http://www.adammadej.com/","permalink":"/users/15cf92fba36f0319bd4b176da554fdb9/","section":"Users","summary":"","title":"Adam Madej - Gameplay Animator","type":"users"},{"content":"","externalUrl":"http://www.eallion.com/","permalink":"/users/1f94add7b0ba58983ff507632b822401/","section":"Users","summary":"","title":"eallion.com","type":"users"},{"content":"","externalUrl":"https://synapticsugar.games","permalink":"/users/c0d9928ff3857960ec230178bdec1b8d/","section":"Users","summary":"","title":"Synaptic Sugar","type":"users"},{"content":"","externalUrl":"https://www.michaeldorner.de","permalink":"/users/d965f981aa39336ef7be5efac83c96b2/","section":"Users","summary":"","title":"michaeldorner.de","type":"users"},{"content":"","externalUrl":"http://www.ignaciomconde.com/","permalink":"/users/4de384e83ae8af3834cad28f6dfc6966/","section":"Users","summary":"","title":"Ignacio Conde","type":"users"},{"content":"","externalUrl":"https://memv.ennbee.uk/","permalink":"/users/9f984d61b6086212e76291d2698d0498/","section":"Users","summary":"","title":"MEM v ENNBEE","type":"users"},{"content":"","externalUrl":"https://joshblais.com/","permalink":"/users/807a03786a63504a144bb3b947a2969c/","section":"Users","summary":"","title":"Joshua Blais","type":"users"},{"content":"","externalUrl":"https://www.beautyformulation.com/","permalink":"/users/04bb53c19a5a817c1a0630b65260909d/","section":"Users","summary":"","title":"Beauty Formulation","type":"users"},{"content":"","externalUrl":"https://blog.wtcx.dev/","permalink":"/users/4b8c5f7ee72baf8411dae867f9206b63/","section":"Users","summary":"","title":"Middle of Nowhere","type":"users"},{"content":"","externalUrl":"https://blog.ummit.dev/","permalink":"/users/c506ded8078df151fc8ce943e7ac1c8a/","section":"Users","summary":"","title":"UmmIt - Blog","type":"users"},{"content":"","externalUrl":"https://nveshaan.github.io/","permalink":"/users/02c452502ee9a03866c720c14bf86f9e/","section":"Users","summary":"","title":"nveshaan","type":"users"},{"content":"","externalUrl":"https://micheledinelli.github.io","permalink":"/users/27cc5a091bef86a9b5dcfa2c035308ed/","section":"Users","summary":"","title":"micheledinelli.github.io","type":"users"},{"content":"","externalUrl":"https://kumacat.pages.dev","permalink":"/users/d52c3523ad809eb1d9ddbcbe32e92661/","section":"Users","summary":"","title":"kumacat.pages.dev","type":"users"},{"content":"","externalUrl":"https://andrealucchini.com","permalink":"/users/bdd6b2db27fb40b3fa79a37659b2f285/","section":"Users","summary":"","title":"andrealucchini.com","type":"users"},{"content":"","externalUrl":"https://luizglomyer.github.io/","permalink":"/users/af89464ac25ab9445658a3541e623778/","section":"Users","summary":"","title":"glomyer.dev","type":"users"},{"content":"","externalUrl":"https://utrodus.com","permalink":"/users/c562b0e606584dd96159faf763291fe1/","section":"Users","summary":"","title":"utrodus.com","type":"users"},{"content":"","externalUrl":"https://lazarusoverlook.com","permalink":"/users/033c87b7e950b82ea500c552c9523367/","section":"Users","summary":"","title":"lazarusoverlook.com","type":"users"},{"content":"","externalUrl":"https://p3rception.github.io/","permalink":"/users/7596a225b244e0859da338621e680481/","section":"Users","summary":"","title":"p3rception.github.io","type":"users"},{"content":"","externalUrl":"https://www.emse.education","permalink":"/users/54b73306674ec7e6778b54a0a8b18b36/","section":"Users","summary":"","title":"Handbook on Teaching Empirical Software Engineering: Online Materials","type":"users"},{"content":"","externalUrl":"https://blog.lofibean.cc","permalink":"/users/ad989702a19d1fd8add147d6771c6c02/","section":"Users","summary":"","title":"blog.lofibean.cc","type":"users"},{"content":"","externalUrl":"https://merox.dev","permalink":"/users/080a851b486ff5be4201f6fbe1f9616d/","section":"Users","summary":"","title":"merox.dev","type":"users"},{"content":"","externalUrl":"https://acamize.com/","permalink":"/users/e263f9bb6dcec27003a8f5f947ba5abb/","section":"Users","summary":"","title":"Academy Customize","type":"users"},{"content":"","externalUrl":"https://mrtruongvu.com","permalink":"/users/837b47128639b5359ade845eae461c3a/","section":"Users","summary":"","title":"mrtruongvu.com","type":"users"},{"content":"","externalUrl":"https://stepaniah.me","permalink":"/users/1b3da762734b4fb503e49822ed506dbb/","section":"Users","summary":"","title":"StepaniaH","type":"users"},{"content":"","externalUrl":"https://laterre.dev/","permalink":"/users/447e2f0f6f439b915e0b57f93e49b7d6/","section":"Users","summary":"","title":"Laterre Dev","type":"users"},{"content":"","externalUrl":"https://willhack.top/","permalink":"/users/8a994f70010fa98dac2838ddd246224e/","section":"Users","summary":"","title":"WillHack - service for reality hackers","type":"users"},{"content":"","externalUrl":"https://lazyproductreviews.com/","permalink":"/users/3fa4eb553f5d984050d2ee4954960034/","section":"Users","summary":"","title":"Lazy Product Reviews","type":"users"},{"content":"","externalUrl":"https://zzzhome.cc/","permalink":"/users/46ea5d4b3698fa18fc0b79faa3d89bef/","section":"Users","summary":"","title":"zzzhome","type":"users"},{"content":"","externalUrl":"https://bootlegcoal.com","permalink":"/users/915a897f2ea3ba018728d7dce3540b1b/","section":"Users","summary":"","title":"Bootleg Coal Rebellion","type":"users"},{"content":"","externalUrl":"https://ctry.tech/","permalink":"/users/0805e986c2f7265e3bbbfc7bc647ed92/","section":"Users","summary":"","title":"Chill-Try","type":"users"},{"content":"","externalUrl":"https://hudsonmcnamara.com","permalink":"/users/2d29fadfaf8ddfaee0b69b563bae8d2d/","section":"Users","summary":"","title":"Hudson McNamara","type":"users"},{"content":"","externalUrl":"https://www.wegumweg.de","permalink":"/users/eb23ebd26738c98db323eff207dc7c0e/","section":"Users","summary":"","title":"Weg um Weg","type":"users"},{"content":"","externalUrl":"https://panoskorovesis.github.io/","permalink":"/users/706590b7d6a58b77f0eadb22b1dc6cd5/","section":"Users","summary":"","title":"The Space 🌍","type":"users"},{"content":"","externalUrl":"https://adriantunez.cloud","permalink":"/users/6057b72b4986ae88640d46262a4be0a0/","section":"Users","summary":"","title":"Adri Antunez's Cloud Site","type":"users"},{"content":"","externalUrl":"https://irusukan.com","permalink":"/users/e3f304eacd2f79e31f294cae0ff8162e/","section":"Users","summary":"","title":"irusukan","type":"users"},{"content":"","externalUrl":"https://feec-seminar-comp-eng.github.io/","permalink":"/users/405727a6fae1350173ef8915b4c9eb7d/","section":"Users","summary":"","title":"FEEC/UNICAMP IA382 - Seminar in Computer Engineering","type":"users"},{"content":"","externalUrl":"https://blog.francescopapini.com","permalink":"/users/a615163aad4c6bb5746a697a9450d563/","section":"Users","summary":"","title":"blog.francescopapini.com","type":"users"},{"content":"","externalUrl":"https://heykyo.com","permalink":"/users/9d162f4046cb83c367d8d8ab57240711/","section":"Users","summary":"","title":"Kyo's Garden","type":"users"},{"content":"","externalUrl":"https://abantikabhuti.github.io","permalink":"/users/7c98d8b7ba531e032abcd675d4f49c17/","section":"Users","summary":"","title":"abantikabhuti.github.io","type":"users"},{"content":"","externalUrl":"https://yag0x1.github.io","permalink":"/users/e4f1c9a4c352ea63707824576d889c8f/","section":"Users","summary":"","title":"yag0x1.github.io","type":"users"},{"content":"","externalUrl":"https://caytejohn.xyz","permalink":"/users/bfe9e12b443e96f40b05b584166636f5/","section":"Users","summary":"","title":"caytejohn.xyz","type":"users"},{"content":" Halaman ini berisi ide dan informasi yang dikemas dalam bentuk blog sebagai referensi dan bahan inspirasi untuk pembaca.\n","date":"4 August 2025","externalUrl":null,"permalink":"/posts/","section":"Blog","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n    \u003cdiv id=\"typeit-d54ced68000ff1bc32369d994797a48a\"\u003e\u003c/div\u003e\n\u003cscript\u003e\n    document.addEventListener(\"DOMContentLoaded\", function () {\n      new TypeIt(\"#typeit-d54ced68000ff1bc32369d994797a48a\", {\n        strings: [\"\",\"    Selamat datang di halaman Blog. Jelajahi dan eksplor informasi tak ternilai.\",\"  \"],\n        speed:  30 ,\n        lifeLike:  false ,\n        startDelay:  0 ,\n        breakLines:  false ,\n        waitUntilVisible:  true ,\n        loop:  true \n      }).go();\n    });\n\u003c/script\u003e\n\n\u003c/div\u003e\n\n\u003cp\u003eHalaman ini berisi ide dan informasi yang dikemas dalam bentuk blog sebagai referensi dan bahan inspirasi untuk pembaca.\u003c/p\u003e\n\u003chr\u003e","title":"Blog","type":"posts"},{"content":"","date":"4 August 2025","externalUrl":null,"permalink":"/categories/blowfish/","section":"Categories","summary":"","title":"Blowfish","type":"categories"},{"content":"","date":"4 August 2025","externalUrl":null,"permalink":"/tags/blowfish/","section":"Tags","summary":"","title":"Blowfish","type":"tags"},{"content":" Just one year ago, I created Blowfish, a Hugo theme crafted to build my unique vision for my personal homepage. I also decided to make it an open-source project. Fast-forward to today, and Blowfish has transformed into a thriving open-source project with over 600 stars on GitHub and a user base of hundreds. In this tutorial, I’ll show you how to get started and have your website running in a couple of minutes.\nmuhammadfajarb/muhammadfajarb.github.io HTML 1 0 GitLab.org / GitLab GitLab is an open source end-to-end software development platform with built-in version control, issue tracking, code review, CI/CD, and more. Self-host GitLab on your own servers, in a container, or on a cloud provider. 5692 11335 TL;DR # The goal of this guide is to walk a newcomer to Hugo on how to install, manage, and publish your own website. The final version of the code is available in this repo - for those that would like to jump to the end.\nThe visual style is just one of the many possibilities available in Blowfish. Users are encouraged to check the documentation page and learn how to customize the theme to their needs. Additionally, there are already great examples of the theme from other users available for inspiration. Blowfish also offers several extra features in the form of shortcodes available out of the box in the theme - check them out here and get inspired.\n$$ \\int_0^\\infty e^{-x^2} \\, dx = \\frac{\\sqrt{\\pi}}{2} $$ Setup your environment # Let’s begin by installing all the tools you need. This guide will cover the steps for Mac so these instructions might not apply to your hardware and OS. If you are on Windows or Linux, please consult the guides on how to install Hugo, and GitHub’s CLI for your OS.\nAnyway, if you are using MacOS let’s install brew - a package manager for mac - as that will help installing and managing the other tools.\n/bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u0026#34; Once brew is installed let’s install Git, Hugo and GitHub’s CLI.\nbrew install git brew install hugo brew install gh Create a folder for your code and open a terminal session into it (I chose blowfish-tutorial in the commands below, feel free to call the folder whatever you want).\nmkdir blowfish-tutorial cd blowfish-tutorial Once inside the folder, the next step is to initialize your local git repo.\ngit init -b main Now, let’s create and sync the local repo to a GitHub repo so that your code is stored remotely.\ngh auth login gh repo create git push --set-upstream origin main Check the image below for the options I selected for this guide, again feel free to change names and description to your use-case.\nFinally, create a .gitignore file which allows you to exclude certain files from your repo automatically. I would start with something like the example below.\n#others node_modules .hugo_build.lock # OS generated files .DS_Store .DS_Store? ._* .Spotlight-V100 .Trashes # Hugo public The last step is to save all the changes to the repo.\ngit add . git commit -m “initial commit” git push Create site and configure it # With all the tools ready, creating and configuring your site will be easy. Still within the folder you created in the last section, let’s create an empty Hugo website (with no theme).\nhugo new site --force . Once the scaffolding finishes, try the command below to run your page. Open a browser on https://localhost:1313 to see your site…\nhugo server Ups… Page not found – right? This was expected, even though you created a website, Hugo doesn’t give any default experience – aka your site doesn’t have any page to show.\nNext step, let\u0026rsquo;s install Blowfish using git submodules which will make it easier to manage and upgrade to new versions in the future.\ngit submodule add -b main https://github.com/nunocoracao/blowfish.git themes/blowfish Next, create the following folder structure at the root of your code directory - config/_default/. Now you will need to download these files and place them in _default folder you just created. The final structure should look something like this.\nconfig/_default/ ├─ config.toml ├─ languages.en.toml ├─ markup.toml ├─ menus.en.toml └─ params.toml ` Open the config.toml and uncomment the line theme = \u0026ldquo;blowfish” and you are ready to go. Try the running the site again and check the result at https://localhost:1313\nhugo server You should see something like the image below. Not much yet as we didn’t add any content, but the main skeleton for Blowfish is already in place - just requires configuration.\nNow let’s configure the theme.\nFYI This guide will not cover in detail what each parameter available in Blowfish does – for everything available and how to use it, check Blowfish documentation for every option in every file. menus.en.toml # This file defines your menu structure, for the top banner and the footer. For this guide, let’s create two menu sections: one for Posts and one for Tags.\nPosts - will display the full list of entries Tags - automatically generated based on tags placed on each article To achieve this, make sure the following entries exist in the menus.en.toml file. Once the changes are done, you should see the menus appearing by re-running hugo server.\n[[main]] name = \u0026#34;Posts\u0026#34; pageRef = \u0026#34;posts\u0026#34; weight = 10 [[main]] name = \u0026#34;Tags\u0026#34; pageRef = \u0026#34;tags\u0026#34; weight = 30 languages.en.toml # This file will configure your main details as the author of the website. Change the section below to reflect your details.\n[author] name = \u0026#34;Your name here\u0026#34; image = \u0026#34;profile.jpg\u0026#34; headline = \u0026#34;I\u0026#39;m only human\u0026#34; bio = \u0026#34;A little bit about you\u0026#34; # appears in author card for each article The images for the website should be placed in the assets folder. For this step, please add a profile picture to that folder named profile.jpg or change the configuration above to the filename you chose. If you don’t have a profile image available, you can use the one below for the tutorial.\nassets/profile.jpg The last step is configuring your links – social media, GitHub, etc. The file includes all the supported options, but they are commented. You are welcome to uncomment everything and delete the ones you would rather not use. Replace the right links on the ones you decided to keep. You can also change the order.\nparams.toml # This is the main configuration file for Blowfish. Most of the visual options or customization available can be configured using it, and it covers several areas of the theme. For this tutorial, I decided to use a background layout - check other layouts for Blowfish’s landing page - with the Neon color scheme - you can pick a different color scheme if you want to - check this list or create your own.\nAdd an image.jpg to the assets folder which will be the background for the site. You can also download the examples I am using in this tutorial.\nassets/image.jpg Now let’s jump into the params.toml and start configuring the file. I will focus only on the values that need to be changed, don’t delete the rest of the file without reading the docs. Let’s begin by making sure that we have the right color scheme, that image optimization is on, and configure the default background image.\ncolorScheme = \u0026#34;neon\u0026#34; disableImageOptimization = false defaultBackgroundImage = \u0026#34;image.jpg\u0026#34; # used as default for background images Next, let\u0026rsquo;s configure our homepage. We’re going with the background layout, configuring the homepage image and recent items. Furthermore, we are using the card view for items in the recent category. Finally, let’s configure the header to be fixed.\n[homepage] layout = \u0026#34;background\u0026#34; # valid options: page, profile, hero, card, background, custom homepageImage = \u0026#34;image.jpg\u0026#34; # used in: hero, and card showRecent = true showRecentItems = 6 showMoreLink = true showMoreLinkDest = \u0026#34;/posts/\u0026#34; cardView = true cardViewScreenWidth = false layoutBackgroundBlur = true # only used when layout equals background [header] layout = \u0026#34;fixed\u0026#34; Now configure how the article and list pages will look. Here are the configurations for those.\n[article] showHero = true heroStyle = \u0026#34;background\u0026#34; showSummary = true showTableOfContents = true showRelatedContent = true relatedContentLimit = 3 [list] showCards = true groupByYear = false cardView = true If you run hugo server again, you should see something like the image below.\nAdding content to your site # Create a folder to place your posts in /content/posts. This was also the directory configured in your menu to list all the articles. Within that folder, let’s create a new directory and give it the name myfirstpost. Within it create an index.md file – your article and place a featured.jpg or .png for in the same directory as the thumbnail for the article. Use the example below to get started. The first lines in the file are the Front Matter, which tell Hugo what the look and experience of the article will be – different themes support different params for this. Check the docs for more info.\n--- title: \u0026#34;My first post\u0026#34; date: 2023-08-14 draft: false summary: \u0026#34;This is my first post on my site\u0026#34; tags: [\u0026#34;space\u0026#34;] --- ## A sub-title Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nibh nisl, vulputate eu lacus vitae, maximus molestie libero. Vestibulum laoreet, odio et sollicitudin sollicitudin, quam ligula tempus urna, sed sagittis eros eros ac felis. In tristique tortor vitae lacinia commodo. Mauris venenatis ultrices purus nec fermentum. Nunc sit amet aliquet metus. Morbi nisl felis, gravida ac consequat vitae, blandit eu libero. Curabitur porta est in dui elementum porttitor. Maecenas fermentum, tortor ac feugiat fringilla, orci sem sagittis massa, a congue risus ipsum vel massa. Aliquam sit amet nunc vulputate, facilisis neque in, faucibus nisl. You can create additional articles to see what your site will look like once there is content in it. Your site should look like the images below. The main page shows the recent articles, each article is connected through others automatically via related section, you have tag aggregation, and full-text search.\nShip it # The only thing missing is to ship your site. I will be using Firebase for hosting - it’s a free alternative and provides more advanced features if you are creating something more complex. Go to firebase and create a new project. Once that is done, let’s switch to the CLI as it will make it easier to configure everything.\nLet’s install firebase’s CLI - if not on Mac check install instructions on Firebase.\nbrew install firebase Now log in and init firebase hosting for the project.\nfirebase login firebase init Select hosting and proceed.\nFollow the image below for the options I recommend. Make sure to set up the workflow files for GitHub actions. These will guarantee that your code will be deployed once there is a change to the repo.\nHowever, those files will not work out-of-box, as Hugo requires extra steps for the build to work. Please copy and paste the code blocks below to the respective files within the .github folder, but keep the original projectId in the files generated by firebase.\nfirebase-hosting-merge.yml # # This file was auto-generated by the Firebase CLI # https://github.com/firebase/firebase-tools name: Deploy to Firebase Hosting on merge \u0026#39;on\u0026#39;: push: branches: - main jobs: build_and_deploy: runs-on: ubuntu-latest steps: - name: Hugo setup uses: peaceiris/actions-hugo@v2.6.0 env: ACTIONS_ALLOW_UNSECURE_COMMANDS: \u0026#39;true\u0026#39; - name: Check out code into the Go module directory uses: actions/checkout@v4 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: hugo -E -F --minify -d public - name: Deploy Production uses: FirebaseExtended/action-hosting-deploy@v0 with: repoToken: \u0026#39;${{ secrets.GITHUB_TOKEN }}\u0026#39; firebaseServiceAccount: \u0026#39;${{ secrets.FIREBASE_SERVICE_ACCOUNT_BLOWFISH_TUTORIAL }}\u0026#39; channelId: live projectId: blowfish-tutorial firebase-hosting-pull-request.yml # # This file was auto-generated by the Firebase CLI # https://github.com/firebase/firebase-tools name: Deploy to Firebase Hosting on PR \u0026#39;on\u0026#39;: pull_request jobs: build_and_preview: if: \u0026#39;${{ github.event.pull_request.head.repo.full_name == github.repository }}\u0026#39; runs-on: ubuntu-latest steps: - name: Hugo setup uses: peaceiris/actions-hugo@v2.6.0 env: ACTIONS_ALLOW_UNSECURE_COMMANDS: \u0026#39;true\u0026#39; - name: Check out code into the Go module directory uses: actions/checkout@v4 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: hugo -E -F --minify -d public - name: Deploy preview uses: FirebaseExtended/action-hosting-deploy@v0 with: repoToken: \u0026#39;${{ secrets.GITHUB_TOKEN }}\u0026#39; firebaseServiceAccount: \u0026#39;${{ secrets.FIREBASE_SERVICE_ACCOUNT_BLOWFISH_TUTORIAL }}\u0026#39; expires: 30d channelId: preview-${{ github.event.number }} projectId: blowfish-tutorial The last step is committing your code to GitHub and let the workflows you created take care of deploying your site. Since we configured GitHub actions, this will trigger a job that will configure and deploy your site automatically.\ngit add . git commit -m \u0026#34;add github actions workflows\u0026#34; git push If the actions tab for your repo, you should see something like this.\nOnce all the steps finish, your Firebase console should show something like the image below - including the links to see your app – I got a version of this tutorial running on https://blowfish-tutorial.web.app/.\nConclusion and Next Steps # Now you have your first version of your homepage. You can make changes locally and once you commit your code they will automatically be reflected online. What shall you do next? I’ll leave you with some useful links to get you inspired and learn more about Blowfish and Hugo.\nhttps://blowfish.page/docs/ https://blowfish.page/docs/configuration/ https://blowfish.page/docs/shortcodes/ https://blowfish.page/examples/ https://blowfish.page/users/ https://gohugo.io/documentation/ ","date":"4 August 2025","externalUrl":null,"permalink":"/blog/2025/08/04/build-your-homepage-using-blowfish-and-hugo/","section":"Blog","summary":"Just one year ago, I created Blowfish, a Hugo theme crafted to build my unique vision for my personal homepage. I also decided to make it an open-source project. Fast-forward to today, and Blowfish has transformed into a thriving open-source project with over 600 stars on GitHub and a user base of hundreds. In this tutorial, I’ll show you how to get started and have your website running in a couple of minutes.","title":"Build your homepage using Blowfish and Hugo","type":"posts"},{"content":"","date":"4 August 2025","externalUrl":null,"permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo","type":"tags"},{"content":"Nuno\u0026rsquo;s awesome dummy bio.\n","date":"4 August 2025","externalUrl":null,"permalink":"/authors/muhammadfajarb/","section":"Authors Taxonomy Listing Example","summary":"\u003cp\u003eNuno\u0026rsquo;s awesome dummy bio.\u003c/p\u003e","title":"Nuno Coração","type":"authors"},{"content":"","date":"4 August 2025","externalUrl":null,"permalink":"/categories/open-source/","section":"Categories","summary":"","title":"Open-Source","type":"categories"},{"content":"","date":"4 August 2025","externalUrl":null,"permalink":"/tags/tutorial/","section":"Tags","summary":"","title":"Tutorial","type":"tags"},{"content":"Just one year ago, I createdBlowfish, a Hugo theme crafted to build my unique vision for my personal homepage. I also decided to make it an open-source project. Fast-forward to today, and Blowfish has transformed into a thriving open-source project with over 600 stars on GitHub and a user base of hundreds. In this tutorial, I’ll show you how to get started and have your website running in a couple of minutes.\nnunocoracao/blowfish Personal Website \u0026amp; Blog Theme for Hugo HTML 2231 582 TL;DR # The goal of this guide is to walk a newcomer to Hugo on how to install, manage, and publish your own website. The final version of the code is available in this repo - for those that would like to jump to the end.\nThe visual style is just one of the many possibilities available in Blowfish. Users are encouraged to check the documentation page and learn how to customize the theme to their needs. Additionally, there are already great examples of the theme from other users available for inspiration. Blowfish also offers several extra features in the form of shortcodes available out of the box in the theme - check them out here and get inspired.\nSetup your environment # Let’s begin by installing all the tools you need. This guide will cover the steps for Mac so these instructions might not apply to your hardware and OS. If you are on Windows or Linux, please consult the guides on how to install Hugo, and GitHub’s CLI for your OS.\nAnyway, if you are using MacOS let’s install brew - a package manager for mac - as that will help installing and managing the other tools.\n/bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u0026#34; Once brew is installed let’s install Git, Hugo and GitHub’s CLI.\nbrew install git brew install hugo brew install gh Create a folder for your code and open a terminal session into it (I chose blowfish-tutorial in the commands below, feel free to call the folder whatever you want).\nmkdir blowfish-tutorial cd blowfish-tutorial Once inside the folder, the next step is to initialize your local git repo.\ngit init -b main Now, let’s create and sync the local repo to a GitHub repo so that your code is stored remotely.\ngh auth login gh repo create git push --set-upstream origin main Check the image below for the options I selected for this guide, again feel free to change names and description to your use-case.\nFinally, create a .gitignore file which allows you to exclude certain files from your repo automatically. I would start with something like the example below.\n#others node_modules .hugo_build.lock # OS generated files .DS_Store .DS_Store? ._* .Spotlight-V100 .Trashes # Hugo public The last step is to save all the changes to the repo.\ngit add . git commit -m “initial commit” git push Create site and configure it # With all the tools ready, creating and configuring your site will be easy. Still within the folder you created in the last section, let’s create an empty Hugo website (with no theme).\nhugo new site --force . Once the scaffolding finishes, try the command below to run your page. Open a browser on https://localhost:1313 to see your site…\nhugo server Ups… Page not found – right? This was expected, even though you created a website, Hugo doesn’t give any default experience – aka your site doesn’t have any page to show.\nNext step, let\u0026rsquo;s install Blowfish using git submodules which will make it easier to manage and upgrade to new versions in the future.\ngit submodule add -b main https://github.com/nunocoracao/blowfish.git themes/blowfish Next, create the following folder structure at the root of your code directory - config/_default/. Now you will need to download these files and place them in _default folder you just created. The final structure should look something like this.\nconfig/_default/ ├─ config.toml ├─ languages.en.toml ├─ markup.toml ├─ menus.en.toml └─ params.toml ` Open the config.toml and uncomment the line theme = \u0026ldquo;blowfish” and you are ready to go. Try the running the site again and check the result at https://localhost:1313\nhugo server You should see something like the image below. Not much yet as we didn’t add any content, but the main skeleton for Blowfish is already in place - just requires configuration.\nNow let’s configure the theme.\nFYI This guide will not cover in detail what each parameter available in Blowfish does – for everything available and how to use it, check Blowfish documentation for every option in every file. menus.en.toml # This file defines your menu structure, for the top banner and the footer. For this guide, let’s create two menu sections: one for Posts and one for Tags.\nPosts - will display the full list of entries Tags - automatically generated based on tags placed on each article To achieve this, make sure the following entries exist in the menus.en.toml file. Once the changes are done, you should see the menus appearing by re-running hugo server.\n[[main]] name = \u0026#34;Posts\u0026#34; pageRef = \u0026#34;posts\u0026#34; weight = 10 [[main]] name = \u0026#34;Tags\u0026#34; pageRef = \u0026#34;tags\u0026#34; weight = 30 languages.en.toml # This file will configure your main details as the author of the website. Change the section below to reflect your details.\n[author] name = \u0026#34;Your name here\u0026#34; image = \u0026#34;profile.jpg\u0026#34; headline = \u0026#34;I\u0026#39;m only human\u0026#34; bio = \u0026#34;A little bit about you\u0026#34; # appears in author card for each article The images for the website should be placed in the assets folder. For this step, please add a profile picture to that folder named profile.jpg or change the configuration above to the filename you chose. If you don’t have a profile image available, you can use the one below for the tutorial.\nassets/profile.jpg The last step is configuring your links – social media, GitHub, etc. The file includes all the supported options, but they are commented. You are welcome to uncomment everything and delete the ones you would rather not use. Replace the right links on the ones you decided to keep. You can also change the order.\nparams.toml # This is the main configuration file for Blowfish. Most of the visual options or customization available can be configured using it, and it covers several areas of the theme. For this tutorial, I decided to use a background layout - check other layouts for Blowfish’s landing page - with the Neon color scheme - you can pick a different color scheme if you want to - check this list or create your own.\nAdd an image.jpg to the assets folder which will be the background for the site. You can also download the examples I am using in this tutorial.\nassets/image.jpg Now let’s jump into the params.toml and start configuring the file. I will focus only on the values that need to be changed, don’t delete the rest of the file without reading the docs. Let’s begin by making sure that we have the right color scheme, that image optimization is on, and configure the default background image.\ncolorScheme = \u0026#34;neon\u0026#34; disableImageOptimization = false defaultBackgroundImage = \u0026#34;image.jpg\u0026#34; # used as default for background images Next, let\u0026rsquo;s configure our homepage. We’re going with the background layout, configuring the homepage image and recent items. Furthermore, we are using the card view for items in the recent category. Finally, let’s configure the header to be fixed.\n[homepage] layout = \u0026#34;background\u0026#34; # valid options: page, profile, hero, card, background, custom homepageImage = \u0026#34;image.jpg\u0026#34; # used in: hero, and card showRecent = true showRecentItems = 6 showMoreLink = true showMoreLinkDest = \u0026#34;/posts/\u0026#34; cardView = true cardViewScreenWidth = false layoutBackgroundBlur = true # only used when layout equals background [header] layout = \u0026#34;fixed\u0026#34; Now configure how the article and list pages will look. Here are the configurations for those.\n[article] showHero = true heroStyle = \u0026#34;background\u0026#34; showSummary = true showTableOfContents = true showRelatedContent = true relatedContentLimit = 3 [list] showCards = true groupByYear = false cardView = true If you run hugo server again, you should see something like the image below.\nAdding content to your site # Create a folder to place your posts in /content/posts. This was also the directory configured in your menu to list all the articles. Within that folder, let’s create a new directory and give it the name myfirstpost. Within it create an index.md file – your article and place a featured.jpg or .png for in the same directory as the thumbnail for the article. Use the example below to get started. The first lines in the file are the Front Matter, which tell Hugo what the look and experience of the article will be – different themes support different params for this. Check the docs for more info.\n--- title: \u0026#34;My first post\u0026#34; date: 2023-08-14 draft: false summary: \u0026#34;This is my first post on my site\u0026#34; tags: [\u0026#34;space\u0026#34;] --- ## A sub-title Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nibh nisl, vulputate eu lacus vitae, maximus molestie libero. Vestibulum laoreet, odio et sollicitudin sollicitudin, quam ligula tempus urna, sed sagittis eros eros ac felis. In tristique tortor vitae lacinia commodo. Mauris venenatis ultrices purus nec fermentum. Nunc sit amet aliquet metus. Morbi nisl felis, gravida ac consequat vitae, blandit eu libero. Curabitur porta est in dui elementum porttitor. Maecenas fermentum, tortor ac feugiat fringilla, orci sem sagittis massa, a congue risus ipsum vel massa. Aliquam sit amet nunc vulputate, facilisis neque in, faucibus nisl. You can create additional articles to see what your site will look like once there is content in it. Your site should look like the images below. The main page shows the recent articles, each article is connected through others automatically via related section, you have tag aggregation, and full-text search.\nShip it # The only thing missing is to ship your site. I will be using Firebase for hosting - it’s a free alternative and provides more advanced features if you are creating something more complex. Go to firebase and create a new project. Once that is done, let’s switch to the CLI as it will make it easier to configure everything.\nLet’s install firebase’s CLI - if not on Mac check install instructions on Firebase.\nbrew install firebase Now log in and init firebase hosting for the project.\nfirebase login firebase init Select hosting and proceed.\nFollow the image below for the options I recommend. Make sure to set up the workflow files for GitHub actions. These will guarantee that your code will be deployed once there is a change to the repo.\nHowever, those files will not work out-of-box, as Hugo requires extra steps for the build to work. Please copy and paste the code blocks below to the respective files within the .github folder, but keep the original projectId in the files generated by firebase.\nfirebase-hosting-merge.yml # # This file was auto-generated by the Firebase CLI # https://github.com/firebase/firebase-tools name: Deploy to Firebase Hosting on merge \u0026#39;on\u0026#39;: push: branches: - main jobs: build_and_deploy: runs-on: ubuntu-latest steps: - name: Hugo setup uses: peaceiris/actions-hugo@v2.6.0 env: ACTIONS_ALLOW_UNSECURE_COMMANDS: \u0026#39;true\u0026#39; - name: Check out code into the Go module directory uses: actions/checkout@v4 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: hugo -E -F --minify -d public - name: Deploy Production uses: FirebaseExtended/action-hosting-deploy@v0 with: repoToken: \u0026#39;${{ secrets.GITHUB_TOKEN }}\u0026#39; firebaseServiceAccount: \u0026#39;${{ secrets.FIREBASE_SERVICE_ACCOUNT_BLOWFISH_TUTORIAL }}\u0026#39; channelId: live projectId: blowfish-tutorial firebase-hosting-pull-request.yml # # This file was auto-generated by the Firebase CLI # https://github.com/firebase/firebase-tools name: Deploy to Firebase Hosting on PR \u0026#39;on\u0026#39;: pull_request jobs: build_and_preview: if: \u0026#39;${{ github.event.pull_request.head.repo.full_name == github.repository }}\u0026#39; runs-on: ubuntu-latest steps: - name: Hugo setup uses: peaceiris/actions-hugo@v2.6.0 env: ACTIONS_ALLOW_UNSECURE_COMMANDS: \u0026#39;true\u0026#39; - name: Check out code into the Go module directory uses: actions/checkout@v4 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: hugo -E -F --minify -d public - name: Deploy preview uses: FirebaseExtended/action-hosting-deploy@v0 with: repoToken: \u0026#39;${{ secrets.GITHUB_TOKEN }}\u0026#39; firebaseServiceAccount: \u0026#39;${{ secrets.FIREBASE_SERVICE_ACCOUNT_BLOWFISH_TUTORIAL }}\u0026#39; expires: 30d channelId: preview-${{ github.event.number }} projectId: blowfish-tutorial The last step is committing your code to GitHub and let the workflows you created take care of deploying your site. Since we configured GitHub actions, this will trigger a job that will configure and deploy your site automatically.\ngit add . git commit -m \u0026#34;add github actions workflows\u0026#34; git push If the actions tab for your repo, you should see something like this.\nOnce all the steps finish, your Firebase console should show something like the image below - including the links to see your app – I got a version of this tutorial running on https://blowfish-tutorial.web.app/.\nConclusion and Next Steps # Now you have your first version of your homepage. You can make changes locally and once you commit your code they will automatically be reflected online. What shall you do next? I’ll leave you with some useful links to get you inspired and learn more about Blowfish and Hugo.\nhttps://blowfish.page/docs/ https://blowfish.page/docs/configuration/ https://blowfish.page/docs/shortcodes/ https://blowfish.page/examples/ https://blowfish.page/users/ https://gohugo.io/documentation/ ","date":"4 October 2023","externalUrl":"https://n9o.xyz/posts/202310-blowfish-tutorial/","permalink":"/guides/202310-blowfish-tutorial/","section":"Recipes","summary":"Just one year ago, I created Blowfish, a Hugo theme crafted to build my unique vision for my personal homepage. I also decided to make it an open-source project. Fast-forward to today, and Blowfish has transformed into a thriving open-source project with over 600 stars on GitHub and a user base of hundreds. In this tutorial, I’ll show you how to get started and have your website running in a couple of minutes.","title":"Build your homepage using Blowfish and Hugo","type":"guides"},{"content":"","date":"4 October 2023","externalUrl":null,"permalink":"/authors/nunocoracao/","section":"Authors Taxonomy Listing Example","summary":"","title":"Nunocoracao","type":"authors"},{"content":" Recipes, guides, and tutorials for Blowfish Blowfish user? To add your guide to this list, check the template.\nThis section contains guides for a variety of scenarios on how to configure your theme. If you\u0026rsquo;re new, check out the Installation guide to begin or visit the Samples section to see what Blowfish can do.\n","date":"4 October 2023","externalUrl":null,"permalink":"/guides/","section":"Recipes","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  Recipes, guides, and tutorials for Blowfish\n\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003eBlowfish user?\u003c/strong\u003e To add your guide to this list, \u003ca\n  href=\"/guides/template/\"\u003echeck the template\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis section contains guides for a variety of scenarios on how to configure your theme. If you\u0026rsquo;re new, check out the \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/installation/\"\u003eInstallation\u003c/a\u003e guide to begin or visit the \u003ca\n  href=\"https://muhammadfajarb.github.io/samples/\"\u003eSamples\u003c/a\u003e section to see what Blowfish can do.\u003c/p\u003e\n\u003chr\u003e","title":"Recipes","type":"guides"},{"content":"","date":"2 October 2023","externalUrl":"https://blowfish-tutorial.web.app/","permalink":"/examples/blowfish-tutorial/_index.it/","section":"Showcase","summary":"","title":"Blowfish Tutorial","type":"examples"},{"content":"","date":"2 October 2023","externalUrl":"https://blowfish-tutorial.web.app/","permalink":"/examples/blowfish-tutorial/","section":"Showcase","summary":"","title":"Blowfish Tutorial","type":"examples"},{"content":"","date":"2 October 2023","externalUrl":"https://blowfish-tutorial.web.app/","permalink":"/examples/blowfish-tutorial/_index.zh-cn/","section":"Showcase","summary":"","title":"Blowfish Tutorial","type":"examples"},{"content":"","date":"2 October 2023","externalUrl":"https://blowfish-tutorial.web.app/","permalink":"/examples/blowfish-tutorial/_index.ja/","section":"Showcase","summary":"","title":"Blowfish チュートリアル","type":"examples"},{"content":" See what\u0026rsquo;s possible with Blowfish. This section contains links to example templates and pages created using Blowfish to get you inspired.\n","date":"2 October 2023","externalUrl":null,"permalink":"/examples/","section":"Showcase","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  See what\u0026rsquo;s possible with Blowfish.\n\u003c/div\u003e\n\n\u003cp\u003eThis section contains links to example templates and pages created using Blowfish to get you inspired.\u003c/p\u003e\n\u003chr\u003e","title":"Showcase","type":"examples"},{"content":"","date":"1 October 2023","externalUrl":"https://github.com/nunocoracao/blowfish-tutorial","permalink":"/examples/repo-blowfish-tutorial/_index.it/","section":"Showcase","summary":"","title":"Blowfish Tutorial - Repo","type":"examples"},{"content":"","date":"1 October 2023","externalUrl":"https://github.com/nunocoracao/blowfish-tutorial","permalink":"/examples/repo-blowfish-tutorial/","section":"Showcase","summary":"","title":"Blowfish Tutorial - Repo","type":"examples"},{"content":"","date":"1 October 2023","externalUrl":"https://github.com/nunocoracao/blowfish-tutorial","permalink":"/examples/repo-blowfish-tutorial/_index.zh-cn/","section":"Showcase","summary":"","title":"Blowfish Tutorial - Repo","type":"examples"},{"content":"","date":"1 October 2023","externalUrl":"https://github.com/nunocoracao/blowfish-tutorial","permalink":"/examples/repo-blowfish-tutorial/_index.ja/","section":"Showcase","summary":"","title":"Blowfish チュートリアル - レポジトリ","type":"examples"},{"content":"","date":"7 November 2022","externalUrl":"https://nunocoracao.github.io/blowfish_lite/","permalink":"/examples/blowfish-lite/_index.it/","section":"Showcase","summary":"","title":"Blowfish Lite","type":"examples"},{"content":"","date":"7 November 2022","externalUrl":"https://nunocoracao.github.io/blowfish_lite/","permalink":"/examples/blowfish-lite/_index.ja/","section":"Showcase","summary":"","title":"Blowfish Lite","type":"examples"},{"content":"","date":"7 November 2022","externalUrl":"https://nunocoracao.github.io/blowfish_lite/","permalink":"/examples/blowfish-lite/","section":"Showcase","summary":"","title":"Blowfish Lite","type":"examples"},{"content":"","date":"7 November 2022","externalUrl":"https://nunocoracao.github.io/blowfish_lite/","permalink":"/examples/blowfish-lite/_index.zh-cn/","section":"Showcase","summary":"","title":"Blowfish Lite","type":"examples"},{"content":"","date":"6 November 2022","externalUrl":"https://nunocoracao.github.io/blowfish_artist/","permalink":"/examples/blowfish-artist/_index.it/","section":"Showcase","summary":"","title":"Blowfish Artist","type":"examples"},{"content":"","date":"6 November 2022","externalUrl":"https://nunocoracao.github.io/blowfish_artist/","permalink":"/examples/blowfish-artist/_index.ja/","section":"Showcase","summary":"","title":"Blowfish Artist","type":"examples"},{"content":"","date":"6 November 2022","externalUrl":"https://nunocoracao.github.io/blowfish_artist/","permalink":"/examples/blowfish-artist/","section":"Showcase","summary":"","title":"Blowfish Artist","type":"examples"},{"content":"","date":"6 November 2022","externalUrl":"https://nunocoracao.github.io/blowfish_artist/","permalink":"/examples/blowfish-artist/_index.zh-cn/","section":"Showcase","summary":"","title":"Blowfish Artist","type":"examples"},{"content":"","date":"6 November 2022","externalUrl":"https://nunocoracao.github.io/blowfish_lowkey/","permalink":"/examples/blowfish-lowkey/_index.it/","section":"Showcase","summary":"","title":"Blowfish Lowkey","type":"examples"},{"content":"","date":"6 November 2022","externalUrl":"https://nunocoracao.github.io/blowfish_lowkey/","permalink":"/examples/blowfish-lowkey/_index.ja/","section":"Showcase","summary":"","title":"Blowfish Lowkey","type":"examples"},{"content":"","date":"6 November 2022","externalUrl":"https://nunocoracao.github.io/blowfish_lowkey/","permalink":"/examples/blowfish-lowkey/","section":"Showcase","summary":"","title":"Blowfish Lowkey","type":"examples"},{"content":"","date":"6 November 2022","externalUrl":"https://nunocoracao.github.io/blowfish_lowkey/","permalink":"/examples/blowfish-lowkey/_index.zh-cn/","section":"Showcase","summary":"","title":"Blowfish Lowkey","type":"examples"},{"content":"","date":"12 October 2022","externalUrl":null,"permalink":"/tags/authors/","section":"Tags","summary":"","title":"Authors","type":"tags"},{"content":"Dummy Second Author\u0026rsquo;s awesome dummy bio.\n","date":"12 October 2022","externalUrl":null,"permalink":"/authors/secondauthor/","section":"Authors Taxonomy Listing Example","summary":"\u003cp\u003eDummy Second Author\u0026rsquo;s awesome dummy bio.\u003c/p\u003e","title":"Dummy Second Author","type":"authors"},{"content":"This is an example of how an article with multiple authors will look like.\n","date":"12 October 2022","externalUrl":null,"permalink":"/samples/multiple-authors/","section":"Samples","summary":"A quick example of how multiple authors could be used.","title":"Multiple Authors","type":"sample"},{"content":"","date":"12 October 2022","externalUrl":null,"permalink":"/tags/sample/","section":"Tags","summary":"","title":"Sample","type":"tags"},{"content":" Blowfish brings your content to life. :heart_eyes: This section contains some demo pages that show how Blowfish renders different types of content. You can also see an example taxonomy listing page.\nSidenote: This page is just a standard Blowfish article listing and Hugo has been configured to generate a samples content type and display article summaries.\n","date":"12 October 2022","externalUrl":null,"permalink":"/samples/","section":"Samples","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  Blowfish brings your content to life. :heart_eyes:\n\u003c/div\u003e\n\n\u003cp\u003eThis section contains some demo pages that show how Blowfish renders different types of content. You can also see an example \u003ca\n  href=\"https://muhammadfajarb.github.io/tags/\"\u003etaxonomy listing\u003c/a\u003e page.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003eSidenote:\u003c/strong\u003e This page is just a standard Blowfish article listing and Hugo has been configured to generate a \u003ccode\u003esamples\u003c/code\u003e content type and display article summaries.\u003c/em\u003e\u003c/p\u003e\n\u003chr\u003e","title":"Samples","type":"samples"},{"content":"","date":"26 September 2022","externalUrl":null,"permalink":"/tags/thumbnail/","section":"Tags","summary":"","title":"Thumbnail","type":"tags"},{"content":"A quick example of how to start using Thumbnails in your articles.\nIf your average directory for an article looks like this:\ncontent └── awesome_article.md You need to change it from a single markdown file into a folder. Create a directory with the same name of the article, inside create a index.md file. You\u0026rsquo;ll get a structure similar to what\u0026rsquo;s below.\ncontent └── awesome_article └── featured.png Inside the article you can now add an image file (almost all formats are supported but we recommend .png or .jpg) that starts with feature*. Example below.\ncontent └── awesome_article ├── index.md └── featured.png This will tell Blowfish that this article has a feature image that can be used both as a thumbnail across your website as well as for oEmbed cards across social platforms. As an example, you can try copy pasting the URL of this article into a platform that shows oEmbeds (e.g. Twitter, WhatsApp, Telegram, etc) and see what is displayed.\n","date":"26 September 2022","externalUrl":null,"permalink":"/samples/thumbnail_sample/","section":"Samples","summary":"A quick example of how to start using Thumbnails in your artciles.","title":"Thumbnails","type":"sample"},{"content":"","date":"7 November 2021","externalUrl":"https://github.com/nunocoracao/blowfish_lite/","permalink":"/examples/repo-blowfish-lite/_index.it/","section":"Showcase","summary":"","title":"Blowfish Lite - Repo","type":"examples"},{"content":"","date":"7 November 2021","externalUrl":"https://github.com/nunocoracao/blowfish_lite/","permalink":"/examples/repo-blowfish-lite/","section":"Showcase","summary":"","title":"Blowfish Lite - Repo","type":"examples"},{"content":"","date":"7 November 2021","externalUrl":"https://github.com/nunocoracao/blowfish_lite/","permalink":"/examples/repo-blowfish-lite/_index.zh-cn/","section":"Showcase","summary":"","title":"Blowfish Lite - Repo","type":"examples"},{"content":"","date":"7 November 2021","externalUrl":"https://github.com/nunocoracao/blowfish_lite/","permalink":"/examples/repo-blowfish-lite/_index.ja/","section":"Showcase","summary":"","title":"Blowfish Lite - レポジトリ","type":"examples"},{"content":"","date":"6 November 2021","externalUrl":"https://github.com/nunocoracao/blowfish_artist/","permalink":"/examples/repo-blowfish-artist/_index.it/","section":"Showcase","summary":"","title":"Blowfish Artist - Repo","type":"examples"},{"content":"","date":"6 November 2021","externalUrl":"https://github.com/nunocoracao/blowfish_artist/","permalink":"/examples/repo-blowfish-artist/","section":"Showcase","summary":"","title":"Blowfish Artist - Repo","type":"examples"},{"content":"","date":"6 November 2021","externalUrl":"https://github.com/nunocoracao/blowfish_artist/","permalink":"/examples/repo-blowfish-artist/_index.zh-cn/","section":"Showcase","summary":"","title":"Blowfish Artist - Repo","type":"examples"},{"content":"","date":"6 November 2021","externalUrl":"https://github.com/nunocoracao/blowfish_artist/","permalink":"/examples/repo-blowfish-artist/_index.ja/","section":"Showcase","summary":"","title":"Blowfish Artist - レポジトリ","type":"examples"},{"content":"","date":"6 November 2021","externalUrl":"https://github.com/nunocoracao/blowfish_lowkey/","permalink":"/examples/repo-blowfish-lowkey/_index.it/","section":"Showcase","summary":"","title":"Blowfish Lowkey - Repo","type":"examples"},{"content":"","date":"6 November 2021","externalUrl":"https://github.com/nunocoracao/blowfish_lowkey/","permalink":"/examples/repo-blowfish-lowkey/","section":"Showcase","summary":"","title":"Blowfish Lowkey - Repo","type":"examples"},{"content":"","date":"6 November 2021","externalUrl":"https://github.com/nunocoracao/blowfish_lowkey/","permalink":"/examples/repo-blowfish-lowkey/_index.zh-cn/","section":"Showcase","summary":"","title":"Blowfish Lowkey - Repo","type":"examples"},{"content":"","date":"6 November 2021","externalUrl":"https://github.com/nunocoracao/blowfish_lowkey/","permalink":"/examples/repo-blowfish-lowkey/_index.ja/","section":"Showcase","summary":"","title":"Blowfish Lowkey - レポジトリ","type":"examples"},{"content":"","date":"6 November 2020","externalUrl":"https://nunocoracao.github.io/blowfish_template/","permalink":"/examples/blowfish-template/_index.it/","section":"Showcase","summary":"","title":"Blowfish Template","type":"examples"},{"content":"","date":"6 November 2020","externalUrl":"https://nunocoracao.github.io/blowfish_template/","permalink":"/examples/blowfish-template/","section":"Showcase","summary":"","title":"Blowfish Template","type":"examples"},{"content":"","date":"6 November 2020","externalUrl":"https://nunocoracao.github.io/blowfish_template/","permalink":"/examples/blowfish-template/_index.zh-cn/","section":"Showcase","summary":"","title":"Blowfish Template","type":"examples"},{"content":"","date":"6 November 2020","externalUrl":"https://github.com/nunocoracao/blowfish_template","permalink":"/examples/blowfish-template-repo/_index.it/","section":"Showcase","summary":"","title":"Blowfish Template - GitHub Repo","type":"examples"},{"content":"","date":"6 November 2020","externalUrl":"https://github.com/nunocoracao/blowfish_template","permalink":"/examples/blowfish-template-repo/","section":"Showcase","summary":"","title":"Blowfish Template - GitHub Repo","type":"examples"},{"content":"","date":"6 November 2020","externalUrl":"https://github.com/nunocoracao/blowfish_template","permalink":"/examples/blowfish-template-repo/_index.zh-cn/","section":"Showcase","summary":"","title":"Blowfish Template - GitHub Repo","type":"examples"},{"content":"","date":"6 November 2020","externalUrl":"https://nunocoracao.github.io/blowfish_template/","permalink":"/examples/blowfish-template/_index.ja/","section":"Showcase","summary":"","title":"Blowfish テンプレート","type":"examples"},{"content":"","date":"6 November 2020","externalUrl":"https://github.com/nunocoracao/blowfish_template","permalink":"/examples/blowfish-template-repo/_index.ja/","section":"Showcase","summary":"","title":"Blowfish テンプレート - GitHub レポジトリ","type":"examples"},{"content":"Blowfish has built-in support for a number of FontAwesome 6 icons. These can be included in your website through either the icon partial or icon shortcode.\nAdditionally, custom icons are also fully supported. Simply provide your own SVG icon assets by placing them in the assets/icons/ directory in the root of your project. Any icons in the icons directory will then be available to use throughout the theme. In order to achieve automatic color filling, every SVG path needs the fill=\u0026quot;currentColor\u0026quot; XML attribute.\nThe full list of built-in icons and their corresponding names can referenced below.\nIcon name Preview amazon apple bars bell blogger bluesky bomb bug check circle-info code codeberg \u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e codepen comment dev discourse docker download dribbble edit email envelope expand eye facebook fediverse \u003c?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?\u003e fire flickr fork foursquare ghost github gitlab globe goodreads google google-scholar graduation-cap hackernews hashnode heart-empty heart image instagram itch-io keybase keyoxide kickstarter ko-fi \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e language lastfm lightbulb line link linkedin list location-dot lock mastodon matrix Matrix medium microsoft moon mug-hot music orcid patreon paypal peertube pencil pgpkey phone pinterest pixelfed poo reddit researchgate rss rss-square scale-balanced search shield signal skull-crossbones slack snapchat soundcloud spotify stack-overflow star steam stripe substack sun tag telegram threads tiktok triangle-exclamation tumblr twitch twitter wand-magic-sparkles whatsapp worktree x-twitter xing Xing xmark youtube ","date":"14 August 2020","externalUrl":null,"permalink":"/samples/icons/","section":"Samples","summary":"\u003cp\u003eBlowfish has built-in support for a number of \u003ca\n  href=\"https://fontawesome.com/icons\"\n    target=\"_blank\"\n  \u003eFontAwesome 6\u003c/a\u003e icons. These can be included in your website through either the \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/partials/#icon\"\u003eicon partial\u003c/a\u003e or \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/shortcodes/#icon\"\u003eicon shortcode\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAdditionally, custom icons are also fully supported. Simply provide your own SVG icon assets by placing them in the \u003ccode\u003eassets/icons/\u003c/code\u003e directory in the root of your project. Any icons in the icons directory will then be available to use throughout the theme. In order to achieve automatic color filling, every SVG path needs the \u003ccode\u003efill=\u0026quot;currentColor\u0026quot;\u003c/code\u003e XML attribute.\u003c/p\u003e","title":"Icons","type":"sample"},{"content":"","date":"14 August 2020","externalUrl":null,"permalink":"/tags/icons/","section":"Tags","summary":"","title":"Icons","type":"tags"},{"content":"","date":"14 August 2020","externalUrl":null,"permalink":"/tags/shortcodes/","section":"Tags","summary":"","title":"Shortcodes","type":"tags"},{"content":"","date":"14 August 2020","externalUrl":null,"permalink":"/tags/users/","section":"Tags","summary":"","title":"Users","type":"tags"},{"content":"Real websites that are built with Blowfish. Check the full list in JSON format.\nBlowfish user? To add your site to this list, submit a pull request. ","date":"14 August 2020","externalUrl":null,"permalink":"/users/users/","section":"Users","summary":"\u003cp\u003eReal websites that are built with Blowfish. Check the full list in \u003ca\n  href=\"/users/users.json\"\u003eJSON format\u003c/a\u003e.\u003c/p\u003e\n\n  \n\n\n\n\u003cdiv\n  \n    class=\"flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900\"\n  \n  \u003e\n  \u003cspan\n    \n      class=\"text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center\"\n    \n    \u003e\n    \u003cspan class=\"relative block icon\"\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\u003e\u003cpath fill=\"currentColor\" d=\"M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z\"/\u003e\u003c/svg\u003e\n\u003c/span\u003e\n  \u003c/span\u003e\n\n  \u003cspan\n    \n      class=\"dark:text-neutral-300\"\n    \n    \u003e\u003cstrong\u003eBlowfish user?\u003c/strong\u003e To add your site to this list, \u003ca\n  href=\"https://github.com/nunocoracao/blowfish/blob/dev/exampleSite/content/users/users.json\"\n    target=\"_blank\"\n  \u003esubmit a pull request\u003c/a\u003e.\u003c/span\u003e\n\u003c/div\u003e\n\n\u003c/BR\u003e","title":"Users","type":"users"},{"content":"Real websites that are built with Blowfish. Check the full list in JSON format.\nBlowfish user? To add your site to this list, submit a pull request. ","date":"14 August 2020","externalUrl":null,"permalink":"/users/","section":"Users","summary":"\u003cp\u003eReal websites that are built with Blowfish. Check the full list in \u003ca\n  href=\"/users/users.json\"\u003eJSON format\u003c/a\u003e.\u003c/p\u003e\n\n  \n\n\n\n\u003cdiv\n  \n    class=\"flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900\"\n  \n  \u003e\n  \u003cspan\n    \n      class=\"text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center\"\n    \n    \u003e\n    \u003cspan class=\"relative block icon\"\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\u003e\u003cpath fill=\"currentColor\" d=\"M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z\"/\u003e\u003c/svg\u003e\n\u003c/span\u003e\n  \u003c/span\u003e\n\n  \u003cspan\n    \n      class=\"dark:text-neutral-300\"\n    \n    \u003e\u003cstrong\u003eBlowfish user?\u003c/strong\u003e To add your site to this list, \u003ca\n  href=\"https://github.com/nunocoracao/blowfish/blob/dev/exampleSite/content/users/users.json\"\n    target=\"_blank\"\n  \u003esubmit a pull request\u003c/a\u003e.\u003c/span\u003e\n\u003c/div\u003e\n\n\u003c/BR\u003e","title":"Users","type":"users"},{"content":"Blowfish で構築された実際のウェブサイトです。すべてのウェブサイト一覧は JSON 形式 で閲覧可能です。\nBlowfish ユーザーですか? この一覧にあなたのサイトを加える際は、 pull request を送信 してください。 ","date":"14 August 2020","externalUrl":null,"permalink":"/users/users/","section":"Users","summary":"\u003cp\u003eBlowfish で構築された実際のウェブサイトです。すべてのウェブサイト一覧は \u003ca\n  href=\"/users/users.json\"\u003eJSON 形式\u003c/a\u003e で閲覧可能です。\u003c/p\u003e\n\n  \n\n\n\n\u003cdiv\n  \n    class=\"flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900\"\n  \n  \u003e\n  \u003cspan\n    \n      class=\"text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center\"\n    \n    \u003e\n    \u003cspan class=\"relative block icon\"\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\u003e\u003cpath fill=\"currentColor\" d=\"M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z\"/\u003e\u003c/svg\u003e\n\u003c/span\u003e\n  \u003c/span\u003e\n\n  \u003cspan\n    \n      class=\"dark:text-neutral-300\"\n    \n    \u003e\u003cstrong\u003eBlowfish ユーザーですか?\u003c/strong\u003e この一覧にあなたのサイトを加える際は、 \u003ca\n  href=\"https://github.com/nunocoracao/blowfish/blob/dev/exampleSite/content/users/users.json\"\n    target=\"_blank\"\n  \u003epull request を送信\u003c/a\u003e してください。\u003c/span\u003e\n\u003c/div\u003e\n\n\u003c/BR\u003e","title":"ユーザー","type":"users"},{"content":"","date":"14 August 2020","externalUrl":null,"permalink":"/tags/%E5%8F%8B%E9%93%BE/","section":"Tags","summary":"","title":"友链","type":"tags"},{"content":"这里有使用 Blowfish 构建的网站实例。点击这里以 JSON 形式查看完整列表。\n您也是 Blowfish 用户？ 提交 PR来把你的网站加入此列表。 ","date":"14 August 2020","externalUrl":null,"permalink":"/users/users/","section":"Users","summary":"\u003cp\u003e这里有使用 Blowfish 构建的网站实例。点击\u003ca\n  href=\"/users/users.json\"\u003e这里\u003c/a\u003e以 JSON 形式查看完整列表。\u003c/p\u003e\n\n  \n\n\n\n\u003cdiv\n  \n    class=\"flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900\"\n  \n  \u003e\n  \u003cspan\n    \n      class=\"text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center\"\n    \n    \u003e\n    \u003cspan class=\"relative block icon\"\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\u003e\u003cpath fill=\"currentColor\" d=\"M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z\"/\u003e\u003c/svg\u003e\n\u003c/span\u003e\n  \u003c/span\u003e\n\n  \u003cspan\n    \n      class=\"dark:text-neutral-300\"\n    \n    \u003e\u003cstrong\u003e您也是 Blowfish 用户？\u003c/strong\u003e \u003ca\n  href=\"https://github.com/nunocoracao/blowfish/blob/dev/exampleSite/content/users/users.json\"\n    target=\"_blank\"\n  \u003e提交 PR\u003c/a\u003e来把你的网站加入此列表。\u003c/span\u003e\n\u003c/div\u003e\n\n\u003c/BR\u003e","title":"用户列表","type":"users"},{"content":"","date":"14 August 2020","externalUrl":null,"permalink":"/tags/%E7%A4%BA%E4%BE%8B/","section":"Tags","summary":"","title":"示例","type":"tags"},{"content":"","date":"11 March 2019","externalUrl":null,"permalink":"/tags/css/","section":"Tags","summary":"","title":"Css","type":"tags"},{"content":"","date":"11 March 2019","externalUrl":null,"permalink":"/tags/html/","section":"Tags","summary":"","title":"Html","type":"tags"},{"content":"This article offers a sample of basic Markdown formatting that can be used in Blowfish, also it shows how some basic HTML elements are decorated.\nHeadings # The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 # H2 # H3 # H4 # H5 # H6 # Paragraph # Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes # The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution # Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution # Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables # Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables # Italics Bold Code italics bold code Code Blocks # Code block with backticks # \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces # \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode # 1 2 3 4 5 6 7 8 9 10 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types # Ordered List # First item Second item Third item Unordered List # List item Another item And another item Nested list # Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark # GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk about nothing during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"11 March 2019","externalUrl":null,"permalink":"/samples/markdown/","section":"Samples","summary":"\u003cp\u003eThis article offers a sample of basic Markdown formatting that can be used in Blowfish, also it shows how some basic HTML elements are decorated.\u003c/p\u003e","title":"Markdown","type":"sample"},{"content":"","date":"11 March 2019","externalUrl":null,"permalink":"/tags/markdown/","section":"Tags","summary":"","title":"Markdown","type":"tags"},{"content":"","date":"10 March 2019","externalUrl":null,"permalink":"/tags/gist/","section":"Tags","summary":"","title":"Gist","type":"tags"},{"content":"","date":"10 March 2019","externalUrl":null,"permalink":"/tags/privacy/","section":"Tags","summary":"","title":"Privacy","type":"tags"},{"content":"Hugo ships with several built-in shortcodes for rich content, along with a privacy config and a set of simple shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube # Below is an example using the built-in youtube shortcode.\nTwitter # This example uses the x shortcode to output a Tweet. It requires two named parameters user and id.\n“In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Design Reviewed | Graphic Design History (@DesignReviewed) January 17, 2019 Alternatively, the tweet shortcode can be used to embed a fully marked up Twitter card.\nGist # The gist shortcode can be used to embed a GitHub Gist. It requires two unnamed parameters: the username and ID of the Gist.\nVimeo # The vimeo_simple shortcode will embed a Vimeo video.\n","date":"10 March 2019","externalUrl":null,"permalink":"/samples/rich-content/","section":"Samples","summary":"This is an \u003cem\u003eexample\u003c/em\u003e of a \u003cstrong\u003erich\u003c/strong\u003e content summary.","title":"Rich Content","type":"sample"},{"content":"","date":"10 March 2019","externalUrl":null,"permalink":"/tags/twitter/","section":"Tags","summary":"","title":"Twitter","type":"tags"},{"content":"","date":"10 March 2019","externalUrl":null,"permalink":"/tags/vimeo/","section":"Tags","summary":"","title":"Vimeo","type":"tags"},{"content":"","date":"10 March 2019","externalUrl":null,"permalink":"/tags/youtube/","section":"Tags","summary":"","title":"Youtube","type":"tags"},{"content":"","date":"9 March 2019","externalUrl":null,"permalink":"/tags/latin/","section":"Tags","summary":"","title":"Latin","type":"tags"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt # The Van de Graaf Canon\nMane refeci capiebant unda mulcebat # Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"9 March 2019","externalUrl":null,"permalink":"/samples/placeholder-text/","section":"Samples","summary":"\u003cp\u003eLorem est tota propiore conpellat pectoribus de pectora summo.\u003c/p\u003e","title":"Placeholder Text","type":"sample"},{"content":"","date":"9 March 2019","externalUrl":null,"permalink":"/tags/text/","section":"Tags","summary":"","title":"Text","type":"tags"},{"content":"","date":"8 March 2019","externalUrl":null,"permalink":"/tags/katex/","section":"Tags","summary":"","title":"Katex","type":"tags"},{"content":"KaTeX can be used to render mathematical notation within articles.\nBlowfish will only bundle the KaTeX assets into your project if you make use of mathematical notation. In order for this to work, simply include the katex shortcode within the article. Example below:\n{{\u0026lt; katex \u0026gt;}} Any KaTeX syntax on that page will then be automatically rendered. Use the online reference of supported TeX functions for the available syntax.\nInline notation # Inline notation can be generated by wrapping the expression in \\( and \\) delimiters.\nExample:\n% KaTeX inline notation Inline notation: \\(\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…\\) Inline notation: \\(\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…\\)\nBlock notation # Alternatively, block notation can be generated using $$ delimiters. This will output the expression in its own HTML block.\nExample:\n% KaTeX block notation $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"8 March 2019","externalUrl":null,"permalink":"/samples/mathematical-notation/","section":"Samples","summary":"\u003cp\u003eKaTeX can be used to render mathematical notation within articles.\u003c/p\u003e","title":"Mathematical notation","type":"sample"},{"content":"","date":"8 March 2019","externalUrl":null,"permalink":"/tags/maths/","section":"Tags","summary":"","title":"Maths","type":"tags"},{"content":"","date":"6 March 2019","externalUrl":null,"permalink":"/tags/chart/","section":"Tags","summary":"","title":"Chart","type":"tags"},{"content":"Blowfish includes support for Chart.js using the chart shortcode. Simply wrap the chart markup within the shortcode. Blowfish automatically themes charts to match the configured colorScheme parameter, however the colours can be customised using normal Chart.js syntax.\nRefer to the chart shortcode docs for more details.\nThe examples below are a small selection taken from the official Chart.js docs. You can also view the page source on GitHub to see the markup.\nBar chart # Line chart # Doughnut chart # ","date":"6 March 2019","externalUrl":null,"permalink":"/samples/charts/","section":"Samples","summary":"Blowfish includes Chart.js for powerful charts and data visualisations.","title":"Charts","type":"sample"},{"content":"","date":"6 March 2019","externalUrl":null,"permalink":"/tags/diagram/","section":"Tags","summary":"","title":"Diagram","type":"tags"},{"content":"Mermaid diagrams are supported in Blowfish using the mermaid shortcode. Simply wrap the diagram markup within the shortcode. Blowfish automatically themes Mermaid diagrams to match the configured colorScheme parameter.\nRefer to the mermaid shortcode docs for more details.\nThe examples below are a small selection taken from the official Mermaid docs. You can also view the page source on GitHub to see the markup.\nFlowchart # graph TD A[Christmas] --\u003e|Get money| B(Go shopping) B --\u003e C{Let me think} B --\u003e G[/Another/] C ==\u003e|One| D[Laptop] C --\u003e|Two| E[iPhone] C --\u003e|Three| F[Car] subgraph Section C D E F G end Sequence diagram # sequenceDiagram autonumber par Action 1 Alice-\u003e\u003eJohn: Hello John, how are you? and Action 2 Alice-\u003e\u003eBob: Hello Bob, how are you? end Alice-\u003e\u003e+John: Hello John, how are you? Alice-\u003e\u003e+John: John, can you hear me? John--\u003e\u003e-Alice: Hi Alice, I can hear you! Note right of John: John is perceptive John--\u003e\u003e-Alice: I feel great! loop Every minute John--\u003eAlice: Great! end Class diagram # classDiagram Animal \"1\" \u003c|-- Duck Animal \u003c|-- Fish Animal \u003c--o Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } Entity relationship diagram # erDiagram CUSTOMER }|..|{ DELIVERY-ADDRESS : has CUSTOMER ||--o{ ORDER : places CUSTOMER ||--o{ INVOICE : \"liable for\" DELIVERY-ADDRESS ||--o{ ORDER : receives INVOICE ||--|{ ORDER : covers ORDER ||--|{ ORDER-ITEM : includes PRODUCT-CATEGORY ||--|{ PRODUCT : contains PRODUCT ||--o{ ORDER-ITEM : \"ordered in\" ","date":"6 March 2019","externalUrl":null,"permalink":"/samples/diagrams-flowcharts/","section":"Samples","summary":"It\u0026rsquo;s easy to add diagrams and flowcharts to articles using Mermaid.","title":"Diagrams and Flowcharts","type":"sample"},{"content":"","date":"6 March 2019","externalUrl":null,"permalink":"/tags/graph/","section":"Tags","summary":"","title":"Graph","type":"tags"},{"content":"","date":"6 March 2019","externalUrl":null,"permalink":"/tags/mermaid/","section":"Tags","summary":"","title":"Mermaid","type":"tags"},{"content":"","date":"5 March 2019","externalUrl":null,"permalink":"/tags/emoji/","section":"Tags","summary":"","title":"Emoji","type":"tags"},{"content":"Emoji is supported throughout Blowfish by default. Emoji can be used in titles, menu items and article content.\nNote: The rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack. Emoji replacements are automatic throughout Blowfish, so you can use shorthand codes in your content and front matter and they will be converted to their corresponding symbols at build time.\nExample: see_no_evil :see_no_evil:, hear_no_evil :hear_no_evil:, speak_no_evil :speak_no_evil:.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n","date":"5 March 2019","externalUrl":null,"permalink":"/samples/emoji/","section":"Samples","summary":"📖🏞️🧗🏽🐉🧙🏽‍♂️🧚🏽👸","title":"Emoji 🪂","type":"sample"},{"content":"Thank you for wanting to contribute to Blowfish\u0026rsquo;s community.\nHow to start? # This is a template article that will explain how to create a new article for Blowfish\u0026rsquo;s guide section.\nClone Blowfish # Clone this repo with the following command:\ngit clone https://github.com/nunocoracao/blowfish.git Setup your files # Copy and paste the entire folder where this .md file is.\nName it using the following convention YYYYMM-title, no white spaces are allowed.\nWrite your guide # Write your guide :)\nUse the img folder to place your images and use them:\nImage caption Open a PR # Open a PR and thanks in advance for your contribution.\n","date":"22 December 1987","externalUrl":null,"permalink":"/guides/template/","section":"Recipes","summary":"\u003cp\u003eThank you for wanting to contribute to Blowfish\u0026rsquo;s community.\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003eHow to start? \n    \u003cdiv id=\"how-to-start\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#how-to-start\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eThis is a template article that will explain how to create a new article for Blowfish\u0026rsquo;s guide section.\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003eClone Blowfish \n    \u003cdiv id=\"clone-blowfish\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#clone-blowfish\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eClone this repo with the following command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit clone https://github.com/nunocoracao/blowfish.git\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 class=\"relative group\"\u003eSetup your files \n    \u003cdiv id=\"setup-your-files\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#setup-your-files\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eCopy and paste the entire folder where this \u003ccode\u003e.md\u003c/code\u003e file is.\u003c/p\u003e","title":"Recipe Template","type":"guides"},{"content":"","date":"22 December 1987","externalUrl":null,"permalink":"/tags/template/","section":"Tags","summary":"","title":"Template","type":"tags"},{"content":"2人目のダミー作者の素晴らしいダミープロフィールです。\n","externalUrl":null,"permalink":"/authors/secondauthor/_index.ja/","section":"Authors Taxonomy Listing Example","summary":"\u003cp\u003e2人目のダミー作者の素晴らしいダミープロフィールです。\u003c/p\u003e","title":"2人目のダミー作者","type":"authors"},{"content":"","externalUrl":null,"permalink":"/tags/academia/","section":"Tags","summary":"","title":"Academia","type":"tags"},{"content":"This is the advanced tag. Just like other listing pages in Blowfish, you can add custom content to individual taxonomy terms and it will be displayed at the top of the term listing. :rocket:\nYou can also use these content pages to define Hugo metadata like titles and descriptions that will be used for SEO and other purposes.\n","externalUrl":null,"permalink":"/tags/advanced/_index.it/","section":"Tags","summary":"\u003cp\u003eThis is the advanced tag. Just like other listing pages in Blowfish, you can add custom content to individual taxonomy terms and it will be displayed at the top of the term listing. :rocket:\u003c/p\u003e\n\u003cp\u003eYou can also use these content pages to define Hugo metadata like titles and descriptions that will be used for SEO and other purposes.\u003c/p\u003e","title":"Advanced","type":"tags"},{"content":"This is the advanced tag. Just like other listing pages in Blowfish, you can add custom content to individual taxonomy terms and it will be displayed at the top of the term listing. :rocket:\nYou can also use these content pages to define Hugo metadata like titles and descriptions that will be used for SEO and other purposes.\n","externalUrl":null,"permalink":"/tags/advanced/","section":"Tags","summary":"\u003cp\u003eThis is the advanced tag. Just like other listing pages in Blowfish, you can add custom content to individual taxonomy terms and it will be displayed at the top of the term listing. :rocket:\u003c/p\u003e\n\u003cp\u003eYou can also use these content pages to define Hugo metadata like titles and descriptions that will be used for SEO and other purposes.\u003c/p\u003e","title":"Advanced","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/ai/","section":"Tags","summary":"","title":"AI","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/analytics/","section":"Tags","summary":"","title":"Analytics","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/app-site/","section":"Tags","summary":"","title":"App Site","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/author/","section":"Tags","summary":"","title":"Author","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/author-site/","section":"Tags","summary":"","title":"Author Site","type":"tags"},{"content":"","externalUrl":null,"permalink":"/en/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/tags/blog/","section":"Tags","summary":"","title":"Blog","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/book/","section":"Tags","summary":"","title":"Book","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/business-site/","section":"Tags","summary":"","title":"Business Site","type":"tags"},{"content":" Blowfish dà vita ai tuoi contenuti. :heart_eyes: Questa sezione contiene alcune pagine demo che mostrano come Blowfish esegue il rendering di diversi tipi di contenuto. Puoi anche vedere una pagina di esempio elenco tassonomia.\nNota a margine: Questa pagina è solo un elenco standard di articoli Blowfish e Hugo è stato configurato per generare un tipo di contenuto \u0026ldquo;campioni\u0026rdquo; e visualizzare riepiloghi degli articoli.\n","externalUrl":null,"permalink":"/samples/_index.it/","section":"Samples","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  Blowfish dà vita ai tuoi contenuti. :heart_eyes:\n\u003c/div\u003e\n\n\u003cp\u003eQuesta sezione contiene alcune pagine demo che mostrano come Blowfish esegue il rendering di diversi tipi di contenuto. Puoi anche vedere una pagina di esempio \u003ca\n  href=\"https://muhammadfajarb.github.io/tags/\"\u003eelenco tassonomia\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003eNota a margine:\u003c/strong\u003e Questa pagina è solo un elenco standard di articoli Blowfish e Hugo è stato configurato per generare un tipo di contenuto \u0026ldquo;campioni\u0026rdquo; e visualizzare riepiloghi degli articoli.\u003c/em\u003e\u003c/p\u003e","title":"Campioni","type":"samples"},{"content":"","externalUrl":null,"permalink":"/en/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/tags/class/","section":"Tags","summary":"","title":"Class","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/college-club-site/","section":"Tags","summary":"","title":"College Club Site","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/comics-site/","section":"Tags","summary":"","title":"Comics Site","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/comments/","section":"Tags","summary":"","title":"Comments","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/company-site/","section":"Tags","summary":"","title":"Company Site","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/config/","section":"Tags","summary":"","title":"Config","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/content/","section":"Tags","summary":"","title":"Content","type":"tags"},{"content":"","externalUrl":null,"permalink":"/en/courses/","section":"Courses","summary":"","title":"Courses","type":"courses"},{"content":"","externalUrl":null,"permalink":"/series/courses/","section":"Series","summary":"","title":"Courses","type":"series"},{"content":"","externalUrl":null,"permalink":"/tags/cv/","section":"Tags","summary":"","title":"CV","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/deployment/","section":"Tags","summary":"","title":"Deployment","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/digital-garden/","section":"Tags","summary":"","title":"Digital Garden","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/docs/","section":"Tags","summary":"","title":"Docs","type":"tags"},{"content":" Simple, yet powerful. Learn how to use Blowfish and its features. This section contains everything you need to know about Blowfish. If you\u0026rsquo;re new, check out the Installation guide to begin or visit the Samples section to see what Blowfish can do.\n","externalUrl":null,"permalink":"/docs/","section":"Documentation","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  Simple, yet powerful. Learn how to use Blowfish and its features.\n\u003c/div\u003e\n\n\u003cp\u003eThis section contains everything you need to know about Blowfish. If you\u0026rsquo;re new, check out the \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/installation/\"\u003eInstallation\u003c/a\u003e guide to begin or visit the \u003ca\n  href=\"https://muhammadfajarb.github.io/samples/\"\u003eSamples\u003c/a\u003e section to see what Blowfish can do.\u003c/p\u003e\n\u003chr\u003e","title":"Documentation","type":"docs"},{"content":"","externalUrl":null,"permalink":"/series/documentation/","section":"Series","summary":"","title":"Documentation","type":"series"},{"content":"","externalUrl":null,"permalink":"/tags/documentation/","section":"Tags","summary":"","title":"Documentation","type":"tags"},{"content":" Semplice ma potente. Scopri come utilizzare Blowfish e le sue funzionalità. Questa sezione contiene tutto ciò che devi sapere su Blowfish. Se sei nuovo, consulta la guida Installazione per iniziare o visita la sezione Esempi per vedere cosa può fare Blowfish.\n","externalUrl":null,"permalink":"/docs/_index.it/","section":"Documentation","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  Semplice ma potente. Scopri come utilizzare Blowfish e le sue funzionalità.\n\u003c/div\u003e\n\n\u003cp\u003eQuesta sezione contiene tutto ciò che devi sapere su Blowfish. Se sei nuovo, consulta la guida \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/installation/\"\u003eInstallazione\u003c/a\u003e per iniziare o visita la sezione \u003ca\n  href=\"https://muhammadfajarb.github.io/samples/\"\u003eEsempi\u003c/a\u003e per vedere cosa può fare Blowfish.\u003c/p\u003e","title":"Documenti","type":"docs"},{"content":"","externalUrl":null,"permalink":"/tags/doll-photography/","section":"Tags","summary":"","title":"Doll Photography","type":"tags"},{"content":"假装这里有一份第二位作者的简介。\n","externalUrl":null,"permalink":"/authors/secondauthor/_index.zh-cn/","section":"Authors Taxonomy Listing Example","summary":"\u003cp\u003e假装这里有一份第二位作者的简介。\u003c/p\u003e","title":"Dummy Second Author","type":"authors"},{"content":"Un rapido esempio di come iniziare a utilizzare le tassonomie degli autori nei tuoi articoli.\n","externalUrl":null,"permalink":"/authors/_index.it/","section":"Authors Taxonomy Listing Example","summary":"\u003cp\u003eUn rapido esempio di come iniziare a utilizzare le tassonomie degli autori nei tuoi articoli.\u003c/p\u003e","title":"Esempio di elenco di tassonomia degli autori","type":"authors"},{"content":"","externalUrl":null,"permalink":"/tags/example/","section":"Tags","summary":"","title":"Example","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/favicons/","section":"Tags","summary":"","title":"Favicons","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/firebase/","section":"Tags","summary":"","title":"Firebase","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/front-matter/","section":"Tags","summary":"","title":"Front Matter","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/game-site/","section":"Tags","summary":"","title":"Game Site","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/games-site/","section":"Tags","summary":"","title":"Games Site","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/github/","section":"Tags","summary":"","title":"Github","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/homepage/","section":"Tags","summary":"","title":"Homepage","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/hosting/","section":"Tags","summary":"","title":"Hosting","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/icon/","section":"Tags","summary":"","title":"Icon","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/installation/","section":"Tags","summary":"","title":"Installation","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/layouts/","section":"Tags","summary":"","title":"Layouts","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/lead/","section":"Tags","summary":"","title":"Lead","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/likes/","section":"Tags","summary":"","title":"Likes","type":"tags"},{"content":" Welcome to Machine Learning course. Machine learning (ML) is a branch of artificial intelligence (AI) that allows computers to learn from data without being explicitly programmed. Instead of using fixed instructions, machine learning utilizes algorithms that enable systems to discover patterns, make predictions, and improve their performance over time based on experience. Machine learning approaches can be divided into four main categories: supervised learning, unsupervised learning, semi-supervised learning, and reinforcement learning.\n","externalUrl":null,"permalink":"/en/courses/machine-learning/","section":"Courses","summary":"","title":"Machine Learning","type":"courses"},{"content":"","externalUrl":null,"permalink":"/tags/modeller/","section":"Tags","summary":"","title":"Modeller","type":"tags"},{"content":"","externalUrl":null,"permalink":"/en/","section":"Muhammad Fajar B","summary":"","title":"Muhammad Fajar B","type":"page"},{"content":"","externalUrl":null,"permalink":"/tags/netlify/","section":"Tags","summary":"","title":"Netlify","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/new/","section":"Tags","summary":"","title":"New","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/news-that-matters-blog/","section":"Tags","summary":"","title":"News That Matters Blog","type":"tags"},{"content":"La fantastica biografia di Nuno.\n","externalUrl":null,"permalink":"/authors/muhammadfajarb/_index.it/","section":"Authors Taxonomy Listing Example","summary":"\u003cp\u003eLa fantastica biografia di Nuno.\u003c/p\u003e","title":"Nuno Coraçao","type":"authors"},{"content":"Nuno の素晴らしいダミープロフィールです。\n","externalUrl":null,"permalink":"/authors/muhammadfajarb/_index.ja/","section":"Authors Taxonomy Listing Example","summary":"\u003cp\u003eNuno の素晴らしいダミープロフィールです。\u003c/p\u003e","title":"Nuno Coração","type":"authors"},{"content":"假装这里有一份 Nuno 的简介。\n","externalUrl":null,"permalink":"/authors/muhammadfajarb/_index.zh-cn/","section":"Authors Taxonomy Listing Example","summary":"\u003cp\u003e假装这里有一份 Nuno 的简介。\u003c/p\u003e","title":"Nuno Coração","type":"authors"},{"content":"","externalUrl":null,"permalink":"/tags/organization-site/","section":"Tags","summary":"","title":"Organization Site","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/outdoor-blog/","section":"Tags","summary":"","title":"Outdoor Blog","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/partials/","section":"Tags","summary":"","title":"Partials","type":"tags"},{"content":"","externalUrl":null,"permalink":"/series/pemrograman-web/","section":"Series","summary":"","title":"Pemrograman Web","type":"series"},{"content":"","externalUrl":null,"permalink":"/tags/personal-blog/","section":"Tags","summary":"","title":"Personal Blog","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/personal-site/","section":"Tags","summary":"","title":"Personal Site","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/personal-website/","section":"Tags","summary":"","title":"Personal Website","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/portfolio/","section":"Tags","summary":"","title":"Portfolio","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/portfolio-site/","section":"Tags","summary":"","title":"Portfolio Site","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/project-site/","section":"Tags","summary":"","title":"Project Site","type":"tags"},{"content":" Recipes, guides, and tutorials for Blowfish Blowfish user? To add your guide to this list, check the template.\nThis section contains guides for a variety of scenarios on how to configure your theme. If you\u0026rsquo;re new, check out the Installation guide to begin or visit the Samples section to see what Blowfish can do.\n","externalUrl":null,"permalink":"/guides/_index.it/","section":"Recipes","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  Recipes, guides, and tutorials for Blowfish\n\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003eBlowfish user?\u003c/strong\u003e To add your guide to this list, \u003ca\n  href=\"/guides/template/\"\u003echeck the template\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis section contains guides for a variety of scenarios on how to configure your theme. If you\u0026rsquo;re new, check out the \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/installation/\"\u003eInstallation\u003c/a\u003e guide to begin or visit the \u003ca\n  href=\"https://muhammadfajarb.github.io/samples/\"\u003eSamples\u003c/a\u003e section to see what Blowfish can do.\u003c/p\u003e\n\u003chr\u003e","title":"Recipes","type":"guides"},{"content":"","externalUrl":null,"permalink":"/tags/render/","section":"Tags","summary":"","title":"Render","type":"tags"},{"content":"La fantastica biografia fittizia di Dummy Second Author.\n","externalUrl":null,"permalink":"/authors/secondauthor/_index.it/","section":"Authors Taxonomy Listing Example","summary":"\u003cp\u003eLa fantastica biografia fittizia di Dummy Second Author.\u003c/p\u003e","title":"Secondo autore fittizio","type":"authors"},{"content":"","externalUrl":null,"permalink":"/tags/seminars/","section":"Tags","summary":"","title":"Seminars","type":"tags"},{"content":"","externalUrl":null,"permalink":"/en/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/tags/series/","section":"Tags","summary":"","title":"Series","type":"tags"},{"content":" See what\u0026rsquo;s possible with Blowfish. This section contains links to example templates and pages created using Blowfish to get you inspired.\n","externalUrl":null,"permalink":"/examples/_index.it/","section":"Showcase","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  See what\u0026rsquo;s possible with Blowfish.\n\u003c/div\u003e\n\n\u003cp\u003eThis section contains links to example templates and pages created using Blowfish to get you inspired.\u003c/p\u003e\n\u003chr\u003e","title":"Showcase","type":"examples"},{"content":" See what\u0026rsquo;s possible with Blowfish. This section contains links to example templates and pages created using Blowfish to get you inspired.\n","externalUrl":null,"permalink":"/examples/_index.zh-cn/","section":"Showcase","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  See what\u0026rsquo;s possible with Blowfish.\n\u003c/div\u003e\n\n\u003cp\u003eThis section contains links to example templates and pages created using Blowfish to get you inspired.\u003c/p\u003e\n\u003chr\u003e","title":"Showcase","type":"examples"},{"content":"","externalUrl":null,"permalink":"/tags/software-developer/","section":"Tags","summary":"","title":"Software Developer","type":"tags"},{"content":"Blowfish ha il pieno supporto per le tassonomie Hugo e si adatterà a qualsiasi impostazione tassonomica. Gli elenchi di tassonomia come questo supportano anche il contenuto personalizzato da visualizzare sopra l\u0026rsquo;elenco dei termini.\nQuest\u0026rsquo;area può essere utilizzata per aggiungere testo descrittivo aggiuntivo a ciascuna tassonomia. Dai un\u0026rsquo;occhiata al tag avanzato di seguito per vedere come portare questo concetto ancora oltre.\n","externalUrl":null,"permalink":"/tags/_index.it/","section":"Tags","summary":"\u003cp\u003eBlowfish ha il pieno supporto per le tassonomie Hugo e si adatterà a qualsiasi impostazione tassonomica. Gli elenchi di tassonomia come questo supportano anche il contenuto personalizzato da visualizzare sopra l\u0026rsquo;elenco dei termini.\u003c/p\u003e\n\u003cp\u003eQuest\u0026rsquo;area può essere utilizzata per aggiungere testo descrittivo aggiuntivo a ciascuna tassonomia. Dai un\u0026rsquo;occhiata al \u003ca\n  href=\"https://muhammadfajarb.github.io/tags/advanced/\"\u003etag avanzato\u003c/a\u003e di seguito per vedere come portare questo concetto ancora oltre.\u003c/p\u003e\n\u003chr\u003e","title":"Tag","type":"tags"},{"content":"","externalUrl":null,"permalink":"/en/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/tech-blog/","section":"Tags","summary":"","title":"Tech Blog","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/technology-blog/","section":"Tags","summary":"","title":"Technology Blog","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/theme-author/","section":"Tags","summary":"","title":"Theme Author","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/videogame-developer/","section":"Tags","summary":"","title":"Videogame Developer","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/views/","section":"Tags","summary":"","title":"Views","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/web/","section":"Tags","summary":"","title":"Web","type":"tags"},{"content":" Blowfish はあなたのコンテンツに命を宿します。:heart_eyes: このセクションは、 Blowfish で様々な種類のコンテンツをどのように表示するのかを紹介するデモページを含みます。例としては分類一覧ページも参考になります。\nサイドノート: このページは一般的な Blowfish のリストで、 Hugo が生成した samples コンテンツタイプと記事の要約を表示する様に設定しています。\n","externalUrl":null,"permalink":"/samples/_index.ja/","section":"Samples","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  Blowfish はあなたのコンテンツに命を宿します。:heart_eyes:\n\u003c/div\u003e\n\n\u003cp\u003eこのセクションは、 Blowfish で様々な種類のコンテンツをどのように表示するのかを紹介するデモページを含みます。例としては\u003ca\n  href=\"https://muhammadfajarb.github.io/tags/\"\u003e分類一覧\u003c/a\u003eページも参考になります。\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003eサイドノート:\u003c/strong\u003e このページは一般的な Blowfish のリストで、 Hugo が生成した \u003ccode\u003esamples\u003c/code\u003e コンテンツタイプと記事の要約を表示する様に設定しています。\u003c/em\u003e\u003c/p\u003e\n\u003chr\u003e","title":"サンプル","type":"samples"},{"content":" Blowfish で何が出来るか見てみる。 このセクションはテンプレートの例やインスピレーションを得ることの出来る Blowfish を使用して作成されたページのリンクがあります。\n","externalUrl":null,"permalink":"/examples/_index.ja/","section":"Showcase","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  Blowfish で何が出来るか見てみる。\n\u003c/div\u003e\n\n\u003cp\u003eこのセクションはテンプレートの例やインスピレーションを得ることの出来る Blowfish を使用して作成されたページのリンクがあります。\u003c/p\u003e\n\u003chr\u003e","title":"ショーケース","type":"examples"},{"content":"Blowfish は Hugo の分類システムを完全にサポートし、どのような分類システムの設定でも適合できます。このような分類システムのリストは、用語リストの上に表示されるカスタムコンテンツもサポートしています。\nこのエリアはそれぞれの分類システムに追加の説明をする時に利用します。以下の高度なタグを確認して、このコンセプトをさらに発展させる方法をご覧ください。\n","externalUrl":null,"permalink":"/tags/_index.ja/","section":"Tags","summary":"\u003cp\u003eBlowfish は Hugo の分類システムを完全にサポートし、どのような分類システムの設定でも適合できます。このような分類システムのリストは、用語リストの上に表示されるカスタムコンテンツもサポートしています。\u003c/p\u003e\n\u003cp\u003eこのエリアはそれぞれの分類システムに追加の説明をする時に利用します。以下の\u003ca\n  href=\"https://muhammadfajarb.github.io/tags/advanced/\"\u003e高度なタグ\u003c/a\u003eを確認して、このコンセプトをさらに発展させる方法をご覧ください。\u003c/p\u003e\n\u003chr\u003e","title":"タグ","type":"tags"},{"content":" シンプル、それでいて強力。 Blowfish の利用方法と特徴について学ぶ。 このセクションでは、Blowfish について知っておくべきことをすべて網羅しています。初めての方は、まずインストールガイドをご覧いただくか、サンプルセクションで Blowfish で何ができるかを確認してみてください。\n","externalUrl":null,"permalink":"/docs/_index.ja/","section":"Documentation","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  シンプル、それでいて強力。 Blowfish の利用方法と特徴について学ぶ。\n\u003c/div\u003e\n\n\u003cp\u003eこのセクションでは、Blowfish について知っておくべきことをすべて網羅しています。初めての方は、まず\u003ca\n  href=\"https://muhammadfajarb.github.io/docs/installation/\"\u003eインストール\u003c/a\u003eガイドをご覧いただくか、\u003ca\n  href=\"https://muhammadfajarb.github.io/samples/\"\u003eサンプル\u003c/a\u003eセクションで Blowfish で何ができるかを確認してみてください。\u003c/p\u003e\n\u003chr\u003e","title":"ドキュメント","type":"docs"},{"content":" Blowfish のためのレシピ、ガイド、チュートリアル Blowfish ユーザーですか? この一覧にあなたのガイドを加える際は、テンプレートを確認してください。\nこのセクションではあなたのテーマの設定方法する様々なシナリオを含んでいます。新しく作成する場合は、開始するためにインストールガイド、または Blowfish が何が出来るかサンプルセクションに訪れてください。\n","externalUrl":null,"permalink":"/guides/_index.ja/","section":"Recipes","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  Blowfish のためのレシピ、ガイド、チュートリアル\n\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003eBlowfish ユーザーですか?\u003c/strong\u003e この一覧にあなたのガイドを加える際は、\u003ca\n  href=\"/guides/template/\"\u003eテンプレートを確認\u003c/a\u003eしてください。\u003c/p\u003e\n\u003cp\u003eこのセクションではあなたのテーマの設定方法する様々なシナリオを含んでいます。新しく作成する場合は、開始するために\u003ca\n  href=\"https://muhammadfajarb.github.io/docs/installation/\"\u003eインストール\u003c/a\u003eガイド、または Blowfish が何が出来るか\u003ca\n  href=\"https://muhammadfajarb.github.io/samples/\"\u003eサンプル\u003c/a\u003eセクションに訪れてください。\u003c/p\u003e\n\u003chr\u003e","title":"レシピ","type":"guides"},{"content":"在你的文章中添加不同作者的简单示例。\n","externalUrl":null,"permalink":"/authors/_index.zh-cn/","section":"Authors Taxonomy Listing Example","summary":"\u003cp\u003e在你的文章中添加不同作者的简单示例。\u003c/p\u003e","title":"作者列表示例","type":"authors"},{"content":" Blowfish 的使用指南和教程 您是 Blowfish 的用户吗? 要将您自己编写的指南添加到此列表，请查看参考模板。\n本部分包含有关如何配置主题的各种指南。如果您是新用户，请查看 安装 指南或查看 示例 部分来了解 Blowfish 能做出什么效果的网页。\n","externalUrl":null,"permalink":"/guides/_index.zh-cn/","section":"Recipes","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  Blowfish 的使用指南和教程\n\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e您是 Blowfish 的用户吗?\u003c/strong\u003e 要将您自己编写的指南添加到此列表，请查看\u003ca\n  href=\"/guides/template/\"\u003e参考模板\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e本部分包含有关如何配置主题的各种指南。如果您是新用户，请查看 \u003ca\n  href=\"https://muhammadfajarb.github.io/docs/installation/\"\u003e安装\u003c/a\u003e 指南或查看 \u003ca\n  href=\"https://muhammadfajarb.github.io/samples/\"\u003e示例\u003c/a\u003e 部分来了解 Blowfish 能做出什么效果的网页。\u003c/p\u003e\n\u003chr\u003e","title":"使用指南","type":"guides"},{"content":" 了解如何使用简单而强大的 Blowfish。 本章节包含了你需要了解的有关 Blowfish 的所有信息。如果你是新用户，请查阅安装 指南，或者访问示例 来了解 Blowfish 能做什么。\n","externalUrl":null,"permalink":"/docs/_index.zh-cn/","section":"Documentation","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  了解如何使用简单而强大的 Blowfish。\n\u003c/div\u003e\n\n\u003cp\u003e本章节包含了你需要了解的有关 Blowfish 的所有信息。如果你是新用户，请查阅\u003ca\n  href=\"https://muhammadfajarb.github.io/docs/installation/\"\u003e安装\u003c/a\u003e 指南，或者访问\u003ca\n  href=\"https://muhammadfajarb.github.io/samples/\"\u003e示例\u003c/a\u003e 来了解 Blowfish 能做什么。\u003c/p\u003e\n\u003chr\u003e","title":"文档","type":"docs"},{"content":"Blowfish 支持基于 Hugo 的所有分类方法。同时，当前的标签预览页也支持展示自定义内容。\n在这里可以为每个分类添加额外的描述信息。查看下面的高级标签页面，了解更多。\n","externalUrl":null,"permalink":"/tags/_index.zh-cn/","section":"Tags","summary":"\u003cp\u003eBlowfish 支持基于 Hugo 的所有分类方法。同时，当前的标签预览页也支持展示自定义内容。\u003c/p\u003e\n\u003cp\u003e在这里可以为每个分类添加额外的描述信息。查看下面的\u003ca\n  href=\"https://muhammadfajarb.github.io/tags/advanced/\"\u003e高级标签\u003c/a\u003e页面，了解更多。\u003c/p\u003e\n\u003chr\u003e","title":"标签","type":"tags"},{"content":" Blowfish 让你的内容栩栩如生。 :heart_eyes: 本节包含一些示例页面，展示了Blowfish如何呈现不同类型的内容。你还可以参考标签页面的示例。\n旁注： 这个页面只是一个标准的Blowfish文章列表，并且已经配置了Hugo来生成一个 samples 内容类型并显示文章摘要。\n","externalUrl":null,"permalink":"/samples/_index.zh-cn/","section":"Samples","summary":"\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\n  Blowfish 让你的内容栩栩如生。 :heart_eyes:\n\u003c/div\u003e\n\n\u003cp\u003e本节包含一些示例页面，展示了Blowfish如何呈现不同类型的内容。你还可以参考\u003ca\n  href=\"https://muhammadfajarb.github.io/tags/\"\u003e标签\u003c/a\u003e页面的示例。\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003e旁注：\u003c/strong\u003e 这个页面只是一个标准的Blowfish文章列表，并且已经配置了Hugo来生成一个 \u003ccode\u003esamples\u003c/code\u003e 内容类型并显示文章摘要。\u003c/em\u003e\u003c/p\u003e\n\u003chr\u003e","title":"示例","type":"samples"},{"content":"あなたの記事で著者のタクソノミーを使う方法の簡単な例です。\n","externalUrl":null,"permalink":"/authors/_index.ja/","section":"Authors Taxonomy Listing Example","summary":"\u003cp\u003eあなたの記事で著者のタクソノミーを使う方法の簡単な例です。\u003c/p\u003e","title":"著者のタクソノミーリストの例","type":"authors"},{"content":"こちらは高度なタグです。 Blowfish の他のページの様に、個々の分類条項にカスタムコンテンツの追加やそれを条項リストの一番上に表示することが可能です。:rocket:\nタイトルや説明など SEO や他の目的に利用するためのHugo のメタデータを定義するためにこれらのコンテンツページも利用可能です。\n","externalUrl":null,"permalink":"/tags/advanced/_index.ja/","section":"Tags","summary":"\u003cp\u003eこちらは高度なタグです。 Blowfish の他のページの様に、個々の分類条項にカスタムコンテンツの追加やそれを条項リストの一番上に表示することが可能です。:rocket:\u003c/p\u003e\n\u003cp\u003eタイトルや説明など SEO や他の目的に利用するためのHugo のメタデータを定義するためにこれらのコンテンツページも利用可能です。\u003c/p\u003e","title":"高度なタグ","type":"tags"},{"content":"这是高级标记。类似其他 Blowfish 中的其他列表页面，你可以在分类列表页添加自定义内容，这部分内容会显示在顶部。:rocket:\n你也可以用这些内容来定义 Hugo 的元数据，比如标题和描述。这些内容可以被用来增强 SEO 或其他目的。\n","externalUrl":null,"permalink":"/tags/advanced/_index.zh-cn/","section":"Tags","summary":"\u003cp\u003e这是高级标记。类似其他 Blowfish 中的其他列表页面，你可以在分类列表页添加自定义内容，这部分内容会显示在顶部。:rocket:\u003c/p\u003e\n\u003cp\u003e你也可以用这些内容来定义 Hugo 的元数据，比如标题和描述。这些内容可以被用来增强 SEO 或其他目的。\u003c/p\u003e","title":"高级","type":"tags"}]